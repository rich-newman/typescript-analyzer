<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Community.VisualStudio.Toolkit</name>
    </assembly>
    <members>
        <member name="T:Community.VisualStudio.Toolkit.Debugger">
            <summary>
            Handles debugging.
            </summary>
        </member>
        <member name="T:Community.VisualStudio.Toolkit.Debugger.DebugMode">
            <summary>
            The mode of the debugger.
            </summary>
        </member>
        <member name="F:Community.VisualStudio.Toolkit.Debugger.DebugMode.NotDebugging">
            <summary>The debugger is not attached.</summary>
        </member>
        <member name="F:Community.VisualStudio.Toolkit.Debugger.DebugMode.AtBreakpoint">
            <summary>The debugger is stopped at a breakpoint.</summary>
        </member>
        <member name="F:Community.VisualStudio.Toolkit.Debugger.DebugMode.Running">
            <summary>The debugger is attached and running.</summary>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.Debugger.IsDebuggingAsync">
            <summary>
            Checks if the debugger is attached.
            </summary>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.Debugger.GetDebugModeAsync">
            <summary>
            Returns the current mode for the debugger.
            </summary>
        </member>
        <member name="T:Community.VisualStudio.Toolkit.ProvideBraceCompletionAttribute">
            <summary>
            Adds support for brace completion to the specified language.
            </summary>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.ProvideBraceCompletionAttribute.#ctor(System.String)">
            <summary>
            Creates a new instance.
            </summary>
            <param name="languageName">The language name to add brace completion to.</param>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.ProvideBraceCompletionAttribute.Register(Microsoft.VisualStudio.Shell.RegistrationAttribute.RegistrationContext)">
            <inheritdoc/>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.ProvideBraceCompletionAttribute.Unregister(Microsoft.VisualStudio.Shell.RegistrationAttribute.RegistrationContext)">
            <inheritdoc/>
        </member>
        <member name="T:Community.VisualStudio.Toolkit.ProvideFileIconAttribute">
            <summary>
            Associates an <c>ImageMoniker</c> icon to a file extension in Solution Explorer
            </summary>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.ProvideFileIconAttribute.#ctor(System.String,System.String)">
            <summary>
            Associates an icon with a file extension.
            </summary>
            <param name="fileExtension">Any file extension. Must start with a dot.</param>
            <param name="monikerName">Could be "KnownMonikers.Save" or "guid:id".</param>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.ProvideFileIconAttribute.FileExtension">
            <summary>
            The file extension that's the target of the icon.
            </summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.ProvideFileIconAttribute.MonikerName">
            <summary>
            The <c>ImageMoniker</c> identifier. It's either a KnownMonker or a guid:id pair.
            </summary>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.ProvideFileIconAttribute.Register(Microsoft.VisualStudio.Shell.RegistrationAttribute.RegistrationContext)">
            <inheritdoc/>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.ProvideFileIconAttribute.Unregister(Microsoft.VisualStudio.Shell.RegistrationAttribute.RegistrationContext)">
            <inheritdoc/>
        </member>
        <member name="T:Community.VisualStudio.Toolkit.ProvideGalleryFeedAttribute">
            <summary>
            Registers a feed gallery to the extensions manager
            </summary>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.ProvideGalleryFeedAttribute.#ctor(System.String,System.String,System.String)">
            <summary>
            Registers a feed gallery
            </summary>
            <param name="guid">A unique guid to use for registering the feed.</param>
            <param name="name">The name of the feed as it shows up in the Extension Manager dialog.</param>
            <param name="url">The absolute URL to the atom feed.</param>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.ProvideGalleryFeedAttribute.Guid">
            <summary>
            A unique guid to use for registering the feed.
            </summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.ProvideGalleryFeedAttribute.Name">
            <summary>
            The name of the feed as it shows up in the Extension Manager dialog.
            </summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.ProvideGalleryFeedAttribute.Url">
            <summary>
            The absolute URL to the atom feed.
            </summary>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.ProvideGalleryFeedAttribute.Register(Microsoft.VisualStudio.Shell.RegistrationAttribute.RegistrationContext)">
            <inheritdoc/>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.ProvideGalleryFeedAttribute.Unregister(Microsoft.VisualStudio.Shell.RegistrationAttribute.RegistrationContext)">
            <inheritdoc/>
        </member>
        <member name="T:Community.VisualStudio.Toolkit.Build">
            <summary>
            Handles building of solutions and projects.
            </summary>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.Build.CancelBuildAsync">
            <summary>
            Cancels the solution build asynchronously
            </summary>
            <returns>Returns 'true' if successfull</returns>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.Build.BuildSolutionAsync(Community.VisualStudio.Toolkit.BuildAction)">
            <summary>
            Builds the solution.
            </summary>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.Build.BuildProjectAsync(Community.VisualStudio.Toolkit.SolutionItem,Community.VisualStudio.Toolkit.BuildAction)">
            <summary>
            Builds the specified project.
            </summary>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.Build.ProjectIsUpToDateAsync(Community.VisualStudio.Toolkit.SolutionItem)">
            <summary>
            Checks if the project build is up to date.
            </summary>
        </member>
        <member name="T:Community.VisualStudio.Toolkit.BuildAction">
            <summary>
            The types of build actions for a solution- or project build.
            </summary>
        </member>
        <member name="F:Community.VisualStudio.Toolkit.BuildAction.Build">
            <summary>Builds the solution/project.</summary>
        </member>
        <member name="F:Community.VisualStudio.Toolkit.BuildAction.Rebuild">
            <summary>Rebuilds the solution/project.</summary>
        </member>
        <member name="F:Community.VisualStudio.Toolkit.BuildAction.Clean">
            <summary>Cleans the solution/project.</summary>
        </member>
        <member name="T:Community.VisualStudio.Toolkit.Events">
            <summary>A collection of events.</summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.Events.BuildEvents">
            <summary>
            Events related to building projects and solutions.
            </summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.Events.DebuggerEvents">
            <summary>
            Events related to the debugger in Visual Studio.
            </summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.Events.DocumentEvents">
            <summary>
            Events related to the editor documents.
            </summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.Events.ProjectItemsEvents">
            <summary>
            Events related to project items
            </summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.Events.SelectionEvents">
            <summary>
            Events related to the selection in Visual Studio
            </summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.Events.ShellEvents">
            <summary>
            Events related to the Visual Studio Shell.
            </summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.Events.SolutionEvents">
            <summary>
            Events related to the editor documents.
            </summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.Events.WindowEvents">
            <summary>
            Events related to the window frames.
            </summary>
        </member>
        <member name="T:Community.VisualStudio.Toolkit.BuildEvents">
            <summary>
            Events related to building projects and solutions.
            </summary>
        </member>
        <member name="E:Community.VisualStudio.Toolkit.BuildEvents.SolutionBuildStarted">
            <summary>
            Fires when the solution starts building.
            </summary>
        </member>
        <member name="E:Community.VisualStudio.Toolkit.BuildEvents.SolutionBuildDone">
            <summary>
             Fires when the solution is done building.
            </summary>
        </member>
        <member name="E:Community.VisualStudio.Toolkit.BuildEvents.SolutionBuildCancelled">
            <summary>
             Fires when the solution build was cancelled
            </summary>
        </member>
        <member name="E:Community.VisualStudio.Toolkit.BuildEvents.ProjectBuildStarted">
            <summary>
            Fires when a project starts building.
            </summary>
        </member>
        <member name="E:Community.VisualStudio.Toolkit.BuildEvents.ProjectBuildDone">
            <summary>
            Fires when a project is done building.
            </summary>
        </member>
        <member name="E:Community.VisualStudio.Toolkit.BuildEvents.ProjectCleanStarted">
            <summary>
            Fires when a project starts cleaning.
            </summary>
        </member>
        <member name="E:Community.VisualStudio.Toolkit.BuildEvents.ProjectConfigurationChanged">
            <summary>
            Fires when a project configuration has changed
            </summary>
        </member>
        <member name="E:Community.VisualStudio.Toolkit.BuildEvents.SolutionConfigurationChanged">
            <summary>
            Fires when a solution configuration has changed
            </summary>
        </member>
        <member name="E:Community.VisualStudio.Toolkit.BuildEvents.ProjectCleanDone">
            <summary>
            Fires when a project is done cleaning.
            </summary>
        </member>
        <member name="T:Community.VisualStudio.Toolkit.ProjectBuildDoneEventArgs">
            <inheritdoc/>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.ProjectBuildDoneEventArgs.#ctor(Community.VisualStudio.Toolkit.Project,System.Boolean)">
            <summary>
            Creates a new instance of the event args.
            </summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.ProjectBuildDoneEventArgs.Project">
            <summary>The project that finished building.</summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.ProjectBuildDoneEventArgs.IsSuccessful">
            <summary>Indicates if the build was successful.</summary>
        </member>
        <member name="T:Community.VisualStudio.Toolkit.BaseCommand`1">
            <summary>
            A base class that makes it easier to handle commands.
            </summary>
            <example>
            <code>
            [Command("489ba882-f600-4c8b-89db-eb366a4ee3b3", 0x0100)]
            public class TestCommand : BaseCommand&lt;TestCommand&gt;
            {
                protected override Task ExecuteAsync(OleMenuCmdEventArgs e)
                {
                    return base.ExecuteAsync(e);
                }
            }
            </code>
            </example>
            <typeparam name="T">The implementation type itself.</typeparam>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.BaseCommand`1.InitializeAsync(Microsoft.VisualStudio.Shell.AsyncPackage)">
            <summary>
            Initializes the command. This method must be called from the <see cref="M:Microsoft.VisualStudio.Shell.AsyncPackage.InitializeAsync(System.Threading.CancellationToken,System.IProgress{Microsoft.VisualStudio.Shell.ServiceProgressData})"/> method for the command to work.
            </summary>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.BaseCommand`1.InitializeCompletedAsync">
            <summary>Allows the implementor to manipulate the command before its execution.</summary>
            <remarks>
            This method is invoked right after the <see cref="M:Community.VisualStudio.Toolkit.BaseCommand`1.InitializeAsync(Microsoft.VisualStudio.Shell.AsyncPackage)"/> method is executed and allows you to
            manipulate the <see cref="P:Community.VisualStudio.Toolkit.BaseCommand.Command"/> property etc. as part of the initialization phase.
            </remarks>
        </member>
        <member name="T:Community.VisualStudio.Toolkit.BaseCommand">
            <summary>
            A base class that makes it easier to handle commands.
            </summary>
            <example>
            <code>
            [Command("489ba882-f600-4c8b-89db-eb366a4ee3b3", 0x0100)]
            public class TestCommand : BaseCommand&lt;TestCommand&gt;
            {
                protected override Task ExecuteAsync(OleMenuCmdEventArgs e)
                {
                    return base.ExecuteAsync(e);
                }
            }
            </code>
            </example>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.BaseCommand.Command">
            <summary>
            The command object associated with the command ID (GUID/ID).
            </summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.BaseCommand.Package">
            <summary>
            The package class that initialized this class.
            </summary>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.BaseCommand.Execute(System.Object,System.EventArgs)">
            <summary>Executes synchronously when the command is invoked.</summary>
            <remarks>
            Use this method instead of <see cref="M:Community.VisualStudio.Toolkit.BaseCommand.ExecuteAsync(Microsoft.VisualStudio.Shell.OleMenuCmdEventArgs)"/> if you're not performing any async tasks using async/await patterns.
            </remarks>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.BaseCommand.ExecuteAsync(Microsoft.VisualStudio.Shell.OleMenuCmdEventArgs)">
            <summary>Executes asynchronously when the command is invoked and <see cref="M:Community.VisualStudio.Toolkit.BaseCommand.Execute(System.Object,System.EventArgs)"/> isn't overridden.</summary>
            <remarks>Use this method instead of <see cref="M:Community.VisualStudio.Toolkit.BaseCommand.Execute(System.Object,System.EventArgs)"/> if you're invoking any async tasks by using async/await patterns.</remarks>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.BaseCommand.BeforeQueryStatus(System.EventArgs)">
            <summary>Override this method to control the commands visibility and other properties.</summary>
        </member>
        <member name="T:Community.VisualStudio.Toolkit.BaseDynamicCommand`2">
            <summary>
            A base class that makes it easier to handle dynamic menu commands.
            </summary>
            <example>
            <code>
            [Command("a4477648-9ba7-4bbc-af04-8b7e931f88ab", 0x0100)]
            public class TestCommand : BaseDynamicCommand&lt;TestCommand, MyObject&gt;
            {
                protected async override Task ExecuteAsync(OleMenuCmdEventArgs e, MyObject item)
                {
                    await item.DoSomethingAsync();
                }
            }
            </code>
            </example>
            <typeparam name="TCommand">The implementation type itself.</typeparam>
            <typeparam name="TItem">The type of item that a menu item is dynamically created for.</typeparam>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.BaseDynamicCommand`2.GetItems">
            <summary>
            Gets the items that the menu items will be created for. One menu item will be created for each item that is returned.
            </summary>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.BaseDynamicCommand`2.BeforeQueryStatus(System.Object,System.EventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.BaseDynamicCommand`2.BeforeQueryStatus(Microsoft.VisualStudio.Shell.OleMenuCommand,System.EventArgs,`1)">
            <summary>Override this method to control the commands visibility and other properties.</summary>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.BaseDynamicCommand`2.Execute(System.Object,System.EventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.BaseDynamicCommand`2.Execute(Microsoft.VisualStudio.Shell.OleMenuCmdEventArgs,`1)">
            <summary>Executes synchronously when the command is invoked.</summary>
            <remarks>
            Use this method instead of <see cref="M:Community.VisualStudio.Toolkit.BaseDynamicCommand`2.ExecuteAsync(Microsoft.VisualStudio.Shell.OleMenuCmdEventArgs,`1)"/> if you're not performing any async tasks using async/await patterns.
            </remarks>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.BaseDynamicCommand`2.ExecuteAsync(Microsoft.VisualStudio.Shell.OleMenuCmdEventArgs,`1)">
            <summary>Executes asynchronously when the command is invoked and <see cref="M:Community.VisualStudio.Toolkit.BaseDynamicCommand`2.Execute(System.Object,System.EventArgs)"/> isn't overridden.</summary>
            <remarks>Use this method instead of <see cref="M:Community.VisualStudio.Toolkit.BaseDynamicCommand`2.Execute(Microsoft.VisualStudio.Shell.OleMenuCmdEventArgs,`1)"/> if you're invoking any async tasks by using async/await patterns.</remarks>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.BaseDynamicCommand`2.BeforeQueryStatus(System.EventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.BaseDynamicCommand`2.ExecuteAsync(Microsoft.VisualStudio.Shell.OleMenuCmdEventArgs)">
            <inheritdoc/>
        </member>
        <member name="T:Community.VisualStudio.Toolkit.CommandAttribute">
            <summary>
            Attribute for specifying command GUIDs and IDs.
            </summary>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.CommandAttribute.#ctor(System.Int32)">
            <summary>
            Registers the command for handling the command ID and assumes the package GUID is used as command GUID.
            </summary>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.CommandAttribute.#ctor(System.String,System.Int32)">
            <summary>
            Registers the command for handling the command with the specified GUID and ID.
            </summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.CommandAttribute.Guid">
            <summary>
            The GUID of the command, often referred to as the Command Set Guid.
            </summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.CommandAttribute.Id">
            <summary>
            The ID of the command, often expressed in hex.
            </summary>
        </member>
        <member name="T:Community.VisualStudio.Toolkit.Commands">
            <summary>A collection of services related to the command system.</summary>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.Commands.FindCommandAsync(System.String)">
            <summary>
            Finds a command by cannonical name.
            </summary>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.Commands.ExecuteAsync(System.String,System.String)">
            <summary>
            Executes a command by name
            </summary>
            <returns>Returns <see langword="true"/> if the command was succesfully executed; otherwise <see langword="false"/>.</returns>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.Commands.IsAvailableAsync(System.String)">
            <summary>
            Checks if a command is enabled and supported.
            </summary>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.Commands.ExecuteAsync(System.Guid,System.Int32,System.String)">
            <summary>
            Executes a command by GUID and ID
            </summary>
            <returns>Returns <see langword="true"/> if the command was succesfully executed; otherwise <see langword="false"/>.</returns>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.Commands.ExecuteAsync(Microsoft.VisualStudio.VSConstants.VSStd97CmdID,System.String)">
            <summary>
            Executes a command from the <see cref="T:Microsoft.VisualStudio.VSConstants.VSStd97CmdID"/> collection of built in commands.
            </summary>
            <returns>Returns <see langword="true"/> if the command was succesfully executed; otherwise <see langword="false"/>.</returns>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.Commands.ExecuteAsync(Microsoft.VisualStudio.VSConstants.VSStd2KCmdID,System.String)">
            <summary>
            Executes a command from the <see cref="T:Microsoft.VisualStudio.VSConstants.VSStd2KCmdID"/> collection of built in commands.
            </summary>
            <returns>Returns <see langword="true"/> if the command was succesfully executed; otherwise <see langword="false"/>.</returns>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.Commands.ExecuteAsync(System.ComponentModel.Design.CommandID,System.String)">
            <summary>
            Executes a command by GUID and ID
            </summary>
            <returns>Returns <see langword="true"/> if the command was succesfully executed; otherwise <see langword="false"/>.</returns>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.Commands.InterceptAsync(Microsoft.VisualStudio.VSConstants.VSStd97CmdID,System.Func{Community.VisualStudio.Toolkit.CommandProgression})">
            <summary>
            Intercept any command before it is being handled by other command handlers.
            </summary>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.Commands.InterceptAsync(Microsoft.VisualStudio.VSConstants.VSStd2KCmdID,System.Func{Community.VisualStudio.Toolkit.CommandProgression})">
            <summary>
            Intercept any command before it is being handled by other command handlers.
            </summary>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.Commands.InterceptAsync(System.Guid,System.Int32,System.Func{Community.VisualStudio.Toolkit.CommandProgression})">
            <summary>
            Intercept any command before it is being handled by other command handlers.
            </summary>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.Commands.InterceptAsync(System.ComponentModel.Design.CommandID,System.Func{Community.VisualStudio.Toolkit.CommandProgression})">
            <summary>
            Intercept any command before it is being handled by other command handlers.
            </summary>
        </member>
        <member name="T:Community.VisualStudio.Toolkit.CommandProgression">
            <summary>
            Holds values on how the command execution should proceed.
            </summary>
        </member>
        <member name="F:Community.VisualStudio.Toolkit.CommandProgression.Continue">
            <summary>Proceed to execute the next command handler for the command.</summary>
        </member>
        <member name="F:Community.VisualStudio.Toolkit.CommandProgression.Stop">
            <summary>Stop execution and don't continue execution to the next command handler.</summary>
        </member>
        <member name="T:Community.VisualStudio.Toolkit.KnownCommands">
            <summary>Defines the command IDs for known commands.</summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Build_BatchBuild">
            <summary>Build.BatchBuild<br/><c>VSConstants.VSStd97CmdID.BatchBuildDlg</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Build_BuildOnlyProject">
            <summary>Build.BuildOnlyProject<br/><c>VSConstants.VSStd2KCmdID.BuildOnlyProject</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Build_BuildSelection">
            <summary>Build.BuildSelection<br/><c>VSConstants.VSStd97CmdID.BuildSel</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Build_BuildSolution">
            <summary>Build.BuildSolution<br/><c>VSConstants.VSStd97CmdID.BuildSln</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Build_Cancel">
            <summary>Build.Cancel<br/><c>VSConstants.VSStd97CmdID.CancelBuild</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Build_CleanOnlyProject">
            <summary>Build.CleanOnlyProject<br/><c>VSConstants.VSStd2KCmdID.CleanOnlyProject</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Build_CleanSelection">
            <summary>Build.CleanSelection<br/><c>VSConstants.VSStd97CmdID.CleanSel</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Build_CleanSolution">
            <summary>Build.CleanSolution<br/><c>VSConstants.VSStd97CmdID.CleanSln</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Build_ConfigurationManager">
            <summary>Build.ConfigurationManager<br/><c>VSConstants.VSStd97CmdID.SlnCfgMgr</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Build_DeploySelection">
            <summary>Build.DeploySelection<br/><c>VSConstants.VSStd97CmdID.DeploySel</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Build_DeploySolution">
            <summary>Build.DeploySolution<br/><c>VSConstants.VSStd97CmdID.DeploySln</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Build_ProjectPickerBuild">
            <summary>Build.ProjectPickerBuild<br/><c>VSConstants.VSStd97CmdID.BuildProjPicker</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Build_ProjectPickerRebuild">
            <summary>Build.ProjectPickerRebuild<br/><c>VSConstants.VSStd97CmdID.RebuildProjPicker</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Build_PublishSelection">
            <summary>Build.PublishSelection<br/><c>VSConstants.VSStd2KCmdID.ECMD_PUBLISHSELECTION</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Build_RebuildOnlyProject">
            <summary>Build.RebuildOnlyProject<br/><c>VSConstants.VSStd2KCmdID.RebuildOnlyProject</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Build_RebuildSelection">
            <summary>Build.RebuildSelection<br/><c>VSConstants.VSStd97CmdID.RebuildSel</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Build_RebuildSolution">
            <summary>Build.RebuildSolution<br/><c>VSConstants.VSStd97CmdID.RebuildSln</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Build_RunCodeAnalysisonProject">
            <summary>Build.RunCodeAnalysisonProject<br/><c>VSConstants.VSStd2KCmdID.StaticAnalysisOnlyProject</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Build_RunCodeAnalysisonSelection">
            <summary>Build.RunCodeAnalysisonSelection<br/><c>VSConstants.VSStd2KCmdID.ECMD_RUNFXCOPSEL</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Build_SolutionConfigurations">
            <summary>Build.SolutionConfigurations<br/><c>VSConstants.VSStd97CmdID.SolutionCfg</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Build_SolutionPlatforms">
            <summary>Build.SolutionPlatforms<br/><c>VSConstants.VSStd2KCmdID.SolutionPlatform</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.ClassViewContextMenus_ClassViewFolder_MoveToTop">
            <summary>ClassViewContextMenus.ClassViewFolder.MoveToTop<br/><c>VSConstants.VSStd97CmdID.MoveToTop</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.ClassViewContextMenus_ClassViewMember_CallBrowser_CallBrowserShowCallersGraph">
            <summary>ClassViewContextMenus.ClassViewMember.CallBrowser.CallBrowserShowCallersGraph<br/><c>VSConstants.VSStd2KCmdID.CallBrowserShowCallsTo</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.ClassViewContextMenus_ClassViewMember_CallBrowser_CallBrowserShowCallersGraphInNewWindow">
            <summary>ClassViewContextMenus.ClassViewMember.CallBrowser.CallBrowserShowCallersGraphInNewWindow<br/><c>VSConstants.VSStd2KCmdID.CallBrowserShowNewCallsTo</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.ClassViewContextMenus_ClassViewMember_CallBrowser_CallBrowserShowCallGraph">
            <summary>ClassViewContextMenus.ClassViewMember.CallBrowser.CallBrowserShowCallGraph<br/><c>VSConstants.VSStd2KCmdID.CallBrowserShowCallsFrom</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.ClassViewContextMenus_ClassViewMember_CallBrowser_CallBrowserShowCallGraphInNewWindow">
            <summary>ClassViewContextMenus.ClassViewMember.CallBrowser.CallBrowserShowCallGraphInNewWindow<br/><c>VSConstants.VSStd2KCmdID.CallBrowserShowNewCallsFrom</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.ClassViewContextMenus_ClassViewMultiselectProjectreferencesItems_Properties">
            <summary>ClassViewContextMenus.ClassViewMultiselectProjectreferencesItems.Properties<br/><c>VSConstants.VSStd97CmdID.PropSheetOrProperties</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.ClassViewContextMenus_ClassViewProject_Build">
            <summary>ClassViewContextMenus.ClassViewProject.Build<br/><c>VSConstants.VSStd97CmdID.BuildCtx</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.ClassViewContextMenus_ClassViewProject_Clean">
            <summary>ClassViewContextMenus.ClassViewProject.Clean<br/><c>VSConstants.VSStd97CmdID.CleanCtx</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.ClassViewContextMenus_ClassViewProject_Debug_StartNewInstance">
            <summary>ClassViewContextMenus.ClassViewProject.Debug.StartNewInstance<br/><c>VSConstants.VSStd2KCmdID.PROJSTARTDEBUG</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.ClassViewContextMenus_ClassViewProject_Debug_StepIntoNewInstance">
            <summary>ClassViewContextMenus.ClassViewProject.Debug.StepIntoNewInstance<br/><c>VSConstants.VSStd2KCmdID.PROJSTEPINTO</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.ClassViewContextMenus_ClassViewProject_Deploy">
            <summary>ClassViewContextMenus.ClassViewProject.Deploy<br/><c>VSConstants.VSStd97CmdID.DeployCtx</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.ClassViewContextMenus_ClassViewProject_Publish">
            <summary>ClassViewContextMenus.ClassViewProject.Publish<br/><c>VSConstants.VSStd2KCmdID.ECMD_PUBLISHSLNCTX</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.ClassViewContextMenus_ClassViewProject_Rebuild">
            <summary>ClassViewContextMenus.ClassViewProject.Rebuild<br/><c>VSConstants.VSStd97CmdID.RebuildCtx</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.ClassViewContextMenus_ClassViewProject_View_ViewClassDiagram">
            <summary>ClassViewContextMenus.ClassViewProject.View.ViewClassDiagram<br/><c>VSConstants.VSStd2KCmdID.ViewInClassDiagram</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.ClassViewContextMenus_ClassViewProjectReference_ViewinObjectBrowser">
            <summary>ClassViewContextMenus.ClassViewProjectReference.ViewinObjectBrowser<br/><c>VSConstants.VSStd2KCmdID.VIEWREFINOBJECTBROWSER</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.ClassViewSearch">
            <summary>ClassViewSearch<br/><c>VSConstants.VSStd2KCmdID.CVSearch</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.ClearAllFilters">
            <summary>ClearAllFilters<br/><c>VSConstants.VSStd14CmdID.ErrorListClearFilters</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.CreateUserTask">
            <summary>CreateUserTask<br/><c>VSConstants.VSStd2KCmdID.CreateUserTask</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Debug_AddWatch">
            <summary>Debug.AddWatch<br/><c>VSConstants.VSStd97CmdID.AddWatch</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Debug_AttachtoProcess">
            <summary>Debug.AttachtoProcess<br/><c>VSConstants.VSStd97CmdID.DebugProcesses</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Debug_Autos">
            <summary>Debug.Autos<br/><c>VSConstants.VSStd97CmdID.DebugReserved1</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Debug_BreakAll">
            <summary>Debug.BreakAll<br/><c>VSConstants.VSStd97CmdID.Pause</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Debug_CallStack">
            <summary>Debug.CallStack<br/><c>VSConstants.VSStd97CmdID.CallStack</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Debug_DeleteAllBreakpoints">
            <summary>Debug.DeleteAllBreakpoints<br/><c>VSConstants.VSStd97CmdID.ClearBreakpoints</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Debug_DetachAll">
            <summary>Debug.DetachAll<br/><c>VSConstants.VSStd97CmdID.DetachDebugger</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Debug_EnableBreakpoint">
            <summary>Debug.EnableBreakpoint<br/><c>VSConstants.VSStd97CmdID.EnableBreakpoint</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Debug_EvaluateStatement">
            <summary>Debug.EvaluateStatement<br/><c>VSConstants.VSStd97CmdID.EvaluateStatement</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Debug_ExceptionSettings">
            <summary>Debug.ExceptionSettings<br/><c>VSConstants.VSStd97CmdID.Exceptions</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Debug_HexadecimalDisplay">
            <summary>Debug.HexadecimalDisplay<br/><c>VSConstants.VSStd97CmdID.DisplayRadix</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Debug_Immediate">
            <summary>Debug.Immediate<br/><c>VSConstants.VSStd97CmdID.ImmediateWindow</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Debug_Locals">
            <summary>Debug.Locals<br/><c>VSConstants.VSStd97CmdID.LocalsWindow</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Debug_Print">
            <summary>Debug.Print<br/><c>VSConstants.VSStd97CmdID.EvaluateExpression</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Debug_QuickWatch">
            <summary>Debug.QuickWatch<br/><c>VSConstants.VSStd97CmdID.QuickWatch</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Debug_Restart">
            <summary>Debug.Restart<br/><c>VSConstants.VSStd97CmdID.Restart</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Debug_RunToCursor">
            <summary>Debug.RunToCursor<br/><c>VSConstants.VSStd97CmdID.RunToCursor</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Debug_SetNextStatement">
            <summary>Debug.SetNextStatement<br/><c>VSConstants.VSStd97CmdID.SetNextStatement</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Debug_ShowNextStatement">
            <summary>Debug.ShowNextStatement<br/><c>VSConstants.VSStd97CmdID.ShowNextStatement</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Debug_Start">
            <summary>Debug.Start<br/><c>VSConstants.VSStd97CmdID.Start</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Debug_StartupProjectProperties">
            <summary>Debug.StartupProjectProperties<br/><c>VSConstants.VSStd11CmdID.StartupProjectProperties</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Debug_StartWithoutDebugging">
            <summary>Debug.StartWithoutDebugging<br/><c>VSConstants.VSStd97CmdID.StartNoDebug</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Debug_StepInto">
            <summary>Debug.StepInto<br/><c>VSConstants.VSStd97CmdID.StepInto</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Debug_StepOut">
            <summary>Debug.StepOut<br/><c>VSConstants.VSStd97CmdID.StepOut</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Debug_StepOver">
            <summary>Debug.StepOver<br/><c>VSConstants.VSStd97CmdID.StepOver</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Debug_StopDebugging">
            <summary>Debug.StopDebugging<br/><c>VSConstants.VSStd97CmdID.Stop</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Debug_Threads">
            <summary>Debug.Threads<br/><c>VSConstants.VSStd97CmdID.ViewThreadsWindow</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Debug_ToggleBreakpoint">
            <summary>Debug.ToggleBreakpoint<br/><c>VSConstants.VSStd97CmdID.ToggleBreakpoint</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.DebuggerContextMenus_AutosWindow_CollapseParent">
            <summary>DebuggerContextMenus.AutosWindow.CollapseParent<br/><c>VSConstants.VSStd97CmdID.CollapseWatch</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.DebuggerContextMenus_AutosWindow_DeleteWatch">
            <summary>DebuggerContextMenus.AutosWindow.DeleteWatch<br/><c>VSConstants.VSStd97CmdID.DeleteWatch</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.DebuggerContextMenus_AutosWindow_Elasticcolumn">
            <summary>DebuggerContextMenus.AutosWindow.Elasticcolumn<br/><c>VSConstants.VSStd97CmdID.ElasticColumn</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.DebuggerContextMenus_GPUThreadsWindowShortcutMenu_Freeze">
            <summary>DebuggerContextMenus.GPUThreadsWindowShortcutMenu.Freeze<br/><c>VSConstants.VSStd97CmdID.ThreadSuspend</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.DebuggerContextMenus_GPUThreadsWindowShortcutMenu_SwitchToThread">
            <summary>DebuggerContextMenus.GPUThreadsWindowShortcutMenu.SwitchToThread<br/><c>VSConstants.VSStd97CmdID.ThreadSetFocus</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.DebuggerContextMenus_GPUThreadsWindowShortcutMenu_Thaw">
            <summary>DebuggerContextMenus.GPUThreadsWindowShortcutMenu.Thaw<br/><c>VSConstants.VSStd97CmdID.ThreadResume</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Edit_AddResource">
            <summary>Edit.AddResource<br/><c>VSConstants.VSStd2KCmdID.RESOURCENEW</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Edit_AddTagHandler">
            <summary>Edit.AddTagHandler<br/><c>VSConstants.VSStd2KCmdID.ADDHANDLER</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Edit_BreakLine">
            <summary>Edit.BreakLine<br/><c>VSConstants.VSStd2KCmdID.RETURN</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Edit_Capitalize">
            <summary>Edit.Capitalize<br/><c>VSConstants.VSStd2KCmdID.SELTITLECASE</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Edit_CharLeft">
            <summary>Edit.CharLeft<br/><c>VSConstants.VSStd2KCmdID.LEFT</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Edit_CharLeftExtend">
            <summary>Edit.CharLeftExtend<br/><c>VSConstants.VSStd2KCmdID.LEFT_EXT</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Edit_CharLeftExtendColumn">
            <summary>Edit.CharLeftExtendColumn<br/><c>VSConstants.VSStd2KCmdID.LEFT_EXT_COL</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Edit_CharRight">
            <summary>Edit.CharRight<br/><c>VSConstants.VSStd2KCmdID.RIGHT</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Edit_CharRightExtend">
            <summary>Edit.CharRightExtend<br/><c>VSConstants.VSStd2KCmdID.RIGHT_EXT</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Edit_CharRightExtendColumn">
            <summary>Edit.CharRightExtendColumn<br/><c>VSConstants.VSStd2KCmdID.RIGHT_EXT_COL</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Edit_CharTranspose">
            <summary>Edit.CharTranspose<br/><c>VSConstants.VSStd2KCmdID.TRANSPOSECHAR</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Edit_CheckMnemonics">
            <summary>Edit.CheckMnemonics<br/><c>VSConstants.VSStd2KCmdID.CHECKMENUMNEMONICS</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Edit_ClearAll">
            <summary>Edit.ClearAll<br/><c>VSConstants.VSStd97CmdID.ClearPane</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Edit_ClearAllBookmarksInDocument">
            <summary>Edit.ClearAllBookmarksInDocument<br/><c>VSConstants.VSStd2KCmdID.ECMD_DELETEALLBOOKMARKSINDOC</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Edit_ClearBookmarks">
            <summary>Edit.ClearBookmarks<br/><c>VSConstants.VSStd2KCmdID.DELETEALLTEMPBOOKMARKS</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Edit_ClearFindResults1">
            <summary>Edit.ClearFindResults1<br/><c>VSConstants.VSStd2KCmdID.ClearPaneFR1</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Edit_ClearFindResults2">
            <summary>Edit.ClearFindResults2<br/><c>VSConstants.VSStd2KCmdID.ClearPaneFR2</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Edit_ClearOutputWindow">
            <summary>Edit.ClearOutputWindow<br/><c>VSConstants.VSStd2KCmdID.ClearPaneOW</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Edit_CollapseAllOutlining">
            <summary>Edit.CollapseAllOutlining<br/><c>VSConstants.VSStd2010CmdID.OUTLN_COLLAPSE_ALL</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Edit_CollapseCurrentRegion">
            <summary>Edit.CollapseCurrentRegion<br/><c>VSConstants.VSStd2010CmdID.OUTLN_COLLAPSE_CURRENT</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Edit_CollapseTag">
            <summary>Edit.CollapseTag<br/><c>VSConstants.VSStd2KCmdID.COLLAPSETAG</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Edit_CollapsetoDefinitions">
            <summary>Edit.CollapsetoDefinitions<br/><c>VSConstants.VSStd2KCmdID.OUTLN_COLLAPSE_TO_DEF</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Edit_CommentSelection">
            <summary>Edit.CommentSelection<br/><c>VSConstants.VSStd2KCmdID.COMMENT_BLOCK</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Edit_CompleteWord">
            <summary>Edit.CompleteWord<br/><c>VSConstants.VSStd2KCmdID.COMPLETEWORD</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Edit_ContractSelection">
            <summary>Edit.ContractSelection<br/><c>VSConstants.VSStd2KCmdID.COLLAPSESELECTION</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Edit_ConvertSpacesToTabs">
            <summary>Edit.ConvertSpacesToTabs<br/><c>VSConstants.VSStd2KCmdID.ECMD_CONVERTSPACESTOTABS</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Edit_ConvertTabsToSpaces">
            <summary>Edit.ConvertTabsToSpaces<br/><c>VSConstants.VSStd2KCmdID.ECMD_CONVERTTABSTOSPACES</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Edit_Copy">
            <summary>Edit.Copy<br/><c>VSConstants.VSStd97CmdID.Copy</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Edit_CopyParameterTip">
            <summary>Edit.CopyParameterTip<br/><c>VSConstants.VSStd2KCmdID.ECMD_COPYTIP</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Edit_Cut">
            <summary>Edit.Cut<br/><c>VSConstants.VSStd97CmdID.Cut</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Edit_CycleClipboardRing">
            <summary>Edit.CycleClipboardRing<br/><c>VSConstants.VSStd97CmdID.PasteNextTBXCBItem</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Edit_DecreaseFilterLevel">
            <summary>Edit.DecreaseFilterLevel<br/><c>VSConstants.VSStd2KCmdID.ECMD_DECREASEFILTER</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Edit_DecreaseLineIndent">
            <summary>Edit.DecreaseLineIndent<br/><c>VSConstants.VSStd2KCmdID.UNINDENT</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Edit_Delete">
            <summary>Edit.Delete<br/><c>VSConstants.VSStd97CmdID.Delete</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Edit_DeleteBackwards">
            <summary>Edit.DeleteBackwards<br/><c>VSConstants.VSStd2KCmdID.BACKSPACE</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Edit_DeleteBlankLines">
            <summary>Edit.DeleteBlankLines<br/><c>VSConstants.VSStd2KCmdID.DELETEBLANKLINES</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Edit_DeleteHorizontalWhiteSpace">
            <summary>Edit.DeleteHorizontalWhiteSpace<br/><c>VSConstants.VSStd2KCmdID.DELETEWHITESPACE</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Edit_DeleteToBOL">
            <summary>Edit.DeleteToBOL<br/><c>VSConstants.VSStd2KCmdID.DELETETOBOL</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Edit_DeleteToEOL">
            <summary>Edit.DeleteToEOL<br/><c>VSConstants.VSStd2KCmdID.DELETETOEOL</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Edit_DeleteVersionInfoBlock">
            <summary>Edit.DeleteVersionInfoBlock<br/><c>VSConstants.VSStd2KCmdID.DELETEINFOBLOCK</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Edit_DocumentEnd">
            <summary>Edit.DocumentEnd<br/><c>VSConstants.VSStd2KCmdID.END</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Edit_DocumentEndExtend">
            <summary>Edit.DocumentEndExtend<br/><c>VSConstants.VSStd2KCmdID.END_EXT</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Edit_DocumentStart">
            <summary>Edit.DocumentStart<br/><c>VSConstants.VSStd2KCmdID.HOME</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Edit_DocumentStartExtend">
            <summary>Edit.DocumentStartExtend<br/><c>VSConstants.VSStd2KCmdID.HOME_EXT</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Edit_DoubleClick">
            <summary>Edit.DoubleClick<br/><c>VSConstants.VSStd2KCmdID.DOUBLECLICK</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Edit_EditIDs">
            <summary>Edit.EditIDs<br/><c>VSConstants.VSStd97CmdID.EditMenuIDs</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Edit_EditNames">
            <summary>Edit.EditNames<br/><c>VSConstants.VSStd97CmdID.EditMenuNames</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Edit_EditTagHandler">
            <summary>Edit.EditTagHandler<br/><c>VSConstants.VSStd2KCmdID.EDITHANDLER</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Edit_ExpandAllOutlining">
            <summary>Edit.ExpandAllOutlining<br/><c>VSConstants.VSStd2010CmdID.OUTLN_EXPAND_ALL</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Edit_ExpandCurrentRegion">
            <summary>Edit.ExpandCurrentRegion<br/><c>VSConstants.VSStd2010CmdID.OUTLN_EXPAND_CURRENT</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Edit_ExpandSelection">
            <summary>Edit.ExpandSelection<br/><c>VSConstants.VSStd2KCmdID.EXPANDSELECTION</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Edit_Find">
            <summary>Edit.Find<br/><c>VSConstants.VSStd97CmdID.Find</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Edit_FindAllReferences">
            <summary>Edit.FindAllReferences<br/><c>VSConstants.VSStd97CmdID.FindReferences</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Edit_FindinFiles">
            <summary>Edit.FindinFiles<br/><c>VSConstants.VSStd97CmdID.FindInFiles</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Edit_FindNext">
            <summary>Edit.FindNext<br/><c>VSConstants.VSStd97CmdID.FindNext</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Edit_FindNextSelected">
            <summary>Edit.FindNextSelected<br/><c>VSConstants.VSStd97CmdID.FindSelectedNext</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Edit_FindPrevious">
            <summary>Edit.FindPrevious<br/><c>VSConstants.VSStd97CmdID.FindPrev</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Edit_FindPreviousSelected">
            <summary>Edit.FindPreviousSelected<br/><c>VSConstants.VSStd97CmdID.FindSelectedPrev</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Edit_FindSymbol">
            <summary>Edit.FindSymbol<br/><c>VSConstants.VSStd97CmdID.ObjectSearch</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Edit_FormatDocument">
            <summary>Edit.FormatDocument<br/><c>VSConstants.VSStd2KCmdID.FORMATDOCUMENT</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Edit_FormatSelection">
            <summary>Edit.FormatSelection<br/><c>VSConstants.VSStd2KCmdID.FORMATSELECTION</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Edit_GoTo">
            <summary>Edit.GoTo<br/><c>VSConstants.VSStd97CmdID.Goto</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Edit_GotoBrace">
            <summary>Edit.GotoBrace<br/><c>VSConstants.VSStd2KCmdID.GOTOBRACE</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Edit_GotoBraceExtend">
            <summary>Edit.GotoBraceExtend<br/><c>VSConstants.VSStd2KCmdID.GOTOBRACE_EXT</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Edit_GoToDeclaration">
            <summary>Edit.GoToDeclaration<br/><c>VSConstants.VSStd97CmdID.GotoDecl</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Edit_GoToDefinition">
            <summary>Edit.GoToDefinition<br/><c>VSConstants.VSStd97CmdID.GotoDefn</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Edit_GoToFindCombo">
            <summary>Edit.GoToFindCombo<br/><c>VSConstants.VSStd97CmdID.SearchCombo</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Edit_GoToFindResults1Location">
            <summary>Edit.GoToFindResults1Location<br/><c>VSConstants.VSStd2KCmdID.GotoErrorTagFR1</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Edit_GoToFindResults1NextLocation">
            <summary>Edit.GoToFindResults1NextLocation<br/><c>VSConstants.VSStd2KCmdID.GotoNextErrorTagFR1</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Edit_GoToFindResults1PrevLocation">
            <summary>Edit.GoToFindResults1PrevLocation<br/><c>VSConstants.VSStd2KCmdID.GotoPrevErrorTagFR1</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Edit_GoToFindResults2Location">
            <summary>Edit.GoToFindResults2Location<br/><c>VSConstants.VSStd2KCmdID.GotoErrorTagFR2</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Edit_GoToFindResults2NextLocation">
            <summary>Edit.GoToFindResults2NextLocation<br/><c>VSConstants.VSStd2KCmdID.GotoNextErrorTagFR2</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Edit_GoToFindResults2PrevLocation">
            <summary>Edit.GoToFindResults2PrevLocation<br/><c>VSConstants.VSStd2KCmdID.GotoPrevErrorTagFR2</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Edit_GoToNextLocation">
            <summary>Edit.GoToNextLocation<br/><c>VSConstants.VSStd97CmdID.NextLocation</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Edit_GoToOutputWindowLocation">
            <summary>Edit.GoToOutputWindowLocation<br/><c>VSConstants.VSStd2KCmdID.GotoErrorTagOW</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Edit_GoToOutputWindowNextLocation">
            <summary>Edit.GoToOutputWindowNextLocation<br/><c>VSConstants.VSStd2KCmdID.GotoNextErrorTagOW</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Edit_GoToOutputWindowPrevLocation">
            <summary>Edit.GoToOutputWindowPrevLocation<br/><c>VSConstants.VSStd2KCmdID.GotoPrevErrorTagOW</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Edit_GoToPrevLocation">
            <summary>Edit.GoToPrevLocation<br/><c>VSConstants.VSStd97CmdID.PreviousLocation</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Edit_GoToReference">
            <summary>Edit.GoToReference<br/><c>VSConstants.VSStd97CmdID.GotoRef</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Edit_GoToTypeDefinition">
            <summary>Edit.GoToTypeDefinition<br/><c>VSConstants.VSStd2KCmdID.GOTOTYPEDEF</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Edit_HideAdvancedCompletionMembers">
            <summary>Edit.HideAdvancedCompletionMembers<br/><c>VSConstants.VSStd2KCmdID.COMPLETION_HIDE_ADVANCED</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Edit_HideSelection">
            <summary>Edit.HideSelection<br/><c>VSConstants.VSStd2KCmdID.OUTLN_HIDE_SELECTION</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Edit_HideSnippetHighlighting">
            <summary>Edit.HideSnippetHighlighting<br/><c>VSConstants.VSStd2KCmdID.HIDESNIPPETHIGHLIGHTING</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Edit_IncreaseFilterLevel">
            <summary>Edit.IncreaseFilterLevel<br/><c>VSConstants.VSStd2KCmdID.FINAL</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Edit_IncreaseLineIndent">
            <summary>Edit.IncreaseLineIndent<br/><c>VSConstants.VSStd2KCmdID.INDENT</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Edit_IncrementalSearch">
            <summary>Edit.IncrementalSearch<br/><c>VSConstants.VSStd2KCmdID.ISEARCH</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Edit_InsertComment">
            <summary>Edit.InsertComment<br/><c>VSConstants.VSStd2KCmdID.ECMD_INSERTCOMMENT</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Edit_InsertFileAsText">
            <summary>Edit.InsertFileAsText<br/><c>VSConstants.VSStd2KCmdID.INSERTFILE</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Edit_InsertNew">
            <summary>Edit.InsertNew<br/><c>VSConstants.VSStd97CmdID.InsertNewMenu</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Edit_InsertSeparator">
            <summary>Edit.InsertSeparator<br/><c>VSConstants.VSStd97CmdID.InsertSeparator</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Edit_InsertSnippet">
            <summary>Edit.InsertSnippet<br/><c>VSConstants.VSStd2KCmdID.INSERTSNIPPET</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Edit_InsertTab">
            <summary>Edit.InsertTab<br/><c>VSConstants.VSStd2KCmdID.TAB</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Edit_InvokeSnippetFromShortcut">
            <summary>Edit.InvokeSnippetFromShortcut<br/><c>VSConstants.VSStd2KCmdID.ECMD_INVOKESNIPPETFROMSHORTCUT</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Edit_LineCut">
            <summary>Edit.LineCut<br/><c>VSConstants.VSStd2KCmdID.CUTLINE</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Edit_LineDelete">
            <summary>Edit.LineDelete<br/><c>VSConstants.VSStd2KCmdID.DELETELINE</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Edit_LineDown">
            <summary>Edit.LineDown<br/><c>VSConstants.VSStd2KCmdID.DOWN</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Edit_LineDownExtend">
            <summary>Edit.LineDownExtend<br/><c>VSConstants.VSStd2KCmdID.DOWN_EXT</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Edit_LineDownExtendColumn">
            <summary>Edit.LineDownExtendColumn<br/><c>VSConstants.VSStd2KCmdID.DOWN_EXT_COL</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Edit_LineEnd">
            <summary>Edit.LineEnd<br/><c>VSConstants.VSStd2KCmdID.EOL</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Edit_LineEndExtend">
            <summary>Edit.LineEndExtend<br/><c>VSConstants.VSStd2KCmdID.EOL_EXT</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Edit_LineEndExtendColumn">
            <summary>Edit.LineEndExtendColumn<br/><c>VSConstants.VSStd2KCmdID.EOL_EXT_COL</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Edit_LineFirstColumn">
            <summary>Edit.LineFirstColumn<br/><c>VSConstants.VSStd2KCmdID.EditorLineFirstColumn</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Edit_LineFirstColumnExtend">
            <summary>Edit.LineFirstColumnExtend<br/><c>VSConstants.VSStd2KCmdID.EditorLineFirstColumnExtend</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Edit_LineLastChar">
            <summary>Edit.LineLastChar<br/><c>VSConstants.VSStd2KCmdID.LASTCHAR</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Edit_LineLastCharExtend">
            <summary>Edit.LineLastCharExtend<br/><c>VSConstants.VSStd2KCmdID.LASTCHAR_EXT</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Edit_LineOpenAbove">
            <summary>Edit.LineOpenAbove<br/><c>VSConstants.VSStd2KCmdID.OPENLINEABOVE</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Edit_LineOpenBelow">
            <summary>Edit.LineOpenBelow<br/><c>VSConstants.VSStd2KCmdID.OPENLINEBELOW</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Edit_LineStart">
            <summary>Edit.LineStart<br/><c>VSConstants.VSStd2KCmdID.BOL</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Edit_LineStartAfterIndentation">
            <summary>Edit.LineStartAfterIndentation<br/><c>VSConstants.VSStd2KCmdID.FIRSTCHAR</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Edit_LineStartAfterIndentationExtend">
            <summary>Edit.LineStartAfterIndentationExtend<br/><c>VSConstants.VSStd2KCmdID.FIRSTCHAR_EXT</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Edit_LineStartAfterIndentationNext">
            <summary>Edit.LineStartAfterIndentationNext<br/><c>VSConstants.VSStd2KCmdID.FIRSTNONWHITENEXT</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Edit_LineStartAfterIndentationPrev">
            <summary>Edit.LineStartAfterIndentationPrev<br/><c>VSConstants.VSStd2KCmdID.FIRSTNONWHITEPREV</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Edit_LineStartExtend">
            <summary>Edit.LineStartExtend<br/><c>VSConstants.VSStd2KCmdID.BOL_EXT</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Edit_LineStartExtendColumn">
            <summary>Edit.LineStartExtendColumn<br/><c>VSConstants.VSStd2KCmdID.BOL_EXT_COL</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Edit_LineTranspose">
            <summary>Edit.LineTranspose<br/><c>VSConstants.VSStd2KCmdID.TRANSPOSELINE</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Edit_LineUp">
            <summary>Edit.LineUp<br/><c>VSConstants.VSStd2KCmdID.UP</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Edit_LineUpExtend">
            <summary>Edit.LineUpExtend<br/><c>VSConstants.VSStd2KCmdID.UP_EXT</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Edit_LineUpExtendColumn">
            <summary>Edit.LineUpExtendColumn<br/><c>VSConstants.VSStd2KCmdID.UP_EXT_COL</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Edit_ListMembers">
            <summary>Edit.ListMembers<br/><c>VSConstants.VSStd2KCmdID.SHOWMEMBERLIST</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Edit_MakeLowercase">
            <summary>Edit.MakeLowercase<br/><c>VSConstants.VSStd2KCmdID.SELLOWCASE</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Edit_MakeUppercase">
            <summary>Edit.MakeUppercase<br/><c>VSConstants.VSStd2KCmdID.SELUPCASE</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Edit_MoveControlDown">
            <summary>Edit.MoveControlDown<br/><c>VSConstants.VSStd2KCmdID.CTLMOVEDOWN</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Edit_MoveControlDownGrid">
            <summary>Edit.MoveControlDownGrid<br/><c>VSConstants.VSStd2KCmdID.CTLMOVEDOWNGRID</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Edit_MoveControlLeft">
            <summary>Edit.MoveControlLeft<br/><c>VSConstants.VSStd2KCmdID.CTLMOVELEFT</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Edit_MoveControlLeftGrid">
            <summary>Edit.MoveControlLeftGrid<br/><c>VSConstants.VSStd2KCmdID.CTLMOVELEFTGRID</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Edit_MoveControlRight">
            <summary>Edit.MoveControlRight<br/><c>VSConstants.VSStd2KCmdID.CTLMOVERIGHT</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Edit_MoveControlRightGrid">
            <summary>Edit.MoveControlRightGrid<br/><c>VSConstants.VSStd2KCmdID.CTLMOVERIGHTGRID</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Edit_MoveControlUp">
            <summary>Edit.MoveControlUp<br/><c>VSConstants.VSStd2KCmdID.CTLMOVEUP</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Edit_MoveControlUpGrid">
            <summary>Edit.MoveControlUpGrid<br/><c>VSConstants.VSStd2KCmdID.CTLMOVEUPGRID</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Edit_MoveSelectedLinesDown">
            <summary>Edit.MoveSelectedLinesDown<br/><c>VSConstants.VSStd12CmdID.MoveSelLinesDown</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Edit_MoveSelectedLinesUp">
            <summary>Edit.MoveSelectedLinesUp<br/><c>VSConstants.VSStd12CmdID.MoveSelLinesUp</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Edit_NavigateTo">
            <summary>Edit.NavigateTo<br/><c>VSConstants.VSStd12CmdID.NavigateTo</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Edit_NewAccelerator">
            <summary>Edit.NewAccelerator<br/><c>VSConstants.VSStd2KCmdID.NEWACCELERATOR</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Edit_NewString">
            <summary>Edit.NewString<br/><c>VSConstants.VSStd2KCmdID.NEWSTRING</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Edit_NewVersionInfoBlock">
            <summary>Edit.NewVersionInfoBlock<br/><c>VSConstants.VSStd2KCmdID.NEWINFOBLOCK</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Edit_NextBookmark">
            <summary>Edit.NextBookmark<br/><c>VSConstants.VSStd2KCmdID.GOTONEXTBOOKMARK</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Edit_NextBookmarkInDocument">
            <summary>Edit.NextBookmarkInDocument<br/><c>VSConstants.VSStd2KCmdID.ECMD_GOTONEXTBOOKMARKINDOC</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Edit_NextKeyTyped">
            <summary>Edit.NextKeyTyped<br/><c>VSConstants.VSStd2KCmdID.CAPTUREKEYSTROKE</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Edit_NextMethod">
            <summary>Edit.NextMethod<br/><c>VSConstants.VSStd2KCmdID.ECMD_NEXTMETHOD</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Edit_OpenFile">
            <summary>Edit.OpenFile<br/><c>VSConstants.VSStd2KCmdID.OPENFILE</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Edit_OvertypeMode">
            <summary>Edit.OvertypeMode<br/><c>VSConstants.VSStd2KCmdID.TOGGLE_OVERTYPE_MODE</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Edit_PageDown">
            <summary>Edit.PageDown<br/><c>VSConstants.VSStd2KCmdID.PAGEDN</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Edit_PageDownExtend">
            <summary>Edit.PageDownExtend<br/><c>VSConstants.VSStd2KCmdID.PAGEDN_EXT</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Edit_PageUp">
            <summary>Edit.PageUp<br/><c>VSConstants.VSStd2KCmdID.PAGEUP</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Edit_PageUpExtend">
            <summary>Edit.PageUpExtend<br/><c>VSConstants.VSStd2KCmdID.PAGEUP_EXT</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Edit_ParameterInfo">
            <summary>Edit.ParameterInfo<br/><c>VSConstants.VSStd2KCmdID.PARAMINFO</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Edit_Paste">
            <summary>Edit.Paste<br/><c>VSConstants.VSStd97CmdID.Paste</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Edit_PasteAsLink">
            <summary>Edit.PasteAsLink<br/><c>VSConstants.VSStd11CmdID.PasteAsLink</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Edit_PasteMovesCaret">
            <summary>Edit.PasteMovesCaret<br/><c>VSConstants.VSStd2KCmdID.TOGGLECARETPASTEPOS</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Edit_PasteParameterTip">
            <summary>Edit.PasteParameterTip<br/><c>VSConstants.VSStd2KCmdID.ECMD_PASTETIP</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Edit_PeekBackward">
            <summary>Edit.PeekBackward<br/><c>VSConstants.VSStd12CmdID.PeekNavigateBackward</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Edit_PeekDefinition">
            <summary>Edit.PeekDefinition<br/><c>VSConstants.VSStd12CmdID.PeekDefinition</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Edit_PeekForward">
            <summary>Edit.PeekForward<br/><c>VSConstants.VSStd12CmdID.PeekNavigateForward</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Edit_PreviousBookmark">
            <summary>Edit.PreviousBookmark<br/><c>VSConstants.VSStd2KCmdID.GOTOPREVBOOKMARK</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Edit_PreviousBookmarkInDocument">
            <summary>Edit.PreviousBookmarkInDocument<br/><c>VSConstants.VSStd2KCmdID.ECMD_GOTOPREVBOOKMARKINDOC</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Edit_PreviousMethod">
            <summary>Edit.PreviousMethod<br/><c>VSConstants.VSStd2KCmdID.ECMD_PREVMETHOD</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Edit_QuickFindSymbol">
            <summary>Edit.QuickFindSymbol<br/><c>VSConstants.VSStd97CmdID.QuickObjectSearch</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Edit_QuickInfo">
            <summary>Edit.QuickInfo<br/><c>VSConstants.VSStd2KCmdID.QUICKINFO</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Edit_Redo">
            <summary>Edit.Redo<br/><c>VSConstants.VSStd97CmdID.Redo</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Edit_RedoLastGlobalAction">
            <summary>Edit.RedoLastGlobalAction<br/><c>VSConstants.VSStd2KCmdID.GlobalRedo</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Edit_Remove">
            <summary>Edit.Remove<br/><c>VSConstants.VSStd97CmdID.Remove</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Edit_RemoveTagHandler">
            <summary>Edit.RemoveTagHandler<br/><c>VSConstants.VSStd2KCmdID.REMOVEHANDLER</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Edit_Replace">
            <summary>Edit.Replace<br/><c>VSConstants.VSStd97CmdID.Replace</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Edit_ReplaceinFiles">
            <summary>Edit.ReplaceinFiles<br/><c>VSConstants.VSStd97CmdID.ReplaceInFiles</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Edit_ResourceIncludes">
            <summary>Edit.ResourceIncludes<br/><c>VSConstants.VSStd2KCmdID.RESOURCEINCLUDES</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Edit_ResourceSymbols">
            <summary>Edit.ResourceSymbols<br/><c>VSConstants.VSStd2KCmdID.RESOURCESYMBOLS</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Edit_ReverseCancel">
            <summary>Edit.ReverseCancel<br/><c>VSConstants.VSStd2KCmdID.REVERSECANCEL</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Edit_ReverseIncrementalSearch">
            <summary>Edit.ReverseIncrementalSearch<br/><c>VSConstants.VSStd2KCmdID.ISEARCHBACK</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Edit_ScrollColumnLeft">
            <summary>Edit.ScrollColumnLeft<br/><c>VSConstants.VSStd2KCmdID.SCROLLLEFT</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Edit_ScrollColumnRight">
            <summary>Edit.ScrollColumnRight<br/><c>VSConstants.VSStd2KCmdID.SCROLLRIGHT</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Edit_ScrollLineBottom">
            <summary>Edit.ScrollLineBottom<br/><c>VSConstants.VSStd2KCmdID.SCROLLBOTTOM</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Edit_ScrollLineCenter">
            <summary>Edit.ScrollLineCenter<br/><c>VSConstants.VSStd2KCmdID.SCROLLCENTER</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Edit_ScrollLineDown">
            <summary>Edit.ScrollLineDown<br/><c>VSConstants.VSStd2KCmdID.SCROLLDN</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Edit_ScrollLineTop">
            <summary>Edit.ScrollLineTop<br/><c>VSConstants.VSStd2KCmdID.SCROLLTOP</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Edit_ScrollLineUp">
            <summary>Edit.ScrollLineUp<br/><c>VSConstants.VSStd2KCmdID.SCROLLUP</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Edit_ScrollPageDown">
            <summary>Edit.ScrollPageDown<br/><c>VSConstants.VSStd2KCmdID.SCROLLPAGEDN</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Edit_ScrollPageUp">
            <summary>Edit.ScrollPageUp<br/><c>VSConstants.VSStd2KCmdID.SCROLLPAGEUP</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Edit_SelectAll">
            <summary>Edit.SelectAll<br/><c>VSConstants.VSStd97CmdID.SelectAll</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Edit_SelectCurrentWord">
            <summary>Edit.SelectCurrentWord<br/><c>VSConstants.VSStd2KCmdID.SELECTCURRENTWORD</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Edit_SelectionCancel">
            <summary>Edit.SelectionCancel<br/><c>VSConstants.VSStd2KCmdID.CANCEL</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Edit_SelectNextControl">
            <summary>Edit.SelectNextControl<br/><c>VSConstants.VSStd2KCmdID.NEXTCTL</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Edit_SelectPreviousControl">
            <summary>Edit.SelectPreviousControl<br/><c>VSConstants.VSStd2KCmdID.PREVCTL</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Edit_SelectToLastGoBack">
            <summary>Edit.SelectToLastGoBack<br/><c>VSConstants.VSStd2KCmdID.SELTOGOBACK</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Edit_ShowGrid">
            <summary>Edit.ShowGrid<br/><c>VSConstants.VSStd2KCmdID.CANCELDRAG</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Edit_ShowSnippetHighlighting">
            <summary>Edit.ShowSnippetHighlighting<br/><c>VSConstants.VSStd2KCmdID.SHOWSNIPPETHIGHLIGHTING</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Edit_ShowTileGrid">
            <summary>Edit.ShowTileGrid<br/><c>VSConstants.VSStd2KCmdID.DEFAULTACTION</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Edit_SizeControlDown">
            <summary>Edit.SizeControlDown<br/><c>VSConstants.VSStd2KCmdID.CTLSIZEDOWN</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Edit_SizeControlDownGrid">
            <summary>Edit.SizeControlDownGrid<br/><c>VSConstants.VSStd2KCmdID.CTLSIZEDOWNGRID</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Edit_SizeControlLeft">
            <summary>Edit.SizeControlLeft<br/><c>VSConstants.VSStd2KCmdID.CTLSIZELEFT</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Edit_SizeControlLeftGrid">
            <summary>Edit.SizeControlLeftGrid<br/><c>VSConstants.VSStd2KCmdID.CTLSIZELEFTGRID</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Edit_SizeControlRight">
            <summary>Edit.SizeControlRight<br/><c>VSConstants.VSStd2KCmdID.CTLSIZERIGHT</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Edit_SizeControlRightGrid">
            <summary>Edit.SizeControlRightGrid<br/><c>VSConstants.VSStd2KCmdID.CTLSIZERIGHTGRID</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Edit_SizeControlUp">
            <summary>Edit.SizeControlUp<br/><c>VSConstants.VSStd2KCmdID.CTLSIZEUP</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Edit_SizeControlUpGrid">
            <summary>Edit.SizeControlUpGrid<br/><c>VSConstants.VSStd2KCmdID.CTLSIZEUPGRID</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Edit_SmartBreakLine">
            <summary>Edit.SmartBreakLine<br/><c>VSConstants.VSStd14CmdID.SmartBreakLine</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Edit_StartAutomaticOutlining">
            <summary>Edit.StartAutomaticOutlining<br/><c>VSConstants.VSStd2KCmdID.OUTLN_START_AUTOHIDING</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Edit_StopHidingCurrent">
            <summary>Edit.StopHidingCurrent<br/><c>VSConstants.VSStd2KCmdID.OUTLN_STOP_HIDING_CURRENT</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Edit_StopOutlining">
            <summary>Edit.StopOutlining<br/><c>VSConstants.VSStd2KCmdID.OUTLN_STOP_HIDING_ALL</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Edit_StopOutliningTag">
            <summary>Edit.StopOutliningTag<br/><c>VSConstants.VSStd2KCmdID.UNCOLLAPSETAG</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Edit_StopSearch">
            <summary>Edit.StopSearch<br/><c>VSConstants.VSStd97CmdID.FindStop</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Edit_SurroundWith">
            <summary>Edit.SurroundWith<br/><c>VSConstants.VSStd2KCmdID.SURROUNDWITH</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Edit_SwapAnchor">
            <summary>Edit.SwapAnchor<br/><c>VSConstants.VSStd2KCmdID.SELSWAPANCHOR</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Edit_SwitchbetweenautomaticandtabonlyIntelliSensecompletion">
            <summary>Edit.SwitchbetweenautomaticandtabonlyIntelliSensecompletion<br/><c>VSConstants.VSStd2KCmdID.ToggleConsumeFirstCompletionMode</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Edit_SwitchtoFindinFiles">
            <summary>Edit.SwitchtoFindinFiles<br/><c>VSConstants.VSStd2KCmdID.INSERTFORM</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Edit_SwitchtoQuickFind">
            <summary>Edit.SwitchtoQuickFind<br/><c>VSConstants.VSStd2KCmdID.IMAGE</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Edit_SwitchtoQuickReplace">
            <summary>Edit.SwitchtoQuickReplace<br/><c>VSConstants.VSStd2KCmdID.HTMLCLIENTSCRIPTBLOCK</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Edit_SwitchtoReplaceinFiles">
            <summary>Edit.SwitchtoReplaceinFiles<br/><c>VSConstants.VSStd2KCmdID.HTMLSERVERSCRIPTBLOCK</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Edit_TabifySelectedLines">
            <summary>Edit.TabifySelectedLines<br/><c>VSConstants.VSStd2KCmdID.SELTABIFY</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Edit_TabLeft">
            <summary>Edit.TabLeft<br/><c>VSConstants.VSStd2KCmdID.BACKTAB</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Edit_ToggleAllOutlining">
            <summary>Edit.ToggleAllOutlining<br/><c>VSConstants.VSStd2KCmdID.OUTLN_TOGGLE_ALL</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Edit_ToggleBookmark">
            <summary>Edit.ToggleBookmark<br/><c>VSConstants.VSStd2KCmdID.TOGGLETEMPBOOKMARK</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Edit_ToggleCase">
            <summary>Edit.ToggleCase<br/><c>VSConstants.VSStd2KCmdID.SELTOGGLECASE</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Edit_ToggleOutliningExpansion">
            <summary>Edit.ToggleOutliningExpansion<br/><c>VSConstants.VSStd2KCmdID.OUTLN_TOGGLE_CURRENT</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Edit_ToggleTaskListShortcut">
            <summary>Edit.ToggleTaskListShortcut<br/><c>VSConstants.VSStd2KCmdID.TOGGLESHORTCUT</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Edit_ToggleWordWrap">
            <summary>Edit.ToggleWordWrap<br/><c>VSConstants.VSStd2KCmdID.TOGGLEWORDWRAP</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Edit_UncommentSelection">
            <summary>Edit.UncommentSelection<br/><c>VSConstants.VSStd2KCmdID.UNCOMMENT_BLOCK</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Edit_Undo">
            <summary>Edit.Undo<br/><c>VSConstants.VSStd97CmdID.Undo</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Edit_UndoLastGlobalAction">
            <summary>Edit.UndoLastGlobalAction<br/><c>VSConstants.VSStd2KCmdID.GlobalUndo</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Edit_UntabifySelectedLines">
            <summary>Edit.UntabifySelectedLines<br/><c>VSConstants.VSStd2KCmdID.SELUNTABIFY</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Edit_ValidateDocument">
            <summary>Edit.ValidateDocument<br/><c>VSConstants.VSStd2KCmdID.VALIDATEHTMLDATA</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Edit_ViewAsPopup">
            <summary>Edit.ViewAsPopup<br/><c>VSConstants.VSStd2KCmdID.VIEWASPOPUP</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Edit_ViewBottom">
            <summary>Edit.ViewBottom<br/><c>VSConstants.VSStd2KCmdID.BOTTOMLINE</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Edit_ViewBottomExtend">
            <summary>Edit.ViewBottomExtend<br/><c>VSConstants.VSStd2KCmdID.BOTTOMLINE_EXT</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Edit_ViewTop">
            <summary>Edit.ViewTop<br/><c>VSConstants.VSStd2KCmdID.TOPLINE</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Edit_ViewTopExtend">
            <summary>Edit.ViewTopExtend<br/><c>VSConstants.VSStd2KCmdID.TOPLINE_EXT</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Edit_ViewWhiteSpace">
            <summary>Edit.ViewWhiteSpace<br/><c>VSConstants.VSStd2KCmdID.TOGGLEVISSPACE</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Edit_WordDeleteToEnd">
            <summary>Edit.WordDeleteToEnd<br/><c>VSConstants.VSStd2KCmdID.DELETEWORDRIGHT</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Edit_WordDeleteToStart">
            <summary>Edit.WordDeleteToStart<br/><c>VSConstants.VSStd2KCmdID.DELETEWORDLEFT</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Edit_WordNext">
            <summary>Edit.WordNext<br/><c>VSConstants.VSStd2KCmdID.WORDNEXT</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Edit_WordNextExtend">
            <summary>Edit.WordNextExtend<br/><c>VSConstants.VSStd2KCmdID.WORDNEXT_EXT</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Edit_WordNextExtendColumn">
            <summary>Edit.WordNextExtendColumn<br/><c>VSConstants.VSStd2KCmdID.WORDNEXT_EXT_COL</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Edit_WordPrevious">
            <summary>Edit.WordPrevious<br/><c>VSConstants.VSStd2KCmdID.WORDPREV</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Edit_WordPreviousExtend">
            <summary>Edit.WordPreviousExtend<br/><c>VSConstants.VSStd2KCmdID.WORDPREV_EXT</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Edit_WordPreviousExtendColumn">
            <summary>Edit.WordPreviousExtendColumn<br/><c>VSConstants.VSStd2KCmdID.WORDPREV_EXT_COL</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Edit_WordTranspose">
            <summary>Edit.WordTranspose<br/><c>VSConstants.VSStd2KCmdID.TRANSPOSEWORD</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.EditorContextMenus_CodeWindow_Breakpoint_InsertBreakpoint">
            <summary>EditorContextMenus.CodeWindow.Breakpoint.InsertBreakpoint<br/><c>VSConstants.VSStd97CmdID.InsertBreakpoint</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.EditorContextMenus_CodeWindow_ExecuteInInteractive">
            <summary>EditorContextMenus.CodeWindow.ExecuteInInteractive<br/><c>VSConstants.VSStd11CmdID.ExecuteSelectionInInteractive</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.EditorContextMenus_CodeWindow_ExecuteLineInInteractive">
            <summary>EditorContextMenus.CodeWindow.ExecuteLineInInteractive<br/><c>VSConstants.VSStd11CmdID.ExecuteLineInInteractive</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.EditorContextMenus_CodeWindow_GoToNext">
            <summary>EditorContextMenus.CodeWindow.GoToNext<br/><c>VSConstants.VSStd2KCmdID.CodeDefViewGoToNext</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.EditorContextMenus_CodeWindow_GoToPrevious">
            <summary>EditorContextMenus.CodeWindow.GoToPrevious<br/><c>VSConstants.VSStd2KCmdID.CodeDefViewGoToPrev</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.EditorContextMenus_CodeWindow_OpenURL">
            <summary>EditorContextMenus.CodeWindow.OpenURL<br/><c>VSConstants.VSStd2KCmdID.OPENURL</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.EditorContextMenus_CodeWindow_QuickActionsForPosition">
            <summary>EditorContextMenus.CodeWindow.QuickActionsForPosition<br/><c>VSConstants.VSStd14CmdID.ShowQuickFixesForPosition</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.EditorContextMenus_CodeWindow_ViewCallHierarchy">
            <summary>EditorContextMenus.CodeWindow.ViewCallHierarchy<br/><c>VSConstants.VSStd2KCmdID.ViewCallHierarchy</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Errors">
            <summary>Errors<br/><c>VSConstants.VSStd2KCmdID.ErrorListShowErrors</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.File_AccountSettings">
            <summary>File.AccountSettings<br/><c>VSConstants.VSStd12CmdID.AccountSettings</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.File_AddExistingProject">
            <summary>File.AddExistingProject<br/><c>VSConstants.VSStd97CmdID.AddExistingProject</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.File_AddNewProject">
            <summary>File.AddNewProject<br/><c>VSConstants.VSStd97CmdID.AddNewProject</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.File_AddtoSourceControl">
            <summary>File.AddtoSourceControl<br/><c>VSConstants.VSStd12CmdID.ShareProject</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.File_AdvancedSaveOptions">
            <summary>File.AdvancedSaveOptions<br/><c>VSConstants.VSStd97CmdID.SaveOptions</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.File_BrowseWith">
            <summary>File.BrowseWith<br/><c>VSConstants.VSStd97CmdID.BrowseWith</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.File_Close">
            <summary>File.Close<br/><c>VSConstants.VSStd97CmdID.FileClose</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.File_CloseAllButThis">
            <summary>File.CloseAllButThis<br/><c>VSConstants.VSStd2KCmdID.CloseAllButThis</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.File_CloseProject">
            <summary>File.CloseProject<br/><c>VSConstants.VSStd2KCmdID.CloseProject</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.File_CloseSolution">
            <summary>File.CloseSolution<br/><c>VSConstants.VSStd97CmdID.CloseSolution</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.File_CopyFullPath">
            <summary>File.CopyFullPath<br/><c>VSConstants.VSStd2KCmdID.CopyFullPathName</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.File_Exit">
            <summary>File.Exit<br/><c>VSConstants.VSStd97CmdID.Exit</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.File_NewFile">
            <summary>File.NewFile<br/><c>VSConstants.VSStd97CmdID.FileNew</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.File_NewProject">
            <summary>File.NewProject<br/><c>VSConstants.VSStd97CmdID.NewProject</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.File_NewProjectFromTemplate">
            <summary>File.NewProjectFromTemplate<br/><c>VSConstants.VSStd11CmdID.NewProjectFromTemplate</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.File_OpenContainingFolder">
            <summary>File.OpenContainingFolder<br/><c>VSConstants.VSStd2KCmdID.BrowseToFileInExplorer</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.File_OpenFile">
            <summary>File.OpenFile<br/><c>VSConstants.VSStd97CmdID.FileOpen</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.File_OpenProject">
            <summary>File.OpenProject<br/><c>VSConstants.VSStd97CmdID.OpenProject</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.File_PageSetup">
            <summary>File.PageSetup<br/><c>VSConstants.VSStd97CmdID.PageSetup</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.File_Print">
            <summary>File.Print<br/><c>VSConstants.VSStd97CmdID.Print</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.File_PrintPreview">
            <summary>File.PrintPreview<br/><c>VSConstants.VSStd97CmdID.PrintPreview</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.File_ProjectPickerMoveInto">
            <summary>File.ProjectPickerMoveInto<br/><c>VSConstants.VSStd97CmdID.MoveFileToProjectPick</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.File_Rename">
            <summary>File.Rename<br/><c>VSConstants.VSStd97CmdID.Rename</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.File_SaveAll">
            <summary>File.SaveAll<br/><c>VSConstants.VSStd97CmdID.SaveSolution</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.File_SaveCopyofSelectedItemsAs">
            <summary>File.SaveCopyofSelectedItemsAs<br/><c>VSConstants.VSStd2KCmdID.SAVECOPYOFITEMAS</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.File_SaveSelectedItems">
            <summary>File.SaveSelectedItems<br/><c>VSConstants.VSStd97CmdID.SaveProjectItem</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.File_SaveSelectedItemsAs">
            <summary>File.SaveSelectedItemsAs<br/><c>VSConstants.VSStd97CmdID.SaveProjectItemAs</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.File_SaveSelection">
            <summary>File.SaveSelection<br/><c>VSConstants.VSStd97CmdID.SaveSelection</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.File_SelectProjectTemplate">
            <summary>File.SelectProjectTemplate<br/><c>VSConstants.VSStd97CmdID.SelectProjectTemplate</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.File_ViewinBrowser">
            <summary>File.ViewinBrowser<br/><c>VSConstants.VSStd97CmdID.PreviewInBrowser</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Format_AlignBottoms">
            <summary>Format.AlignBottoms<br/><c>VSConstants.VSStd97CmdID.AlignBottom</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Format_AlignCenters">
            <summary>Format.AlignCenters<br/><c>VSConstants.VSStd97CmdID.AlignVerticalCenters</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Format_AlignLefts">
            <summary>Format.AlignLefts<br/><c>VSConstants.VSStd97CmdID.AlignLeft</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Format_AlignMiddles">
            <summary>Format.AlignMiddles<br/><c>VSConstants.VSStd97CmdID.AlignHorizontalCenters</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Format_AlignRights">
            <summary>Format.AlignRights<br/><c>VSConstants.VSStd97CmdID.AlignRight</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Format_AligntoGrid">
            <summary>Format.AligntoGrid<br/><c>VSConstants.VSStd97CmdID.AlignToGrid</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Format_AlignTops">
            <summary>Format.AlignTops<br/><c>VSConstants.VSStd97CmdID.AlignTop</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Format_BackgroundColor">
            <summary>Format.BackgroundColor<br/><c>VSConstants.VSStd97CmdID.BackColor</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Format_Bold">
            <summary>Format.Bold<br/><c>VSConstants.VSStd97CmdID.Bold</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Format_BringtoFront">
            <summary>Format.BringtoFront<br/><c>VSConstants.VSStd97CmdID.BringToFront</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Format_ButtonBottom">
            <summary>Format.ButtonBottom<br/><c>VSConstants.VSStd2KCmdID.BUTTONBOTTOM</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Format_ButtonRight">
            <summary>Format.ButtonRight<br/><c>VSConstants.VSStd2KCmdID.BUTTONRIGHT</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Format_CenterHorizontal">
            <summary>Format.CenterHorizontal<br/><c>VSConstants.VSStd2KCmdID.CENTERHORZ</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Format_CenterHorizontally">
            <summary>Format.CenterHorizontally<br/><c>VSConstants.VSStd97CmdID.CenterHorizontally</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Format_CenterVertical">
            <summary>Format.CenterVertical<br/><c>VSConstants.VSStd2KCmdID.CENTERVERT</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Format_CenterVertically">
            <summary>Format.CenterVertically<br/><c>VSConstants.VSStd97CmdID.CenterVertically</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Format_CheckMnemonics">
            <summary>Format.CheckMnemonics<br/><c>VSConstants.VSStd2KCmdID.CHECKMNEMONICS</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Format_ConverttoHyperlink">
            <summary>Format.ConverttoHyperlink<br/><c>VSConstants.VSStd2KCmdID.HYPERLINK</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Format_DecreaseHorizontalSpacing">
            <summary>Format.DecreaseHorizontalSpacing<br/><c>VSConstants.VSStd97CmdID.HorizSpaceDecrease</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Format_DecreaseIndent">
            <summary>Format.DecreaseIndent<br/><c>VSConstants.VSStd2KCmdID.LAYOUTUNINDENT</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Format_DecreaseVerticalSpacing">
            <summary>Format.DecreaseVerticalSpacing<br/><c>VSConstants.VSStd97CmdID.VertSpaceDecrease</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Format_FixedWidth">
            <summary>Format.FixedWidth<br/><c>VSConstants.VSStd2KCmdID.AUTOLAYOUTNORESIZE</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Format_Flip">
            <summary>Format.Flip<br/><c>VSConstants.VSStd2KCmdID.FLIPDIALOG</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Format_ForegroundColor">
            <summary>Format.ForegroundColor<br/><c>VSConstants.VSStd97CmdID.ForeColor</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Format_GuideSettings">
            <summary>Format.GuideSettings<br/><c>VSConstants.VSStd2KCmdID.GUIDESETTINGS</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Format_IncreaseHorizontalSpacing">
            <summary>Format.IncreaseHorizontalSpacing<br/><c>VSConstants.VSStd97CmdID.HorizSpaceIncrease</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Format_IncreaseIndent">
            <summary>Format.IncreaseIndent<br/><c>VSConstants.VSStd2KCmdID.LAYOUTINDENT</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Format_IncreaseVerticalSpacing">
            <summary>Format.IncreaseVerticalSpacing<br/><c>VSConstants.VSStd97CmdID.VertSpaceIncrease</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Format_InsertBookmark">
            <summary>Format.InsertBookmark<br/><c>VSConstants.VSStd2KCmdID.BOOKMARK</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Format_Italic">
            <summary>Format.Italic<br/><c>VSConstants.VSStd97CmdID.Italic</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Format_Justify">
            <summary>Format.Justify<br/><c>VSConstants.VSStd97CmdID.JustifyGeneral</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Format_JustifyCenter">
            <summary>Format.JustifyCenter<br/><c>VSConstants.VSStd97CmdID.JustifyCenter</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Format_JustifyLeft">
            <summary>Format.JustifyLeft<br/><c>VSConstants.VSStd97CmdID.JustifyLeft</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Format_JustifyRight">
            <summary>Format.JustifyRight<br/><c>VSConstants.VSStd97CmdID.JustifyRight</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Format_LockControls">
            <summary>Format.LockControls<br/><c>VSConstants.VSStd97CmdID.LockControls</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Format_MakeHorizontalSpacingEqual">
            <summary>Format.MakeHorizontalSpacingEqual<br/><c>VSConstants.VSStd97CmdID.HorizSpaceMakeEqual</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Format_MakeSameHeight">
            <summary>Format.MakeSameHeight<br/><c>VSConstants.VSStd97CmdID.SizeToControlHeight</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Format_MakeSameSize">
            <summary>Format.MakeSameSize<br/><c>VSConstants.VSStd97CmdID.SizeToControl</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Format_MakeSameWidth">
            <summary>Format.MakeSameWidth<br/><c>VSConstants.VSStd97CmdID.SizeToControlWidth</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Format_MakeVerticalSpacingEqual">
            <summary>Format.MakeVerticalSpacingEqual<br/><c>VSConstants.VSStd97CmdID.VertSpaceMakeEqual</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Format_Optimize">
            <summary>Format.Optimize<br/><c>VSConstants.VSStd2KCmdID.AUTOLAYOUTOPTIMIZE</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Format_RemoveHorizontalSpacing">
            <summary>Format.RemoveHorizontalSpacing<br/><c>VSConstants.VSStd97CmdID.HorizSpaceConcatenate</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Format_RemoveVerticalSpacing">
            <summary>Format.RemoveVerticalSpacing<br/><c>VSConstants.VSStd97CmdID.VertSpaceConcatenate</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Format_SendtoBack">
            <summary>Format.SendtoBack<br/><c>VSConstants.VSStd97CmdID.SendToBack</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Format_SizetoContent">
            <summary>Format.SizetoContent<br/><c>VSConstants.VSStd2KCmdID.SIZETOTEXT</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Format_SizetoGrid">
            <summary>Format.SizetoGrid<br/><c>VSConstants.VSStd97CmdID.SizeToGrid</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Format_SpaceAcross">
            <summary>Format.SpaceAcross<br/><c>VSConstants.VSStd2KCmdID.SPACEACROSS</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Format_SpaceDown">
            <summary>Format.SpaceDown<br/><c>VSConstants.VSStd2KCmdID.SPACEDOWN</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Format_Stretch">
            <summary>Format.Stretch<br/><c>VSConstants.VSStd2KCmdID.AUTOLAYOUTGROW</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Format_Subscript">
            <summary>Format.Subscript<br/><c>VSConstants.VSStd2KCmdID.SUBSCRIPT</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Format_Superscript">
            <summary>Format.Superscript<br/><c>VSConstants.VSStd2KCmdID.SUPERSCRIPT</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Format_TabOrder">
            <summary>Format.TabOrder<br/><c>VSConstants.VSStd2KCmdID.SETTABORDER</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Format_TestDialog">
            <summary>Format.TestDialog<br/><c>VSConstants.VSStd2KCmdID.TESTDIALOG</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Format_ToggleGuides">
            <summary>Format.ToggleGuides<br/><c>VSConstants.VSStd2KCmdID.TOGGLEGUIDES</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Format_Underline">
            <summary>Format.Underline<br/><c>VSConstants.VSStd97CmdID.Underline</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Help_About">
            <summary>Help.About<br/><c>VSConstants.VSStd97CmdID.About</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Help_DebugHelpContext">
            <summary>Help.DebugHelpContext<br/><c>VSConstants.VSStd97CmdID.TaskListFilterByCategoryCompiler</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Help_F1Help">
            <summary>Help.F1Help<br/><c>VSConstants.VSStd97CmdID.F1Help</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Help_RegisterProduct">
            <summary>Help.RegisterProduct<br/><c>VSConstants.VSStd2KCmdID.Registration</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Help_TechnicalSupport">
            <summary>Help.TechnicalSupport<br/><c>VSConstants.VSStd97CmdID.TechSupport</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Help_WindowHelp">
            <summary>Help.WindowHelp<br/><c>VSConstants.VSStd97CmdID.WindowHelp</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Image_AdjustColors">
            <summary>Image.AdjustColors<br/><c>VSConstants.VSStd2KCmdID.ADJUSTCOLORS</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Image_AirbrushTool">
            <summary>Image.AirbrushTool<br/><c>VSConstants.VSStd2KCmdID.AIRBRUSHTOOL</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Image_BrushTool">
            <summary>Image.BrushTool<br/><c>VSConstants.VSStd2KCmdID.BRUSHTOOL</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Image_ColorSelectionTool">
            <summary>Image.ColorSelectionTool<br/><c>VSConstants.VSStd2KCmdID.PICKCOLOR</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Image_CurveTool">
            <summary>Image.CurveTool<br/><c>VSConstants.VSStd2KCmdID.CURVETOOL</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Image_DeleteImageType">
            <summary>Image.DeleteImageType<br/><c>VSConstants.VSStd2KCmdID.DELETEDEVICEIMAGE</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Image_DrawOpaque">
            <summary>Image.DrawOpaque<br/><c>VSConstants.VSStd2KCmdID.DRAWOPAQUE</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Image_EllipseTool">
            <summary>Image.EllipseTool<br/><c>VSConstants.VSStd2KCmdID.ELLIPSETOOL</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Image_EraseTool">
            <summary>Image.EraseTool<br/><c>VSConstants.VSStd2KCmdID.ERASERTOOL</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Image_FilledEllipseTool">
            <summary>Image.FilledEllipseTool<br/><c>VSConstants.VSStd2KCmdID.FILLEDELLIPSETOOL</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Image_FilledRectangleTool">
            <summary>Image.FilledRectangleTool<br/><c>VSConstants.VSStd2KCmdID.FILLEDRECTTOOL</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Image_FilledRoundedRectangleTool">
            <summary>Image.FilledRoundedRectangleTool<br/><c>VSConstants.VSStd2KCmdID.FILLEDROUNDRECTTOOL</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Image_FillTool">
            <summary>Image.FillTool<br/><c>VSConstants.VSStd2KCmdID.FILLTOOL</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Image_FlipHorizontal">
            <summary>Image.FlipHorizontal<br/><c>VSConstants.VSStd2KCmdID.FLIPHORIZONTAL</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Image_FlipVertical">
            <summary>Image.FlipVertical<br/><c>VSConstants.VSStd2KCmdID.FLIPVERTICAL</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Image_GridSettings">
            <summary>Image.GridSettings<br/><c>VSConstants.VSStd2KCmdID.GRIDSETTINGS</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Image_InvertColors">
            <summary>Image.InvertColors<br/><c>VSConstants.VSStd2KCmdID.INVERTCOLORS</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Image_IrregularSelectionTool">
            <summary>Image.IrregularSelectionTool<br/><c>VSConstants.VSStd2KCmdID.PICKREGION</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Image_LargerBrush">
            <summary>Image.LargerBrush<br/><c>VSConstants.VSStd2KCmdID.LARGERBRUSH</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Image_LineTool">
            <summary>Image.LineTool<br/><c>VSConstants.VSStd2KCmdID.LINETOOL</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Image_LoadPalette">
            <summary>Image.LoadPalette<br/><c>VSConstants.VSStd2KCmdID.LOADPALETTE</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Image_MagnificationTool">
            <summary>Image.MagnificationTool<br/><c>VSConstants.VSStd2KCmdID.ZOOMTOOL</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Image_Magnify">
            <summary>Image.Magnify<br/><c>VSConstants.VSStd2KCmdID.MAGNIFY</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Image_NewImageType">
            <summary>Image.NewImageType<br/><c>VSConstants.VSStd2KCmdID.NEWDEVICEIMAGE</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Image_NextColor">
            <summary>Image.NextColor<br/><c>VSConstants.VSStd2KCmdID.NEXTCOLOR</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Image_NextRightColor">
            <summary>Image.NextRightColor<br/><c>VSConstants.VSStd2KCmdID.NEXTECOLOR</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Image_OpenExternalEditor">
            <summary>Image.OpenExternalEditor<br/><c>VSConstants.VSStd2KCmdID.OPENEXTERNALEDITOR</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Image_OutlinedEllipseTool">
            <summary>Image.OutlinedEllipseTool<br/><c>VSConstants.VSStd2KCmdID.OUTLINEELLIPSETOOL</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Image_OutlinedRectangleTool">
            <summary>Image.OutlinedRectangleTool<br/><c>VSConstants.VSStd2KCmdID.OUTLINERECTTOOL</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Image_OutlinedRoundedRectangleTool">
            <summary>Image.OutlinedRoundedRectangleTool<br/><c>VSConstants.VSStd2KCmdID.OUTLINEROUNDRECTTOOL</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Image_PencilTool">
            <summary>Image.PencilTool<br/><c>VSConstants.VSStd2KCmdID.PENCILTOOL</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Image_PreviousColor">
            <summary>Image.PreviousColor<br/><c>VSConstants.VSStd2KCmdID.PREVCOLOR</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Image_PreviousRightColor">
            <summary>Image.PreviousRightColor<br/><c>VSConstants.VSStd2KCmdID.PREVECOLOR</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Image_RectangleSelectionTool">
            <summary>Image.RectangleSelectionTool<br/><c>VSConstants.VSStd2KCmdID.PICKRECTANGLE</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Image_RectangleTool">
            <summary>Image.RectangleTool<br/><c>VSConstants.VSStd2KCmdID.RECTTOOL</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Image_Rotate90Degrees">
            <summary>Image.Rotate90Degrees<br/><c>VSConstants.VSStd2KCmdID.ROTATE90</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Image_RoundedRectangleTool">
            <summary>Image.RoundedRectangleTool<br/><c>VSConstants.VSStd2KCmdID.ROUNDRECTTOOL</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Image_SavePalette">
            <summary>Image.SavePalette<br/><c>VSConstants.VSStd2KCmdID.SAVEPALETTE</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Image_ShowColorsWindow">
            <summary>Image.ShowColorsWindow<br/><c>VSConstants.VSStd2KCmdID.SHOWCOLORSWINDOW</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Image_ShowGrid">
            <summary>Image.ShowGrid<br/><c>VSConstants.VSStd2KCmdID.SHOWIMAGEGRID</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Image_ShowTileGrid">
            <summary>Image.ShowTileGrid<br/><c>VSConstants.VSStd2KCmdID.SHOWTILEGRID</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Image_SmallBrush">
            <summary>Image.SmallBrush<br/><c>VSConstants.VSStd2KCmdID.SMALLBRUSH</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Image_SmallerBrush">
            <summary>Image.SmallerBrush<br/><c>VSConstants.VSStd2KCmdID.SMALLERBRUSH</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Image_TextTool">
            <summary>Image.TextTool<br/><c>VSConstants.VSStd2KCmdID.TEXTTOOL</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Image_ToolbarEditor">
            <summary>Image.ToolbarEditor<br/><c>VSConstants.VSStd2KCmdID.TOOLBAREDITOR</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Image_ZoomIn">
            <summary>Image.ZoomIn<br/><c>VSConstants.VSStd2KCmdID.ZOOMIN</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Image_ZoomOut">
            <summary>Image.ZoomOut<br/><c>VSConstants.VSStd2KCmdID.ZOOMOUT</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Layout_MergeCells">
            <summary>Layout.MergeCells<br/><c>VSConstants.VSStd2KCmdID.MERGECELLS</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Layout_Static">
            <summary>Layout.Static<br/><c>VSConstants.VSStd2KCmdID.MAKESTATIC</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.ManageExtensions">
            <summary>ManageExtensions<br/><c>VSConstants.VSStd2010CmdID.ExtensionManager</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Messages">
            <summary>Messages<br/><c>VSConstants.VSStd2KCmdID.ErrorListShowMessages</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.OtherContextMenus_ColumnContext_Deletekey">
            <summary>OtherContextMenus.ColumnContext.Deletekey<br/><c>VSConstants.VSStd2KCmdID.ECMD_DELETECONSTRAINT</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.OtherContextMenus_ColumnContext_Editkey">
            <summary>OtherContextMenus.ColumnContext.Editkey<br/><c>VSConstants.VSStd2KCmdID.ECMD_EDITCONSTRAINT</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.OtherContextMenus_ColumnContext_InsertColumn">
            <summary>OtherContextMenus.ColumnContext.InsertColumn<br/><c>VSConstants.VSStd2KCmdID.ECMD_INSERT_COLUMN</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.OtherContextMenus_ColumnContext_SetPrimaryKey">
            <summary>OtherContextMenus.ColumnContext.SetPrimaryKey<br/><c>VSConstants.VSStd2KCmdID.ECMD_SET_PRIMARY_KEY</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.OtherContextMenus_Context_EditImage">
            <summary>OtherContextMenus.Context.EditImage<br/><c>VSConstants.VSStd2KCmdID.EDITIMAGE</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.OtherContextMenus_Context_ViewCode">
            <summary>OtherContextMenus.Context.ViewCode<br/><c>VSConstants.VSStd2KCmdID.EDITCODEBEHIND</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.OtherContextMenus_DatabaseDesigner_NewTable">
            <summary>OtherContextMenus.DatabaseDesigner.NewTable<br/><c>VSConstants.VSStd97CmdID.NewTable</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.OtherContextMenus_DataSourceContext_Add_DataTable">
            <summary>OtherContextMenus.DataSourceContext.Add.DataTable<br/><c>VSConstants.VSStd2KCmdID.ECMD_ADDDATATABLE</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.OtherContextMenus_DataSourceContext_Add_Query">
            <summary>OtherContextMenus.DataSourceContext.Add.Query<br/><c>VSConstants.VSStd2KCmdID.ECMD_QUERY</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.OtherContextMenus_DataSourceContext_Add_Relation">
            <summary>OtherContextMenus.DataSourceContext.Add.Relation<br/><c>VSConstants.VSStd2KCmdID.ECMD_ADDRELATION</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.OtherContextMenus_DataSourceContext_Add_TableAdapter">
            <summary>OtherContextMenus.DataSourceContext.Add.TableAdapter<br/><c>VSConstants.VSStd2KCmdID.ECMD_DATAACCESSOR</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.OtherContextMenus_DataSourceContext_PreviewData">
            <summary>OtherContextMenus.DataSourceContext.PreviewData<br/><c>VSConstants.VSStd2KCmdID.VSDPreview</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.OtherContextMenus_DataSourceContext_ShowRelationLabels">
            <summary>OtherContextMenus.DataSourceContext.ShowRelationLabels<br/><c>VSConstants.VSStd2KCmdID.ECMD_SHOW_RELATION_LABELS</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.OtherContextMenus_DbTableContext_Add_Column">
            <summary>OtherContextMenus.DbTableContext.Add.Column<br/><c>VSConstants.VSStd2KCmdID.ECMD_ADDCOLUMN</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.OtherContextMenus_DbTableContext_Add_Key">
            <summary>OtherContextMenus.DbTableContext.Add.Key<br/><c>VSConstants.VSStd2KCmdID.ECMD_ADDKEY</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.OtherContextMenus_DbTableContext_Configure">
            <summary>OtherContextMenus.DbTableContext.Configure<br/><c>VSConstants.VSStd2KCmdID.ECMD_CONFIGURE</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.OtherContextMenus_DragandDrop_Cancel">
            <summary>OtherContextMenus.DragandDrop.Cancel<br/><c>VSConstants.VSStd2KCmdID.DRAG_CANCEL</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.OtherContextMenus_DragandDrop_CopyHere">
            <summary>OtherContextMenus.DragandDrop.CopyHere<br/><c>VSConstants.VSStd2KCmdID.DRAG_COPY</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.OtherContextMenus_DragandDrop_MoveHere">
            <summary>OtherContextMenus.DragandDrop.MoveHere<br/><c>VSConstants.VSStd2KCmdID.DRAG_MOVE</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.OtherContextMenus_EasyMDIDragging_Cancel">
            <summary>OtherContextMenus.EasyMDIDragging.Cancel<br/><c>VSConstants.VSStd97CmdID.CancelEZDrag</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.OtherContextMenus_ErrorCorrection_Correction1">
            <summary>OtherContextMenus.ErrorCorrection.Correction1<br/><c>VSConstants.VSStd2KCmdID.ECMD_CORRECTION_1</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.OtherContextMenus_ErrorCorrection_Correction10">
            <summary>OtherContextMenus.ErrorCorrection.Correction10<br/><c>VSConstants.VSStd2KCmdID.ECMD_CORRECTION_10</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.OtherContextMenus_ErrorCorrection_Correction2">
            <summary>OtherContextMenus.ErrorCorrection.Correction2<br/><c>VSConstants.VSStd2KCmdID.ECMD_CORRECTION_2</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.OtherContextMenus_ErrorCorrection_Correction3">
            <summary>OtherContextMenus.ErrorCorrection.Correction3<br/><c>VSConstants.VSStd2KCmdID.ECMD_CORRECTION_3</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.OtherContextMenus_ErrorCorrection_Correction4">
            <summary>OtherContextMenus.ErrorCorrection.Correction4<br/><c>VSConstants.VSStd2KCmdID.ECMD_CORRECTION_4</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.OtherContextMenus_ErrorCorrection_Correction5">
            <summary>OtherContextMenus.ErrorCorrection.Correction5<br/><c>VSConstants.VSStd2KCmdID.ECMD_CORRECTION_5</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.OtherContextMenus_ErrorCorrection_Correction6">
            <summary>OtherContextMenus.ErrorCorrection.Correction6<br/><c>VSConstants.VSStd2KCmdID.ECMD_CORRECTION_6</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.OtherContextMenus_ErrorCorrection_Correction7">
            <summary>OtherContextMenus.ErrorCorrection.Correction7<br/><c>VSConstants.VSStd2KCmdID.ECMD_CORRECTION_7</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.OtherContextMenus_ErrorCorrection_Correction8">
            <summary>OtherContextMenus.ErrorCorrection.Correction8<br/><c>VSConstants.VSStd2KCmdID.ECMD_CORRECTION_8</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.OtherContextMenus_ErrorCorrection_Correction9">
            <summary>OtherContextMenus.ErrorCorrection.Correction9<br/><c>VSConstants.VSStd2KCmdID.ECMD_CORRECTION_9</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.OtherContextMenus_FindRegularExpressionBuilder_Captureandimplicitlynumberthesubexpressiondogorcat">
            <summary>OtherContextMenus.FindRegularExpressionBuilder.Captureandimplicitlynumberthesubexpressiondogorcat<br/><c>VSConstants.VSStd97CmdID.Or</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.OtherContextMenus_FindRegularExpressionBuilder_Capturesubexpressiondogorcatandnameitpet">
            <summary>OtherContextMenus.FindRegularExpressionBuilder.Capturesubexpressiondogorcatandnameitpet<br/><c>VSConstants.VSStd97CmdID.TagExp</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.OtherContextMenus_FindRegularExpressionBuilder_Matchanycharacterinthesetabc">
            <summary>OtherContextMenus.FindRegularExpressionBuilder.Matchanycharacterinthesetabc<br/><c>VSConstants.VSStd97CmdID.CharInSet</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.OtherContextMenus_FindRegularExpressionBuilder_MatchanycharacterNOTinthesetabc">
            <summary>OtherContextMenus.FindRegularExpressionBuilder.MatchanycharacterNOTinthesetabc<br/><c>VSConstants.VSStd97CmdID.CharNotInSet</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.OtherContextMenus_FindRegularExpressionBuilder_Matchanycharacteroneormoretimes">
            <summary>OtherContextMenus.FindRegularExpressionBuilder.Matchanycharacteroneormoretimes<br/><c>VSConstants.VSStd97CmdID.OneOrMore</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.OtherContextMenus_FindRegularExpressionBuilder_Matchanycharacterzeroormoretimes">
            <summary>OtherContextMenus.FindRegularExpressionBuilder.Matchanycharacterzeroormoretimes<br/><c>VSConstants.VSStd97CmdID.ZeroOrMore</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.OtherContextMenus_FindRegularExpressionBuilder_Matchanylinebreak">
            <summary>OtherContextMenus.FindRegularExpressionBuilder.Matchanylinebreak<br/><c>VSConstants.VSStd97CmdID.LineBreak</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.OtherContextMenus_FindRegularExpressionBuilder_Matchanynumericcharacter">
            <summary>OtherContextMenus.FindRegularExpressionBuilder.Matchanynumericcharacter<br/><c>VSConstants.VSStd97CmdID.Integer</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.OtherContextMenus_FindRegularExpressionBuilder_Matchanysinglecharacterexceptalinebreak">
            <summary>OtherContextMenus.FindRegularExpressionBuilder.Matchanysinglecharacterexceptalinebreak<br/><c>VSConstants.VSStd97CmdID.SingleChar</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.OtherContextMenus_FindRegularExpressionBuilder_Matchanywhitespacecharacter">
            <summary>OtherContextMenus.FindRegularExpressionBuilder.Matchanywhitespacecharacter<br/><c>VSConstants.VSStd97CmdID.SpaceOrTab</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.OtherContextMenus_FindRegularExpressionBuilder_Matchatbeginningofline">
            <summary>OtherContextMenus.FindRegularExpressionBuilder.Matchatbeginningofline<br/><c>VSConstants.VSStd97CmdID.BeginLine</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.OtherContextMenus_FindRegularExpressionBuilder_Matchatbeginningorendofword">
            <summary>OtherContextMenus.FindRegularExpressionBuilder.Matchatbeginningorendofword<br/><c>VSConstants.VSStd97CmdID.BeginWord</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.OtherContextMenus_FindRegularExpressionBuilder_Matchawordcharacteratendofline">
            <summary>OtherContextMenus.FindRegularExpressionBuilder.Matchawordcharacteratendofline<br/><c>VSConstants.VSStd97CmdID.EndLine</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.OtherContextMenus_FindRegularExpressionBuilder_RegularExpressionHelp">
            <summary>OtherContextMenus.FindRegularExpressionBuilder.RegularExpressionHelp<br/><c>VSConstants.VSStd97CmdID.RegExList</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.OtherContextMenus_FSIConsoleContext_CancelInteractiveEvaluation">
            <summary>OtherContextMenus.FSIConsoleContext.CancelInteractiveEvaluation<br/><c>VSConstants.VSStd11CmdID.InteractiveSessionInterrupt</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.OtherContextMenus_FSIConsoleContext_ResetInteractiveSession">
            <summary>OtherContextMenus.FSIConsoleContext.ResetInteractiveSession<br/><c>VSConstants.VSStd11CmdID.InteractiveSessionRestart</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.OtherContextMenus_FunctionContext_AddQuery">
            <summary>OtherContextMenus.FunctionContext.AddQuery<br/><c>VSConstants.VSStd2KCmdID.ECMD_ADD_QUERY</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.OtherContextMenus_HTMLContext_FormattingandValidation">
            <summary>OtherContextMenus.HTMLContext.FormattingandValidation<br/><c>VSConstants.VSStd2KCmdID.FORMATANDVALIDATION</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.OtherContextMenus_MenuDesigner_ViewCode">
            <summary>OtherContextMenus.MenuDesigner.ViewCode<br/><c>VSConstants.VSStd97CmdID.Code</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.OtherContextMenus_NoCommandsAvailable_NoCommandsAvailable">
            <summary>OtherContextMenus.NoCommandsAvailable.NoCommandsAvailable<br/><c>VSConstants.VSStd97CmdID.NoCmdsAvailable</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.OtherContextMenus_QueryDiagramTable_SelectAllColumns">
            <summary>OtherContextMenus.QueryDiagramTable.SelectAllColumns<br/><c>VSConstants.VSStd97CmdID.SelectAllFields</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.OtherContextMenus_RelationContext_EditRelation">
            <summary>OtherContextMenus.RelationContext.EditRelation<br/><c>VSConstants.VSStd2KCmdID.ECMD_EDITDATARELATION</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.OtherContextMenus_ResourceDialogEditors_InsertActiveXControl">
            <summary>OtherContextMenus.ResourceDialogEditors.InsertActiveXControl<br/><c>VSConstants.VSStd2KCmdID.INSERTACTIVEXCTL</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.OtherContextMenus_ResourceView_Export">
            <summary>OtherContextMenus.ResourceView.Export<br/><c>VSConstants.VSStd2KCmdID.EXPORT</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.OtherContextMenus_ResourceView_Insert">
            <summary>OtherContextMenus.ResourceView.Insert<br/><c>VSConstants.VSStd2KCmdID.INSERT</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.OtherContextMenus_ResourceView_InsertCopy">
            <summary>OtherContextMenus.ResourceView.InsertCopy<br/><c>VSConstants.VSStd2KCmdID.RESOURCENEWCOPY</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.OtherContextMenus_ResourceView_Open">
            <summary>OtherContextMenus.ResourceView.Open<br/><c>VSConstants.VSStd2KCmdID.RESOURCEOPEN</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.OtherContextMenus_ResourceView_OpenBinaryData">
            <summary>OtherContextMenus.ResourceView.OpenBinaryData<br/><c>VSConstants.VSStd2KCmdID.OPENBINARY</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.OtherContextMenus_ResultsList_GoToLocation">
            <summary>OtherContextMenus.ResultsList.GoToLocation<br/><c>VSConstants.VSStd97CmdID.GotoErrorTag</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.OtherContextMenus_SchemaExplorer_ViewCode">
            <summary>OtherContextMenus.SchemaExplorer.ViewCode<br/><c>VSConstants.VSStd2KCmdID.OpenInCodeView</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.OtherContextMenus_Toolbox_RenameItem">
            <summary>OtherContextMenus.Toolbox.RenameItem<br/><c>VSConstants.VSStd97CmdID.ToolboxRenameItem</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Project_AddClass">
            <summary>Project.AddClass<br/><c>VSConstants.VSStd97CmdID.AddClass</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Project_AddComponent">
            <summary>Project.AddComponent<br/><c>VSConstants.VSStd2KCmdID.ADDTBXCOMPONENT</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Project_AddConnectionPoint">
            <summary>Project.AddConnectionPoint<br/><c>VSConstants.VSStd97CmdID.AddConnectionPoint</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Project_AddContentPage">
            <summary>Project.AddContentPage<br/><c>VSConstants.VSStd2KCmdID.ECMD_ADDCONTENTPAGE</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Project_AddEvent">
            <summary>Project.AddEvent<br/><c>VSConstants.VSStd97CmdID.AddEvent</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Project_AddExistingItem">
            <summary>Project.AddExistingItem<br/><c>VSConstants.VSStd97CmdID.AddExistingItem</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Project_AddFormWindowsForms">
            <summary>Project.AddFormWindowsForms<br/><c>VSConstants.VSStd2KCmdID.ADDWFCFORM</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Project_AddFunction">
            <summary>Project.AddFunction<br/><c>VSConstants.VSStd97CmdID.AddFunction</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Project_AddHTMLPage">
            <summary>Project.AddHTMLPage<br/><c>VSConstants.VSStd2KCmdID.ADDHTMLPAGE</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Project_AddIndexer">
            <summary>Project.AddIndexer<br/><c>VSConstants.VSStd97CmdID.AddIndexer</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Project_AddInterface">
            <summary>Project.AddInterface<br/><c>VSConstants.VSStd97CmdID.AddInterface</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Project_AddMasterPage">
            <summary>Project.AddMasterPage<br/><c>VSConstants.VSStd2KCmdID.ECMD_ADDMASTERPAGE</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Project_AddMethod">
            <summary>Project.AddMethod<br/><c>VSConstants.VSStd97CmdID.AddMethod</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Project_AddModule">
            <summary>Project.AddModule<br/><c>VSConstants.VSStd2KCmdID.ADDMODULE</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Project_AddNestedClass">
            <summary>Project.AddNestedClass<br/><c>VSConstants.VSStd97CmdID.AddNestedClass</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Project_AddNewItem">
            <summary>Project.AddNewItem<br/><c>VSConstants.VSStd97CmdID.AddNewItem</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Project_AddNewSolutionFolder">
            <summary>Project.AddNewSolutionFolder<br/><c>VSConstants.VSStd2KCmdID.NewSolutionFolder</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Project_AddProjectOutputs">
            <summary>Project.AddProjectOutputs<br/><c>VSConstants.VSStd2KCmdID.ADDPROJECTOUTPUTS</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Project_AddProperty">
            <summary>Project.AddProperty<br/><c>VSConstants.VSStd97CmdID.AddProperty</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Project_AddReference">
            <summary>Project.AddReference<br/><c>VSConstants.VSStd2KCmdID.ADDREFERENCE</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Project_AddServiceReference">
            <summary>Project.AddServiceReference<br/><c>VSConstants.VSStd2KCmdID.ADDSERVICEREFERENCE</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Project_AddStyleSheet">
            <summary>Project.AddStyleSheet<br/><c>VSConstants.VSStd2KCmdID.ECMD_ADDSTYLESHEET</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Project_AddUserControlWindowsForms">
            <summary>Project.AddUserControlWindowsForms<br/><c>VSConstants.VSStd2KCmdID.ADDUSERCONTROL</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Project_AddVariable">
            <summary>Project.AddVariable<br/><c>VSConstants.VSStd97CmdID.AddVariable</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Project_AddWebForm">
            <summary>Project.AddWebForm<br/><c>VSConstants.VSStd2KCmdID.ADDWEBFORM</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Project_AddWebReference">
            <summary>Project.AddWebReference<br/><c>VSConstants.VSStd2KCmdID.ADDWEBREFERENCE</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Project_AddWebService">
            <summary>Project.AddWebService<br/><c>VSConstants.VSStd2KCmdID.ADDWEBSERVICE</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Project_AddWebUserControl">
            <summary>Project.AddWebUserControl<br/><c>VSConstants.VSStd2KCmdID.ADDWEBUSERCONTROL</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Project_ConfigureServiceReference">
            <summary>Project.ConfigureServiceReference<br/><c>VSConstants.VSStd2KCmdID.CONFIGURESERVICEREFERENCE</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Project_EditProjectFile">
            <summary>Project.EditProjectFile<br/><c>VSConstants.VSStd2KCmdID.EditProjectFile</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Project_ExcludeFromProject">
            <summary>Project.ExcludeFromProject<br/><c>VSConstants.VSStd2KCmdID.EXCLUDEFROMPROJECT</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Project_HideFolder">
            <summary>Project.HideFolder<br/><c>VSConstants.VSStd2KCmdID.HideFolder</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Project_ImplementInterface">
            <summary>Project.ImplementInterface<br/><c>VSConstants.VSStd97CmdID.ImplementInterface</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Project_IncludeInProject">
            <summary>Project.IncludeInProject<br/><c>VSConstants.VSStd2KCmdID.INCLUDEINPROJECT</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Project_InstallMissingFeatures">
            <summary>Project.InstallMissingFeatures<br/><c>VSConstants.VSStd12CmdID.RetargetProjectInstallComponent</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Project_NestRelatedFiles">
            <summary>Project.NestRelatedFiles<br/><c>VSConstants.VSStd2KCmdID.NESTRELATEDFILES</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Project_NewFolder">
            <summary>Project.NewFolder<br/><c>VSConstants.VSStd97CmdID.NewFolder</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Project_Override">
            <summary>Project.Override<br/><c>VSConstants.VSStd97CmdID.Override</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Project_ProjectBuildOrder">
            <summary>Project.ProjectBuildOrder<br/><c>VSConstants.VSStd97CmdID.BuildOrder</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Project_ProjectDependencies">
            <summary>Project.ProjectDependencies<br/><c>VSConstants.VSStd97CmdID.ProjectDependencies</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Project_Properties">
            <summary>Project.Properties<br/><c>VSConstants.VSStd97CmdID.ProjectProperties</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Project_RecalculateLinks">
            <summary>Project.RecalculateLinks<br/><c>VSConstants.VSStd2KCmdID.RECALCULATELINKS</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Project_ReloadProject">
            <summary>Project.ReloadProject<br/><c>VSConstants.VSStd97CmdID.ReloadProject</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Project_RetargetProject">
            <summary>Project.RetargetProject<br/><c>VSConstants.VSStd12CmdID.RetargetProject</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Project_RunCustomTool">
            <summary>Project.RunCustomTool<br/><c>VSConstants.VSStd2KCmdID.RUNCUSTOMTOOL</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Project_SetAsStartPage">
            <summary>Project.SetAsStartPage<br/><c>VSConstants.VSStd2KCmdID.SETASSTARTPAGE</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Project_SetasStartupProject">
            <summary>Project.SetasStartupProject<br/><c>VSConstants.VSStd97CmdID.SetStartupProject</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Project_ShowAllFiles">
            <summary>Project.ShowAllFiles<br/><c>VSConstants.VSStd2KCmdID.SHOWALLFILES</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Project_StartOptions">
            <summary>Project.StartOptions<br/><c>VSConstants.VSStd2KCmdID.STARTOPTIONS</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Project_UnhideFolders">
            <summary>Project.UnhideFolders<br/><c>VSConstants.VSStd2KCmdID.UnhideFolders</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Project_UnloadProject">
            <summary>Project.UnloadProject<br/><c>VSConstants.VSStd97CmdID.UnloadProject</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Project_UpdateServiceReference">
            <summary>Project.UpdateServiceReference<br/><c>VSConstants.VSStd2KCmdID.UPDATESERVICEREFERENCE</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Project_UpdateWebReference">
            <summary>Project.UpdateWebReference<br/><c>VSConstants.VSStd2KCmdID.UPDATEWEBREFERENCE</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Project_WebPermissions">
            <summary>Project.WebPermissions<br/><c>VSConstants.VSStd2KCmdID.WEBPERMISSIONS</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.ProjectandSolutionContextMenus_CrossProjectMultiItem_Detach">
            <summary>ProjectandSolutionContextMenus.CrossProjectMultiItem.Detach<br/><c>VSConstants.VSStd2KCmdID.DETACHLOCALDATAFILECTX</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.ProjectandSolutionContextMenus_CrossProjectMultiItem_RefreshFolder">
            <summary>ProjectandSolutionContextMenus.CrossProjectMultiItem.RefreshFolder<br/><c>VSConstants.VSStd2KCmdID.ECMD_REFRESHFOLDER</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.ProjectandSolutionContextMenus_Folder_AddServiceReference">
            <summary>ProjectandSolutionContextMenus.Folder.AddServiceReference<br/><c>VSConstants.VSStd2KCmdID.ADDSERVICEREFERENCECTX</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.ProjectandSolutionContextMenus_Folder_AddWebReference">
            <summary>ProjectandSolutionContextMenus.Folder.AddWebReference<br/><c>VSConstants.VSStd2KCmdID.ADDWEBREFERENCECTX</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.ProjectandSolutionContextMenus_Project_Add_AddReference">
            <summary>ProjectandSolutionContextMenus.Project.Add.AddReference<br/><c>VSConstants.VSStd12CmdID.AddReferenceProjectOnly</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.ProjectandSolutionContextMenus_Project_Add_AddServiceReference">
            <summary>ProjectandSolutionContextMenus.Project.Add.AddServiceReference<br/><c>VSConstants.VSStd12CmdID.AddServiceReferenceProjectOnly</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.ProjectandSolutionContextMenus_Project_Add_AddWebReference">
            <summary>ProjectandSolutionContextMenus.Project.Add.AddWebReference<br/><c>VSConstants.VSStd12CmdID.AddWebReferenceProjectOnly</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.ProjectandSolutionContextMenus_Project_OpenFolderinFileExplorer">
            <summary>ProjectandSolutionContextMenus.Project.OpenFolderinFileExplorer<br/><c>VSConstants.VSStd2KCmdID.ExploreFolderInWindows</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.ProjectandSolutionContextMenus_Project_SolutionExplorer_NewScopedWindow">
            <summary>ProjectandSolutionContextMenus.Project.SolutionExplorer.NewScopedWindow<br/><c>VSConstants.VSStd11CmdID.SolutionExplorerNewScopedWindow</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.ProjectandSolutionContextMenus_Project_SolutionExplorer_ScopeToThis">
            <summary>ProjectandSolutionContextMenus.Project.SolutionExplorer.ScopeToThis<br/><c>VSConstants.VSStd11CmdID.SolutionExplorerScopeToThis</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.ProjectandSolutionContextMenus_References_AddReference">
            <summary>ProjectandSolutionContextMenus.References.AddReference<br/><c>VSConstants.VSStd2KCmdID.ADDREFERENCECTX</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.ProjectandSolutionContextMenus_Solution_ResolveErrors">
            <summary>ProjectandSolutionContextMenus.Solution.ResolveErrors<br/><c>VSConstants.VSStd11CmdID.ResolveFaultedProjects</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.ProjectandSolutionContextMenus_WebProjectFolder_AddReference">
            <summary>ProjectandSolutionContextMenus.WebProjectFolder.AddReference<br/><c>VSConstants.VSStd12CmdID.AddReferenceNonProjectOnly</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.ProjectandSolutionContextMenus_WebProjectFolder_AddServiceReference">
            <summary>ProjectandSolutionContextMenus.WebProjectFolder.AddServiceReference<br/><c>VSConstants.VSStd12CmdID.AddServiceReferenceNonProjectOnly</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.ProjectandSolutionContextMenus_WebProjectFolder_AddWebReference">
            <summary>ProjectandSolutionContextMenus.WebProjectFolder.AddWebReference<br/><c>VSConstants.VSStd12CmdID.AddWebReferenceNonProjectOnly</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.ProjectandSolutionContextMenus_WebProjectFolder_StartOptions">
            <summary>ProjectandSolutionContextMenus.WebProjectFolder.StartOptions<br/><c>VSConstants.VSStd2KCmdID.STARTOPTIONSCTX</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.QueryDesigner_AddGroupBy">
            <summary>QueryDesigner.AddGroupBy<br/><c>VSConstants.VSStd97CmdID.Totals</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.QueryDesigner_AddtoSelect">
            <summary>QueryDesigner.AddtoSelect<br/><c>VSConstants.VSStd97CmdID.AddToOutput</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.QueryDesigner_ClearResults">
            <summary>QueryDesigner.ClearResults<br/><c>VSConstants.VSStd97CmdID.ClearQuery</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.QueryDesigner_Criteria">
            <summary>QueryDesigner.Criteria<br/><c>VSConstants.VSStd97CmdID.ShowQBEPane</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.QueryDesigner_Delete">
            <summary>QueryDesigner.Delete<br/><c>VSConstants.VSStd97CmdID.DeleteQuery</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.QueryDesigner_Diagram">
            <summary>QueryDesigner.Diagram<br/><c>VSConstants.VSStd97CmdID.ShowGraphicalPane</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.QueryDesigner_ExecuteSQL">
            <summary>QueryDesigner.ExecuteSQL<br/><c>VSConstants.VSStd97CmdID.RunQuery</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.QueryDesigner_GotoRow">
            <summary>QueryDesigner.GotoRow<br/><c>VSConstants.VSStd97CmdID.RecordGoto</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.QueryDesigner_InsertResults">
            <summary>QueryDesigner.InsertResults<br/><c>VSConstants.VSStd97CmdID.AppendQuery</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.QueryDesigner_InsertValues">
            <summary>QueryDesigner.InsertValues<br/><c>VSConstants.VSStd97CmdID.InsertValuesQuery</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.QueryDesigner_MakeTable">
            <summary>QueryDesigner.MakeTable<br/><c>VSConstants.VSStd97CmdID.MakeTableQuery</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.QueryDesigner_RemoveFilter">
            <summary>QueryDesigner.RemoveFilter<br/><c>VSConstants.VSStd97CmdID.RemoveFilter</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.QueryDesigner_Results">
            <summary>QueryDesigner.Results<br/><c>VSConstants.VSStd97CmdID.ShowDataPane</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.QueryDesigner_Select">
            <summary>QueryDesigner.Select<br/><c>VSConstants.VSStd97CmdID.SelectQuery</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.QueryDesigner_SelectAllRowsFromTableA">
            <summary>QueryDesigner.SelectAllRowsFromTableA<br/><c>VSConstants.VSStd97CmdID.JoinLeftAll</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.QueryDesigner_SelectAllRowsFromTableB">
            <summary>QueryDesigner.SelectAllRowsFromTableB<br/><c>VSConstants.VSStd97CmdID.JoinRightAll</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.QueryDesigner_SortAscending">
            <summary>QueryDesigner.SortAscending<br/><c>VSConstants.VSStd97CmdID.SortAscending</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.QueryDesigner_SortDescending">
            <summary>QueryDesigner.SortDescending<br/><c>VSConstants.VSStd97CmdID.SortDescending</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.QueryDesigner_SQL">
            <summary>QueryDesigner.SQL<br/><c>VSConstants.VSStd97CmdID.ShowSQLPane</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.QueryDesigner_Update">
            <summary>QueryDesigner.Update<br/><c>VSConstants.VSStd97CmdID.UpdateQuery</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.QueryDesigner_VerifySQLSyntax">
            <summary>QueryDesigner.VerifySQLSyntax<br/><c>VSConstants.VSStd97CmdID.VerifySQL</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Refactor_EncapsulateField">
            <summary>Refactor.EncapsulateField<br/><c>VSConstants.VSStd2KCmdID.ENCAPSULATEFIELD</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Refactor_ExtractInterface">
            <summary>Refactor.ExtractInterface<br/><c>VSConstants.VSStd2KCmdID.EXTRACTINTERFACE</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Refactor_ExtractMethod">
            <summary>Refactor.ExtractMethod<br/><c>VSConstants.VSStd2KCmdID.EXTRACTMETHOD</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Refactor_RemoveParameters">
            <summary>Refactor.RemoveParameters<br/><c>VSConstants.VSStd2KCmdID.REMOVEPARAMETERS</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Refactor_Rename">
            <summary>Refactor.Rename<br/><c>VSConstants.VSStd2KCmdID.RENAME</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Refactor_ReorderParameters">
            <summary>Refactor.ReorderParameters<br/><c>VSConstants.VSStd2KCmdID.REORDERPARAMETERS</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.SolutionExplorer_Back">
            <summary>SolutionExplorer.Back<br/><c>VSConstants.VSStd11CmdID.SolutionExplorerBack</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.SolutionExplorer_CollapseAll">
            <summary>SolutionExplorer.CollapseAll<br/><c>VSConstants.VSStd11CmdID.SolutionExplorerCollapseAll</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.SolutionExplorer_Forward">
            <summary>SolutionExplorer.Forward<br/><c>VSConstants.VSStd11CmdID.SolutionExplorerForward</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.SolutionExplorer_Home">
            <summary>SolutionExplorer.Home<br/><c>VSConstants.VSStd11CmdID.SolutionExplorerHome</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.SolutionExplorer_OpenFilesFilter">
            <summary>SolutionExplorer.OpenFilesFilter<br/><c>VSConstants.VSStd11CmdID.SolutionExplorerFilterOpened</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.SolutionExplorer_PendingChangesFilter">
            <summary>SolutionExplorer.PendingChangesFilter<br/><c>VSConstants.VSStd11CmdID.SolutionExplorerFilterPendingChanges</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.SolutionExplorer_Refresh">
            <summary>SolutionExplorer.Refresh<br/><c>VSConstants.VSStd2KCmdID.SLNREFRESH</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.SolutionExplorer_SyncWithActiveDocument">
            <summary>SolutionExplorer.SyncWithActiveDocument<br/><c>VSConstants.VSStd11CmdID.SolutionExplorerSyncWithActiveDocument</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.SolutionExplorer_ToggleSingleClickPreview">
            <summary>SolutionExplorer.ToggleSingleClickPreview<br/><c>VSConstants.VSStd11CmdID.SolutionExplorerToggleSingleClickPreview</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.SwitchtoFindSymbol">
            <summary>SwitchtoFindSymbol<br/><c>VSConstants.VSStd2KCmdID.INSERTSPAN</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.TableDesigner_ColumnNames">
            <summary>TableDesigner.ColumnNames<br/><c>VSConstants.VSStd97CmdID.ViewFieldList</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.TableDesigner_GenerateChangeScript">
            <summary>TableDesigner.GenerateChangeScript<br/><c>VSConstants.VSStd97CmdID.GenerateChangeScript</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.TableDesigner_Keys">
            <summary>TableDesigner.Keys<br/><c>VSConstants.VSStd97CmdID.ViewKeys</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.TableDesigner_NameOnly">
            <summary>TableDesigner.NameOnly<br/><c>VSConstants.VSStd97CmdID.ViewCollapsed</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.TableDesigner_SetPrimaryKey">
            <summary>TableDesigner.SetPrimaryKey<br/><c>VSConstants.VSStd97CmdID.PrimaryKey</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.TableDesigner_Standard">
            <summary>TableDesigner.Standard<br/><c>VSConstants.VSStd97CmdID.ViewGrid</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.ToggleOutputWindowWordWrap">
            <summary>ToggleOutputWindowWordWrap<br/><c>VSConstants.VSStd2KCmdID.ToggleWordWrapOW</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Tools_AddRemoveToolboxItems">
            <summary>Tools.AddRemoveToolboxItems<br/><c>VSConstants.VSStd97CmdID.ToolboxAddItem</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Tools_AddTab">
            <summary>Tools.AddTab<br/><c>VSConstants.VSStd97CmdID.ToolboxAddTab</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Tools_Alias">
            <summary>Tools.Alias<br/><c>VSConstants.VSStd97CmdID.Alias</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Tools_BinaryDirectory">
            <summary>Tools.BinaryDirectory<br/><c>VSConstants.VSStd97CmdID.ExtToolsBinDir</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Tools_CheckAccessibility">
            <summary>Tools.CheckAccessibility<br/><c>VSConstants.VSStd2KCmdID.CHECK_ACCESSIBILITY</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Tools_CodeSnippetsManager">
            <summary>Tools.CodeSnippetsManager<br/><c>VSConstants.VSStd97CmdID.CodeExpansionWindow</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Tools_CurrentColumn">
            <summary>Tools.CurrentColumn<br/><c>VSConstants.VSStd97CmdID.ExtToolsCurCol</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Tools_CurrentLine">
            <summary>Tools.CurrentLine<br/><c>VSConstants.VSStd97CmdID.ExtToolsCurLine</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Tools_CurrentText">
            <summary>Tools.CurrentText<br/><c>VSConstants.VSStd97CmdID.ExtToolsCurText</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Tools_Customize">
            <summary>Tools.Customize<br/><c>VSConstants.VSStd97CmdID.CustomizeToolbars</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Tools_CustomizeKeyboard">
            <summary>Tools.CustomizeKeyboard<br/><c>VSConstants.VSStd97CmdID.CustomizeKeyboard</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Tools_DeleteTab">
            <summary>Tools.DeleteTab<br/><c>VSConstants.VSStd97CmdID.ToolboxDeleteTab</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Tools_EditCustomComponentSet">
            <summary>Tools.EditCustomComponentSet<br/><c>VSConstants.VSStd97CmdID.DefineSubset</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Tools_ExternalCommand1">
            <summary>Tools.ExternalCommand1<br/><c>VSConstants.VSStd97CmdID.Tool1</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Tools_ExternalCommand10">
            <summary>Tools.ExternalCommand10<br/><c>VSConstants.VSStd97CmdID.Tool10</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Tools_ExternalCommand11">
            <summary>Tools.ExternalCommand11<br/><c>VSConstants.VSStd97CmdID.Tool11</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Tools_ExternalCommand12">
            <summary>Tools.ExternalCommand12<br/><c>VSConstants.VSStd97CmdID.Tool12</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Tools_ExternalCommand13">
            <summary>Tools.ExternalCommand13<br/><c>VSConstants.VSStd97CmdID.Tool13</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Tools_ExternalCommand14">
            <summary>Tools.ExternalCommand14<br/><c>VSConstants.VSStd97CmdID.Tool14</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Tools_ExternalCommand15">
            <summary>Tools.ExternalCommand15<br/><c>VSConstants.VSStd97CmdID.Tool15</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Tools_ExternalCommand16">
            <summary>Tools.ExternalCommand16<br/><c>VSConstants.VSStd97CmdID.Tool16</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Tools_ExternalCommand17">
            <summary>Tools.ExternalCommand17<br/><c>VSConstants.VSStd97CmdID.Tool17</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Tools_ExternalCommand18">
            <summary>Tools.ExternalCommand18<br/><c>VSConstants.VSStd97CmdID.Tool18</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Tools_ExternalCommand19">
            <summary>Tools.ExternalCommand19<br/><c>VSConstants.VSStd97CmdID.Tool19</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Tools_ExternalCommand2">
            <summary>Tools.ExternalCommand2<br/><c>VSConstants.VSStd97CmdID.Tool2</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Tools_ExternalCommand20">
            <summary>Tools.ExternalCommand20<br/><c>VSConstants.VSStd97CmdID.Tool20</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Tools_ExternalCommand21">
            <summary>Tools.ExternalCommand21<br/><c>VSConstants.VSStd97CmdID.Tool21</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Tools_ExternalCommand22">
            <summary>Tools.ExternalCommand22<br/><c>VSConstants.VSStd97CmdID.Tool22</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Tools_ExternalCommand23">
            <summary>Tools.ExternalCommand23<br/><c>VSConstants.VSStd97CmdID.Tool23</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Tools_ExternalCommand24">
            <summary>Tools.ExternalCommand24<br/><c>VSConstants.VSStd97CmdID.Tool24</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Tools_ExternalCommand3">
            <summary>Tools.ExternalCommand3<br/><c>VSConstants.VSStd97CmdID.Tool3</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Tools_ExternalCommand4">
            <summary>Tools.ExternalCommand4<br/><c>VSConstants.VSStd97CmdID.Tool4</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Tools_ExternalCommand5">
            <summary>Tools.ExternalCommand5<br/><c>VSConstants.VSStd97CmdID.Tool5</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Tools_ExternalCommand6">
            <summary>Tools.ExternalCommand6<br/><c>VSConstants.VSStd97CmdID.Tool6</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Tools_ExternalCommand7">
            <summary>Tools.ExternalCommand7<br/><c>VSConstants.VSStd97CmdID.Tool7</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Tools_ExternalCommand8">
            <summary>Tools.ExternalCommand8<br/><c>VSConstants.VSStd97CmdID.Tool8</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Tools_ExternalCommand9">
            <summary>Tools.ExternalCommand9<br/><c>VSConstants.VSStd97CmdID.Tool9</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Tools_ExternalTools">
            <summary>Tools.ExternalTools<br/><c>VSConstants.VSStd97CmdID.ExternalCommands</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Tools_GenerateLocalResource">
            <summary>Tools.GenerateLocalResource<br/><c>VSConstants.VSStd2KCmdID.GENERATEPAGERESOURCE</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Tools_GoToCommandLine">
            <summary>Tools.GoToCommandLine<br/><c>VSConstants.VSStd97CmdID.GotoCommandLine</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Tools_ImmediateMode">
            <summary>Tools.ImmediateMode<br/><c>VSConstants.VSStd97CmdID.ImmediateMode</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Tools_ImportandExportSettings">
            <summary>Tools.ImportandExportSettings<br/><c>VSConstants.VSStd2KCmdID.ManageUserSettings</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Tools_ItemDirectory">
            <summary>Tools.ItemDirectory<br/><c>VSConstants.VSStd97CmdID.ExtToolsCurDir</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Tools_ItemExtension">
            <summary>Tools.ItemExtension<br/><c>VSConstants.VSStd97CmdID.ExtToolsCurExtension</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Tools_ItemFileName">
            <summary>Tools.ItemFileName<br/><c>VSConstants.VSStd97CmdID.ExtToolsCurFileName</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Tools_ItemPath">
            <summary>Tools.ItemPath<br/><c>VSConstants.VSStd97CmdID.ExtToolsCurPath</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Tools_ListView">
            <summary>Tools.ListView<br/><c>VSConstants.VSStd97CmdID.ToolboxListView</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Tools_LogCommandWindowOutput">
            <summary>Tools.LogCommandWindowOutput<br/><c>VSConstants.VSStd97CmdID.LogCommandWindow</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Tools_MoveDown">
            <summary>Tools.MoveDown<br/><c>VSConstants.VSStd97CmdID.ToolboxTabMoveDown</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Tools_MoveUp">
            <summary>Tools.MoveUp<br/><c>VSConstants.VSStd97CmdID.ToolboxTabMoveUp</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Tools_Open">
            <summary>Tools.Open<br/><c>VSConstants.VSStd97CmdID.OpenDropDownOpen</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Tools_OpenWith">
            <summary>Tools.OpenWith<br/><c>VSConstants.VSStd97CmdID.OpenDropDownOpenWith</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Tools_Options">
            <summary>Tools.Options<br/><c>VSConstants.VSStd97CmdID.ToolsOptions</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Tools_ProjectDirectory">
            <summary>Tools.ProjectDirectory<br/><c>VSConstants.VSStd97CmdID.ExtToolsProjDir</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Tools_ProjectFileName">
            <summary>Tools.ProjectFileName<br/><c>VSConstants.VSStd97CmdID.ExtToolsProjFileName</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Tools_RenameTab">
            <summary>Tools.RenameTab<br/><c>VSConstants.VSStd97CmdID.ToolboxRenameTab</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Tools_ResetToolbox">
            <summary>Tools.ResetToolbox<br/><c>VSConstants.VSStd97CmdID.ToolboxReset</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Tools_Shell">
            <summary>Tools.Shell<br/><c>VSConstants.VSStd97CmdID.Shell</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Tools_ShowAll">
            <summary>Tools.ShowAll<br/><c>VSConstants.VSStd97CmdID.ToolboxShowAllTabs</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Tools_SolutionDirectory">
            <summary>Tools.SolutionDirectory<br/><c>VSConstants.VSStd97CmdID.ExtToolsSlnDir</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Tools_SolutionFileName">
            <summary>Tools.SolutionFileName<br/><c>VSConstants.VSStd97CmdID.ExtToolsSlnFileName</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Tools_SortItemsAlphabetically">
            <summary>Tools.SortItemsAlphabetically<br/><c>VSConstants.VSStd97CmdID.ToolboxSortItems</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Tools_TargetDirectory">
            <summary>Tools.TargetDirectory<br/><c>VSConstants.VSStd97CmdID.ExtToolsTargetDir</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Tools_TargetExtension">
            <summary>Tools.TargetExtension<br/><c>VSConstants.VSStd97CmdID.ExtToolsTargetExtension</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Tools_TargetName">
            <summary>Tools.TargetName<br/><c>VSConstants.VSStd97CmdID.ExtToolsTargetFileName</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Tools_TargetPath">
            <summary>Tools.TargetPath<br/><c>VSConstants.VSStd97CmdID.ExtToolsTargetPath</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Tools_UnloadSourceBrowserFiles">
            <summary>Tools.UnloadSourceBrowserFiles<br/><c>VSConstants.VSStd97CmdID.BrowseUnload</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.View_AddRemoveColumns">
            <summary>View.AddRemoveColumns<br/><c>VSConstants.VSStd2KCmdID.ADDREMOVECOLUMNS</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.View_AllWindows">
            <summary>View.AllWindows<br/><c>VSConstants.VSStd11CmdID.BringFloatingWindowsToFront</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.View_Autosize">
            <summary>View.Autosize<br/><c>VSConstants.VSStd2KCmdID.ECMD_AUTO_SIZE</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.View_Backward">
            <summary>View.Backward<br/><c>VSConstants.VSStd2KCmdID.NavigateBack</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.View_BookmarkWindow">
            <summary>View.BookmarkWindow<br/><c>VSConstants.VSStd97CmdID.BookmarkWindow</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.View_BrokenLinksReport">
            <summary>View.BrokenLinksReport<br/><c>VSConstants.VSStd2KCmdID.BROKENLINKSREPORT</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.View_BrowseDefinition">
            <summary>View.BrowseDefinition<br/><c>VSConstants.VSStd97CmdID.BrowseDefn</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.View_BrowseNext">
            <summary>View.BrowseNext<br/><c>VSConstants.VSStd97CmdID.BrowseNext</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.View_BrowsePrevious">
            <summary>View.BrowsePrevious<br/><c>VSConstants.VSStd97CmdID.BrowsePrev</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.View_BuildStartupProjectsOnlyOnRun">
            <summary>View.BuildStartupProjectsOnlyOnRun<br/><c>VSConstants.VSStd2KCmdID.SetBuildStartupsOnlyOnRun</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.View_CallBrowserCallersGraph">
            <summary>View.CallBrowserCallersGraph<br/><c>VSConstants.VSStd2KCmdID.CallBrowserShowCallsToCmd</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.View_CallBrowserCallersGraphNewWindow">
            <summary>View.CallBrowserCallersGraphNewWindow<br/><c>VSConstants.VSStd2KCmdID.CallBrowserShowNewCallsToCmd</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.View_CallBrowserCallGraph">
            <summary>View.CallBrowserCallGraph<br/><c>VSConstants.VSStd2KCmdID.CallBrowserShowCallsFromCmd</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.View_CallBrowserCallGraphNewWindow">
            <summary>View.CallBrowserCallGraphNewWindow<br/><c>VSConstants.VSStd2KCmdID.CallBrowserShowNewCallsFromCmd</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.View_ChooseEncoding">
            <summary>View.ChooseEncoding<br/><c>VSConstants.VSStd2KCmdID.CodeDefViewChooseEncoding</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.View_ClassView">
            <summary>View.ClassView<br/><c>VSConstants.VSStd97CmdID.ClassView</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.View_ClassViewClearSearch">
            <summary>View.ClassViewClearSearch<br/><c>VSConstants.VSStd2KCmdID.CVClearSearch</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.View_ClassViewFilterToType">
            <summary>View.ClassViewFilterToType<br/><c>VSConstants.VSStd2KCmdID.CVFilterToType</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.View_ClassViewGoToSearchCombo">
            <summary>View.ClassViewGoToSearchCombo<br/><c>VSConstants.VSStd2KCmdID.CVGoToSearchCmd</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.View_ClassViewGroupMembersByType">
            <summary>View.ClassViewGroupMembersByType<br/><c>VSConstants.VSStd2KCmdID.CVGroupMembersType</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.View_ClassViewNewFolder">
            <summary>View.ClassViewNewFolder<br/><c>VSConstants.VSStd97CmdID.CVNewFolder</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.View_ClassViewSearch">
            <summary>View.ClassViewSearch<br/><c>VSConstants.VSStd2KCmdID.CVSearchCmd</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.View_ClassViewShowBaseTypes">
            <summary>View.ClassViewShowBaseTypes<br/><c>VSConstants.VSStd2KCmdID.CVShowBaseTypes</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.View_ClassViewShowDerivedTypes">
            <summary>View.ClassViewShowDerivedTypes<br/><c>VSConstants.VSStd2KCmdID.CVShowDerivedTypes</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.View_ClassViewShowInheritedMembers">
            <summary>View.ClassViewShowInheritedMembers<br/><c>VSConstants.VSStd2KCmdID.CVShowInheritedMembers</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.View_ClassViewShowOtherMembers">
            <summary>View.ClassViewShowOtherMembers<br/><c>VSConstants.VSStd2KCmdID.CVViewOtherMembers</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.View_ClassViewShowPrivateMembers">
            <summary>View.ClassViewShowPrivateMembers<br/><c>VSConstants.VSStd2KCmdID.CVViewMembersAsImplementor</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.View_ClassViewShowProjectReferences">
            <summary>View.ClassViewShowProjectReferences<br/><c>VSConstants.VSStd2KCmdID.CVShowProjectReferences</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.View_ClassViewShowProtectedMembers">
            <summary>View.ClassViewShowProtectedMembers<br/><c>VSConstants.VSStd2KCmdID.CVViewMembersAsSubclass</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.View_ClassViewShowPublicMembers">
            <summary>View.ClassViewShowPublicMembers<br/><c>VSConstants.VSStd2KCmdID.CVViewMembersAsUser</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.View_ClassViewSortByBestMatch">
            <summary>View.ClassViewSortByBestMatch<br/><c>VSConstants.VSStd2KCmdID.CVSortByBestMatch</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.View_CodeDefinitionWindow">
            <summary>View.CodeDefinitionWindow<br/><c>VSConstants.VSStd2KCmdID.CodeDefView</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.View_CommandWindow">
            <summary>View.CommandWindow<br/><c>VSConstants.VSStd97CmdID.CommandWindow</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.View_Details">
            <summary>View.Details<br/><c>VSConstants.VSStd2KCmdID.VIEWDETAILS</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.View_DocumentOutline">
            <summary>View.DocumentOutline<br/><c>VSConstants.VSStd97CmdID.DocOutlineWindow</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.View_EditDefinition">
            <summary>View.EditDefinition<br/><c>VSConstants.VSStd2KCmdID.CodeDefViewEditDefinition</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.View_EditLabel">
            <summary>View.EditLabel<br/><c>VSConstants.VSStd97CmdID.EditLabel</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.View_EditMaster">
            <summary>View.EditMaster<br/><c>VSConstants.VSStd2KCmdID.EDITMASTER</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.View_ErrorList">
            <summary>View.ErrorList<br/><c>VSConstants.VSStd97CmdID.TaskListSortByCategory</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.View_ExpandAll">
            <summary>View.ExpandAll<br/><c>VSConstants.VSStd97CmdID.ExpandAll</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.View_FindResults1">
            <summary>View.FindResults1<br/><c>VSConstants.VSStd97CmdID.FindResultWindow1</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.View_FindResults2">
            <summary>View.FindResults2<br/><c>VSConstants.VSStd97CmdID.FindResultWindow2</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.View_FindSymbolResults">
            <summary>View.FindSymbolResults<br/><c>VSConstants.VSStd97CmdID.ObjectSearchResults</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.View_Forward">
            <summary>View.Forward<br/><c>VSConstants.VSStd2KCmdID.NavigateForward</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.View_ForwardBrowseContext">
            <summary>View.ForwardBrowseContext<br/><c>VSConstants.VSStd97CmdID.ForwardBrowseContext</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.View_FullScreen">
            <summary>View.FullScreen<br/><c>VSConstants.VSStd97CmdID.FullScreen</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.View_NavigateBackward">
            <summary>View.NavigateBackward<br/><c>VSConstants.VSStd97CmdID.ShellNavBackward</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.View_NavigateForward">
            <summary>View.NavigateForward<br/><c>VSConstants.VSStd97CmdID.ShellNavForward</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.View_NextView">
            <summary>View.NextView<br/><c>VSConstants.VSStd97CmdID.ViewNextTab</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.View_Notifications">
            <summary>View.Notifications<br/><c>VSConstants.VSStd12CmdID.ShowUserNotificationsToolWindow</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.View_ObjectBrowser">
            <summary>View.ObjectBrowser<br/><c>VSConstants.VSStd97CmdID.ObjectBrowser</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.View_ObjectBrowserAddReference">
            <summary>View.ObjectBrowserAddReference<br/><c>VSConstants.VSStd2KCmdID.OBAddReference</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.View_ObjectBrowserClearSearch">
            <summary>View.ObjectBrowserClearSearch<br/><c>VSConstants.VSStd2KCmdID.OBClearSearch</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.View_ObjectBrowserFilterToType">
            <summary>View.ObjectBrowserFilterToType<br/><c>VSConstants.VSStd2KCmdID.OBFilterToType</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.View_ObjectBrowserGoToSearchCombo">
            <summary>View.ObjectBrowserGoToSearchCombo<br/><c>VSConstants.VSStd2KCmdID.OBGoToSearchCmd</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.View_ObjectBrowserGroupMembersByType">
            <summary>View.ObjectBrowserGroupMembersByType<br/><c>VSConstants.VSStd2KCmdID.OBGroupMembersType</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.View_ObjectBrowserSearch">
            <summary>View.ObjectBrowserSearch<br/><c>VSConstants.VSStd2KCmdID.OBSearchCmd</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.View_ObjectBrowserShowBaseTypes">
            <summary>View.ObjectBrowserShowBaseTypes<br/><c>VSConstants.VSStd2KCmdID.OBShowBaseTypes</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.View_ObjectBrowserShowDerivedTypes">
            <summary>View.ObjectBrowserShowDerivedTypes<br/><c>VSConstants.VSStd2KCmdID.OBShowDerivedTypes</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.View_ObjectBrowserShowExtensionMembers">
            <summary>View.ObjectBrowserShowExtensionMembers<br/><c>VSConstants.VSStd2KCmdID.OBShowExtensionMembers</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.View_ObjectBrowserShowInheritedMembers">
            <summary>View.ObjectBrowserShowInheritedMembers<br/><c>VSConstants.VSStd2KCmdID.OBShowInheritedMembers</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.View_ObjectBrowserShowOtherMembers">
            <summary>View.ObjectBrowserShowOtherMembers<br/><c>VSConstants.VSStd2KCmdID.OBViewOtherMembers</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.View_ObjectBrowserShowPrivateMembers">
            <summary>View.ObjectBrowserShowPrivateMembers<br/><c>VSConstants.VSStd2KCmdID.OBViewMembersAsImplementor</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.View_ObjectBrowserShowProtectedMembers">
            <summary>View.ObjectBrowserShowProtectedMembers<br/><c>VSConstants.VSStd2KCmdID.OBViewMembersAsSubclass</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.View_ObjectBrowserShowPublicMembers">
            <summary>View.ObjectBrowserShowPublicMembers<br/><c>VSConstants.VSStd2KCmdID.OBViewMembersAsUser</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.View_ObjectBrowserSortByBestMatch">
            <summary>View.ObjectBrowserSortByBestMatch<br/><c>VSConstants.VSStd2KCmdID.OBSortByBestMatch</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.View_ObjectBrowserViewObjectsbyNamespace">
            <summary>View.ObjectBrowserViewObjectsbyNamespace<br/><c>VSConstants.VSStd2KCmdID.OBNamespacesView</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.View_ObjectBrowserViewObjectsbyPhysicalContainer">
            <summary>View.ObjectBrowserViewObjectsbyPhysicalContainer<br/><c>VSConstants.VSStd2KCmdID.OBContainersView</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.View_ObjectBrowsingScope">
            <summary>View.ObjectBrowsingScope<br/><c>VSConstants.VSStd97CmdID.SubsetCombo</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.View_Open">
            <summary>View.Open<br/><c>VSConstants.VSStd97CmdID.Open</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.View_OpenWith">
            <summary>View.OpenWith<br/><c>VSConstants.VSStd97CmdID.OpenWith</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.View_Output">
            <summary>View.Output<br/><c>VSConstants.VSStd97CmdID.OutputWindow</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.View_PopBrowseContext">
            <summary>View.PopBrowseContext<br/><c>VSConstants.VSStd97CmdID.PopBrowseContext</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.View_PropertiesWindow">
            <summary>View.PropertiesWindow<br/><c>VSConstants.VSStd97CmdID.PropertiesWindow</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.View_PropertyPages">
            <summary>View.PropertyPages<br/><c>VSConstants.VSStd97CmdID.PropertyPages</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.View_QuickActions">
            <summary>View.QuickActions<br/><c>VSConstants.VSStd14CmdID.ShowQuickFixes</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.View_QuickActionsForPosition">
            <summary>View.QuickActionsForPosition<br/><c>VSConstants.VSStd14CmdID.ShowQuickFixesForPosition2</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.View_Refresh">
            <summary>View.Refresh<br/><c>VSConstants.VSStd97CmdID.Refresh</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.View_ResourceView">
            <summary>View.ResourceView<br/><c>VSConstants.VSStd97CmdID.ResourceView</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.View_ServerExplorer">
            <summary>View.ServerExplorer<br/><c>VSConstants.VSStd2KCmdID.SEServerExplorer</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.View_ShowReferences">
            <summary>View.ShowReferences<br/><c>VSConstants.VSStd97CmdID.ShowRefs</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.View_SolutionExplorer">
            <summary>View.SolutionExplorer<br/><c>VSConstants.VSStd97CmdID.ProjectExplorer</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.View_Sort">
            <summary>View.Sort<br/><c>VSConstants.VSStd2KCmdID.SORTCOLUMNS</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.View_Stop">
            <summary>View.Stop<br/><c>VSConstants.VSStd2KCmdID.STOP</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.View_SynchronizeClassView">
            <summary>View.SynchronizeClassView<br/><c>VSConstants.VSStd97CmdID.SyncClassView</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.View_TabOrder">
            <summary>View.TabOrder<br/><c>VSConstants.VSStd97CmdID.TabOrder</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.View_TaskList">
            <summary>View.TaskList<br/><c>VSConstants.VSStd97CmdID.TaskListWindow</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.View_ToggleDesigner">
            <summary>View.ToggleDesigner<br/><c>VSConstants.VSStd97CmdID.TaskListPreviousView</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.View_Toolbox">
            <summary>View.Toolbox<br/><c>VSConstants.VSStd97CmdID.Toolbox</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.View_ViewCode">
            <summary>View.ViewCode<br/><c>VSConstants.VSStd97CmdID.ViewCode</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.View_ViewComponentDesigner">
            <summary>View.ViewComponentDesigner<br/><c>VSConstants.VSStd2KCmdID.VIEWCOMPONENTDESIGNER</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.View_ViewDesigner">
            <summary>View.ViewDesigner<br/><c>VSConstants.VSStd97CmdID.ViewForm</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.View_ViewMarkup">
            <summary>View.ViewMarkup<br/><c>VSConstants.VSStd2KCmdID.ECMD_VIEWMARKUP</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.View_Zoom">
            <summary>View.Zoom<br/><c>VSConstants.VSStd97CmdID.ZoomDialog</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.View_ZoomIn">
            <summary>View.ZoomIn<br/><c>VSConstants.VSStd2010CmdID.ZoomIn</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.View_ZoomOut">
            <summary>View.ZoomOut<br/><c>VSConstants.VSStd2010CmdID.ZoomOut</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Warnings">
            <summary>Warnings<br/><c>VSConstants.VSStd2KCmdID.ErrorListShowWarnings</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Window_ActivateDocumentWindow">
            <summary>Window.ActivateDocumentWindow<br/><c>VSConstants.VSStd97CmdID.PaneActivateDocWindow</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Window_ActivateQuickLaunch">
            <summary>Window.ActivateQuickLaunch<br/><c>VSConstants.VSStd11CmdID.GlobalSearch</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Window_ActivateQuickLaunchPreviousCategory">
            <summary>Window.ActivateQuickLaunchPreviousCategory<br/><c>VSConstants.VSStd11CmdID.GlobalSearchBack</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Window_ActivateSolutionExplorerSearch">
            <summary>Window.ActivateSolutionExplorerSearch<br/><c>VSConstants.VSStd11CmdID.SolutionExplorerSearch</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Window_ActivateWindowSearch">
            <summary>Window.ActivateWindowSearch<br/><c>VSConstants.VSStd11CmdID.WindowSearch</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Window_AddTabtoSelection">
            <summary>Window.AddTabtoSelection<br/><c>VSConstants.VSStd11CmdID.MultiSelect</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Window_ApplyWindowLayout1">
            <summary>Window.ApplyWindowLayout1<br/><c>VSConstants.VSStd14CmdID.WindowLayoutListFirst</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Window_ApplyWindowLayout10">
            <summary>Window.ApplyWindowLayout10<br/><c>VSConstants.VSStd14CmdID.WindowLayoutList9</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Window_ApplyWindowLayout2">
            <summary>Window.ApplyWindowLayout2<br/><c>VSConstants.VSStd14CmdID.WindowLayoutList1</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Window_ApplyWindowLayout3">
            <summary>Window.ApplyWindowLayout3<br/><c>VSConstants.VSStd14CmdID.WindowLayoutList2</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Window_ApplyWindowLayout4">
            <summary>Window.ApplyWindowLayout4<br/><c>VSConstants.VSStd14CmdID.WindowLayoutList3</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Window_ApplyWindowLayout5">
            <summary>Window.ApplyWindowLayout5<br/><c>VSConstants.VSStd14CmdID.WindowLayoutList4</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Window_ApplyWindowLayout6">
            <summary>Window.ApplyWindowLayout6<br/><c>VSConstants.VSStd14CmdID.WindowLayoutList5</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Window_ApplyWindowLayout7">
            <summary>Window.ApplyWindowLayout7<br/><c>VSConstants.VSStd14CmdID.WindowLayoutList6</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Window_ApplyWindowLayout8">
            <summary>Window.ApplyWindowLayout8<br/><c>VSConstants.VSStd14CmdID.WindowLayoutList7</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Window_ApplyWindowLayout9">
            <summary>Window.ApplyWindowLayout9<br/><c>VSConstants.VSStd14CmdID.WindowLayoutList8</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Window_AutoHide">
            <summary>Window.AutoHide<br/><c>VSConstants.VSStd97CmdID.AutoHideWindow</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Window_AutoHideAll">
            <summary>Window.AutoHideAll<br/><c>VSConstants.VSStd97CmdID.AutoHideAllWindows</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Window_Cascade">
            <summary>Window.Cascade<br/><c>VSConstants.VSStd97CmdID.Cascade</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Window_Close">
            <summary>Window.Close<br/><c>VSConstants.VSStd97CmdID.HideActivePane</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Window_CloseAllButPinned">
            <summary>Window.CloseAllButPinned<br/><c>VSConstants.VSStd11CmdID.CloseAllButPinned</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Window_CloseAllDocuments">
            <summary>Window.CloseAllDocuments<br/><c>VSConstants.VSStd97CmdID.CloseAllDocuments</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Window_CloseDocumentWindow">
            <summary>Window.CloseDocumentWindow<br/><c>VSConstants.VSStd97CmdID.CloseDocument</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Window_CloseToolWindow">
            <summary>Window.CloseToolWindow<br/><c>VSConstants.VSStd97CmdID.PaneCloseToolWindow</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Window_Dock">
            <summary>Window.Dock<br/><c>VSConstants.VSStd97CmdID.DockingView</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Window_DockasTabbedDocument">
            <summary>Window.DockasTabbedDocument<br/><c>VSConstants.VSStd97CmdID.DockingViewMDI</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Window_Float">
            <summary>Window.Float<br/><c>VSConstants.VSStd97CmdID.DockingViewFloater</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Window_FloatAll">
            <summary>Window.FloatAll<br/><c>VSConstants.VSStd11CmdID.FloatAll</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Window_KeepTabOpen">
            <summary>Window.KeepTabOpen<br/><c>VSConstants.VSStd11CmdID.PromoteTab</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Window_ManageWindowLayouts">
            <summary>Window.ManageWindowLayouts<br/><c>VSConstants.VSStd14CmdID.ManageWindowLayouts</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Window_MoveAllToNextTabGroup">
            <summary>Window.MoveAllToNextTabGroup<br/><c>VSConstants.VSStd11CmdID.MoveAllToNext</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Window_MoveAllToPreviousTabGroup">
            <summary>Window.MoveAllToPreviousTabGroup<br/><c>VSConstants.VSStd11CmdID.MoveAllToPrevious</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Window_MoveToMainDocumentGroup">
            <summary>Window.MoveToMainDocumentGroup<br/><c>VSConstants.VSStd11CmdID.MoveToMainTabWell</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Window_MovetoNavigationBar">
            <summary>Window.MovetoNavigationBar<br/><c>VSConstants.VSStd97CmdID.MoveToDropdownBar</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Window_MovetoNextTabGroup">
            <summary>Window.MovetoNextTabGroup<br/><c>VSConstants.VSStd97CmdID.MoveToNextEZCntr</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Window_MovetoPreviousTabGroup">
            <summary>Window.MovetoPreviousTabGroup<br/><c>VSConstants.VSStd97CmdID.MoveToPreviousEZCntr</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Window_NewHorizontalTabGroup">
            <summary>Window.NewHorizontalTabGroup<br/><c>VSConstants.VSStd97CmdID.TileHorz</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Window_NewVerticalTabGroup">
            <summary>Window.NewVerticalTabGroup<br/><c>VSConstants.VSStd97CmdID.TileVert</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Window_NewWindow">
            <summary>Window.NewWindow<br/><c>VSConstants.VSStd97CmdID.NewWindow</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Window_NextDocumentWindow">
            <summary>Window.NextDocumentWindow<br/><c>VSConstants.VSStd97CmdID.NextDocument</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Window_NextDocumentWindowNav">
            <summary>Window.NextDocumentWindowNav<br/><c>VSConstants.VSStd97CmdID.NextDocumentNav</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Window_NextPane">
            <summary>Window.NextPane<br/><c>VSConstants.VSStd97CmdID.PaneNextPane</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Window_NextSplitPane">
            <summary>Window.NextSplitPane<br/><c>VSConstants.VSStd97CmdID.SplitNext</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Window_NextSubpane">
            <summary>Window.NextSubpane<br/><c>VSConstants.VSStd97CmdID.PaneNextSubPane</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Window_NextTab">
            <summary>Window.NextTab<br/><c>VSConstants.VSStd97CmdID.PaneNextTab</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Window_NextTabandAddtoSelection">
            <summary>Window.NextTabandAddtoSelection<br/><c>VSConstants.VSStd11CmdID.PaneNextTabAndMultiSelect</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Window_NextToolWindow">
            <summary>Window.NextToolWindow<br/><c>VSConstants.VSStd2KCmdID.NextToolWindow</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Window_PinTab">
            <summary>Window.PinTab<br/><c>VSConstants.VSStd11CmdID.PinTab</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Window_PreviousDocumentWindow">
            <summary>Window.PreviousDocumentWindow<br/><c>VSConstants.VSStd97CmdID.PrevDocument</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Window_PreviousDocumentWindowNav">
            <summary>Window.PreviousDocumentWindowNav<br/><c>VSConstants.VSStd97CmdID.PrevDocumentNav</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Window_PreviousPane">
            <summary>Window.PreviousPane<br/><c>VSConstants.VSStd97CmdID.PanePrevPane</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Window_PreviousSplitPane">
            <summary>Window.PreviousSplitPane<br/><c>VSConstants.VSStd97CmdID.SplitPrev</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Window_PreviousSubpane">
            <summary>Window.PreviousSubpane<br/><c>VSConstants.VSStd97CmdID.PanePrevSubPane</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Window_PreviousTab">
            <summary>Window.PreviousTab<br/><c>VSConstants.VSStd97CmdID.PanePrevTab</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Window_PreviousTabandAddtoSelection">
            <summary>Window.PreviousTabandAddtoSelection<br/><c>VSConstants.VSStd11CmdID.PanePrevTabAndMultiSelect</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Window_PreviousToolWindow">
            <summary>Window.PreviousToolWindow<br/><c>VSConstants.VSStd2KCmdID.PrevToolWindow</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Window_PreviousToolWindowNav">
            <summary>Window.PreviousToolWindowNav<br/><c>VSConstants.VSStd2KCmdID.PrevToolWindowNav</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Window_SaveWindowLayout">
            <summary>Window.SaveWindowLayout<br/><c>VSConstants.VSStd14CmdID.SaveWindowLayout</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Window_ShowDockMenu">
            <summary>Window.ShowDockMenu<br/><c>VSConstants.VSStd2010CmdID.WindowFrameDockMenu</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Window_ShowEzMDIFileList">
            <summary>Window.ShowEzMDIFileList<br/><c>VSConstants.VSStd2KCmdID.ShowEzMDIFileMenu</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Window_Split">
            <summary>Window.Split<br/><c>VSConstants.VSStd97CmdID.Split</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Window_Windows">
            <summary>Window.Windows<br/><c>VSConstants.VSStd97CmdID.MoreWindows</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Edit_GoToFile">
            <summary>Edit.GoToFile<br/><c>VSConstants.VSStd15CmdID.NavigateToFile</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Edit_GoToMember">
            <summary>Edit.GoToMember<br/><c>VSConstants.VSStd15CmdID.NavigateToMember</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Edit_GoToRecentFile">
            <summary>Edit.GoToRecentFile<br/><c>VSConstants.VSStd15CmdID.NavigateToRecentFile</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Edit_GoToSymbol">
            <summary>Edit.GoToSymbol<br/><c>VSConstants.VSStd15CmdID.NavigateToSymbol</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Edit_GoToType">
            <summary>Edit.GoToType<br/><c>VSConstants.VSStd15CmdID.NavigateToType</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.EditorContextMenus_CodeWindow_Annotation_MoveToNextAnnotation">
            <summary>EditorContextMenus.CodeWindow.Annotation.MoveToNextAnnotation<br/><c>VSConstants.VSStd15CmdID.MoveToNextAnnotation</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.EditorContextMenus_CodeWindow_Annotation_MoveToPreviousAnnotation">
            <summary>EditorContextMenus.CodeWindow.Annotation.MoveToPreviousAnnotation<br/><c>VSConstants.VSStd15CmdID.MoveToPreviousAnnotation</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.EditorContextMenus_CodeWindow_Annotation_ShowLineAnnotations">
            <summary>EditorContextMenus.CodeWindow.Annotation.ShowLineAnnotations<br/><c>VSConstants.VSStd15CmdID.ShowLineAnnotations</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.EditorContextMenus_CodeWindow_Annotation_ShowStructure">
            <summary>EditorContextMenus.CodeWindow.Annotation.ShowStructure<br/><c>VSConstants.VSStd15CmdID.ShowStructure</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Help_KeyboardAccessibility">
            <summary>Help.KeyboardAccessibility<br/><c>VSConstants.VSStd15CmdID.HelpAccessibility</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.KeepResults">
            <summary>KeepResults<br/><c>VSConstants.VSStd15CmdID.FindAllRefLockWindow</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.ListView">
            <summary>ListView<br/><c>VSConstants.VSStd15CmdID.FindAllRefFlatList</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Tools_GetToolsandFeatures">
            <summary>Tools.GetToolsandFeatures<br/><c>VSConstants.VSStd15CmdID.GetToolsAndFeatures</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.View_RestoreDocumentsOnSolutionLoad">
            <summary>View.RestoreDocumentsOnSolutionLoad<br/><c>VSConstants.VSStd15CmdID.EnableRestoreDocumentsOnSolutionLoad</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.View_SkipRestoreDocumentsOnSolutionLoad">
            <summary>View.SkipRestoreDocumentsOnSolutionLoad<br/><c>VSConstants.VSStd15CmdID.DisableRestoreDocumentsOnSolutionLoad</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Window_CloseAllButToolWindows">
            <summary>Window.CloseAllButToolWindows<br/><c>VSConstants.VSStd15CmdID.CloseAllButToolWindows</c></summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.KnownCommands.Window_ShowSidebarTabs">
            <summary>Window.ShowSidebarTabs<br/><c>VSConstants.VSStd15CmdID.ToggleAutoHideChannels</c></summary>
        </member>
        <member name="T:Community.VisualStudio.Toolkit.DebuggerEvents">
            <summary>
            Events related to the debugger in Visual Studio.
            </summary>
        </member>
        <member name="E:Community.VisualStudio.Toolkit.DebuggerEvents.EnterBreakMode">
            <summary>
            Fires when entering break mode.
            </summary>
        </member>
        <member name="E:Community.VisualStudio.Toolkit.DebuggerEvents.EnterRunMode">
            <summary>
            Fired when the debugger enters run mode.
            </summary>
        </member>
        <member name="E:Community.VisualStudio.Toolkit.DebuggerEvents.EnterDesignMode">
            <summary>
            Fired when leaving run mode or debug mode, and when the debugger establishes design mode after debugging.
            </summary>
        </member>
        <member name="E:Community.VisualStudio.Toolkit.DebuggerEvents.EnterEditAndContinueMode">
            <summary>
            Fires when entering Edit &amp; Continue mode.
            </summary>
        </member>
        <member name="T:Community.VisualStudio.Toolkit.DocumentEvents">
            <summary>
            Events related to the editor documents.
            </summary>
        </member>
        <member name="E:Community.VisualStudio.Toolkit.DocumentEvents.Saved">
            <summary>
            Happens when a file is saved to disk.
            </summary>
        </member>
        <member name="E:Community.VisualStudio.Toolkit.DocumentEvents.Opened">
            <summary>
            Fires after the document was opened in the editor.
            </summary>
            <remarks>
            The event is called for documents in the document well but also
            for project files and may also be called for solution files.<br/>
            The document name may also be a special (generated name) in the form of
            RDT_PROJ_MK::{A2FE74E1-B743-11d0-AE1A-00A0C90FFFC3} that is used by 
            Visual Studio for the 'miscellaneous files' project 
            </remarks>
        </member>
        <member name="E:Community.VisualStudio.Toolkit.DocumentEvents.Closed">
            <summary>
            Fires after the document was closed.
            </summary>
            <remarks>
            The event is called for documents in the document well but also
            for project files and may also be called for solution files. <br/>
            The document name may also be a special (generated name) in the form of
            RDT_PROJ_MK::{A2FE74E1-B743-11d0-AE1A-00A0C90FFFC3} that is used by 
            Visual Studio for the 'miscellaneous files' project 
            </remarks>
        </member>
        <member name="E:Community.VisualStudio.Toolkit.DocumentEvents.BeforeDocumentWindowShow">
            <summary>
            Fires before the document takes focus.
            </summary>
        </member>
        <member name="E:Community.VisualStudio.Toolkit.DocumentEvents.AfterDocumentWindowHide">
            <summary>
            Fires after the document lost focus.
            </summary>
        </member>
        <member name="T:Community.VisualStudio.Toolkit.Documents">
            <summary>
            Contains helper methods for dealing with documents.
            </summary>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.Documents.GetActiveDocumentViewAsync">
            <summary>
            Gets the current text document.
            </summary>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.Documents.GetDocumentViewAsync(System.String)">
            <summary>
            Gets the document view from an open file.
            </summary>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.Documents.IsOpenAsync(System.String)">
            <summary>
             <see langword="true"/> if the document is open with the given logical view
            </summary>
            <param name="fileName">The absolute file path.</param>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.Documents.OpenAsync(System.String)">
            <summary>
            Opens a file in editor window.
            </summary>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.Documents.OpenViaProjectAsync(System.String)">
            <summary>
            Opens the file via the project instead of as a misc file.
            </summary>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.Documents.OpenInPreviewTabAsync(System.String)">
            <summary>
            Opens a file in the Preview Tab (provisional tab) if supported by the editor factory.
            </summary>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.Documents.GetActiveNativeTextViewAsync">
            <summary>Gets the native text view from the currently active document.</summary>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.Documents.GetNativeTextViewAsync(System.String)">
            <summary>Gets the native text view from the currently active document.</summary>
        </member>
        <member name="T:Community.VisualStudio.Toolkit.DocumentView">
            <summary>
            Represents an open text document view.
            </summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.DocumentView.WindowFrame">
            <summary>
            The window frame hosting the document.
            </summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.DocumentView.TextView">
            <summary>
            The text view loaded int he window frame.
            </summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.DocumentView.Document">
            <summary>
            The text document loaded in the view.
            </summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.DocumentView.TextBuffer">
            <summary>
            The text buffer loaded in the view.
            </summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.DocumentView.FilePath">
            <summary>
            The absolute file path of the document.
            </summary>
        </member>
        <member name="T:Community.VisualStudio.Toolkit.ErrorListItem">
            <summary>
            Represents items that go in the Error List
            </summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.ErrorListItem.ProjectName">
            <summary>
            Project name of the error item.
            </summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.ErrorListItem.FileName">
            <summary>
            File name of the error item.
            </summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.ErrorListItem.Line">
            <summary>
            0-based line of code on the error item.
            </summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.ErrorListItem.Column">
            <summary>
            0-based column of the error item
            </summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.ErrorListItem.Message">
            <summary>
            Error message.
            </summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.ErrorListItem.ErrorCode">
            <summary>
            Error code for the error item.
            </summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.ErrorListItem.ErrorCodeToolTip">
            <summary>
            Error code tool tip.
            </summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.ErrorListItem.ErrorCategory">
            <summary>
            Error category.
            </summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.ErrorListItem.Severity">
            <summary>
            Severity of the error item.
            </summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.ErrorListItem.HelpLink">
            <summary>
            Error help link.
            </summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.ErrorListItem.BuildTool">
            <summary>
            Column used to display the build tool that generated the error (e.g. "FxCop").
            </summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.ErrorListItem.Icon">
            <summary>
            The image icon moniker to use for the error list item.
            </summary>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.ErrorListItem.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.ErrorListItem.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="T:Community.VisualStudio.Toolkit.SinkManager">
            <summary>
            ITableDataSink wrapper which manages and notifies of error snapshots
            </summary>
        </member>
        <member name="F:Community.VisualStudio.Toolkit.SinkManager._sink">
            <summary>
            Underlying sink
            </summary>
        </member>
        <member name="F:Community.VisualStudio.Toolkit.SinkManager._onDispose">
            <summary>
            Dispose action
            </summary>
        </member>
        <member name="F:Community.VisualStudio.Toolkit.SinkManager._snapshots">
            <summary>
            Snapshot collection
            </summary>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.SinkManager.#ctor(Microsoft.VisualStudio.Shell.TableManager.ITableDataSink,System.Action{Community.VisualStudio.Toolkit.SinkManager})">
            <summary>
            Constructor
            </summary>
            <param name="sink">Sink to be wrapped</param>
            <param name="onDispose">Dispose action to be done on token disposal</param>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.SinkManager.UpdateSink(System.Collections.Generic.IEnumerable{Community.VisualStudio.Toolkit.TableEntriesSnapshot})">
            <summary>
            Notifies the underlying sink of the new errors
            </summary>
            <param name="snapshots"></param>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.SinkManager.Clear">
            <summary>
            Removes all registered errors
            </summary>
        </member>
        <member name="T:Community.VisualStudio.Toolkit.TableDataSource">
            <summary>
            A data source for the Error List.
            </summary>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.TableDataSource.#ctor(System.String)">
            <summary>
            Creates a new instance
            </summary>
            <param name="name">A unique string. It's often the name of the extension itself.</param>
        </member>
        <member name="F:Community.VisualStudio.Toolkit.TableDataSource._managers">
            <summary>
            Data sink subscriptions
            </summary>
        </member>
        <member name="F:Community.VisualStudio.Toolkit.TableDataSource._snapshots">
            <summary>
            Error list snapshots
            </summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.TableDataSource.Columns">
            <summary>
            'Error list' columns/components exposed by items managed by this data source
            </summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.TableDataSource.SourceTypeIdentifier">
            <inheritdoc/>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.TableDataSource.Identifier">
            <inheritdoc/>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.TableDataSource.DisplayName">
            <inheritdoc/>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.TableDataSource.Subscribe(Microsoft.VisualStudio.Shell.TableManager.ITableDataSink)">
            <inheritdoc/>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.TableDataSource.Initialize">
            <summary>
            Initializes the table manager.
            </summary>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.TableDataSource.AddSinkManager(Community.VisualStudio.Toolkit.SinkManager)">
            <summary>
            Registers a sink subscription
            </summary>
            <param name="manager">Subscription to register</param>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.TableDataSource.RemoveSinkManager(Community.VisualStudio.Toolkit.SinkManager)">
            <summary>
            Unregisters a previously registered sink subscription
            </summary>
            <param name="manager">Subscription to unregister</param>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.TableDataSource.UpdateAllSinks">
            <summary>
            Notifies all subscribers of an update in error (listings)
            </summary>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.TableDataSource.AddErrors(System.Collections.Generic.IEnumerable{Community.VisualStudio.Toolkit.ErrorListItem})">
            <summary>
            Adds errors to the applicable snapshots.
            </summary>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.TableDataSource.CleanAllErrors">
            <summary>
            Clears all previously registered issues/errors
            </summary>
        </member>
        <member name="T:Community.VisualStudio.Toolkit.AsyncPackageExtensions">
            <summary>
            Extensions for an <see cref="T:Microsoft.VisualStudio.Shell.AsyncPackage"/>
            </summary>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.AsyncPackageExtensions.RegisterCommandsAsync(Microsoft.VisualStudio.Shell.AsyncPackage,System.Reflection.Assembly[])">
            <summary>
            Automatically calls the <see cref="M:Community.VisualStudio.Toolkit.BaseCommand`1.InitializeAsync(Microsoft.VisualStudio.Shell.AsyncPackage)"/> method for every command that has the <see cref="T:Community.VisualStudio.Toolkit.CommandAttribute"/> applied.
            </summary>
            <param name="package"></param>
            <param name="assemblies"></param>
            <returns>A collection of the command instances</returns>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.AsyncPackageExtensions.RegisterToolWindows(Microsoft.VisualStudio.Shell.AsyncPackage,System.Reflection.Assembly[])">
            <summary>
            Automatically calls the <see cref="M:Community.VisualStudio.Toolkit.BaseCommand`1.InitializeAsync(Microsoft.VisualStudio.Shell.AsyncPackage)"/> method for every command that has the <see cref="T:Community.VisualStudio.Toolkit.CommandAttribute"/> applied.
            </summary>
            <param name="package"></param>
            <param name="assemblies"></param>
            <returns></returns>
        </member>
        <member name="T:Community.VisualStudio.Toolkit.ContentTypes">
            <summary>A list of content types for known languages.</summary>
        </member>
        <member name="F:Community.VisualStudio.Toolkit.ContentTypes.Any">
            <summary>Applies to all languages.</summary>
        </member>
        <member name="F:Community.VisualStudio.Toolkit.ContentTypes.Text">
            <summary>The base content type of all text documents including 'code'.</summary>
        </member>
        <member name="F:Community.VisualStudio.Toolkit.ContentTypes.Code">
            <summary>The base content type of all coding text documents and languages.</summary>
        </member>
        <member name="T:Community.VisualStudio.Toolkit.OutputWindowPane">
            <summary>
            A pane in the Output window.
            </summary>
            <remarks>
            OutputWindowPane allows an extension to create a new Output window pane or get an existing one.
            A pane can be activated (shown), hidden and cleared. Text can be written to the pane via methods
            like <see cref="M:Community.VisualStudio.Toolkit.OutputWindowPane.WriteLineAsync(System.String)"/> or with a <see cref="T:System.IO.TextWriter"/> returned
            from <see cref="M:Community.VisualStudio.Toolkit.OutputWindowPane.CreateOutputPaneTextWriterAsync"/>.
            </remarks>
            <example>
            <code>
            Guid myPaneGuid;
            {
                OutputWindowPane pane = await VS.Windows.CreateOutputWindowPaneAsync("My Pane");
                myPaneGuid = pane.Guid;
                await pane.WriteLineAsync("My message");
            }
            
            // Elsewhere:
            {
                OutputWindowPane pane = await VS.Windows.GetOutputWindowPaneAsync(myPaneGuid);
                Debug.Assert(pane.Name == "My Pane");
                using (TextWriter writer = await pane.CreateOutputPaneTextWriterAsync())
                {
                    char[] buffer = GetSomeChars();
                    await writer.WriteLineAsync("This is a more efficient way to write lots of text.");
                    await writer.WriteAsync(buffer, 0, buffer.Length);
                    await writer.WriteLineAsync();
                }
            }
            </code>
            </example>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.OutputWindowPane.Guid">
            <summary>
            Uniquely identifies the Output window pane.
            After creating a pane, you can cache this GUID and later obtain the same pane from <see cref="M:Community.VisualStudio.Toolkit.OutputWindowPane.GetAsync(System.Guid)"/>.
            </summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.OutputWindowPane.Name">
            <summary>
            The name (title) of the Output window pane.
            </summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.OutputWindowPane.Pane">
            <summary>
            The underlying OutputWindow Pane object.
            </summary>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.OutputWindowPane.CreateAsync(System.String,System.Boolean)">
            <summary>
            Creates a new Output window pane with the given name (title).
            The new pane can be created at construction time or lazily upon first write.
            </summary>
            <param name="name">The name (title) of the new pane.</param>
            <param name="lazyCreate">Whether to lazily create the pane upon first write.</param>
            <returns>A new OutputWindowPane.</returns>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.OutputWindowPane.GetAsync(Community.VisualStudio.Toolkit.Windows.VSOutputWindowPane)">
            <summary>
            Gets an existing Visual Studio Output window pane (General, Build, Debug).
            If the General pane does not already exist then it will be created, but that is not
            the case for Build or Debug, in which case the method returns null.
            </summary>
            <param name="pane">The Visual Studio pane to get.</param>
            <returns>A new OutputWindowPane or null.</returns>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.OutputWindowPane.GetAsync(System.Guid)">
            <summary>
            Gets an existing Output window pane.
            Returns null if a pane with the specified GUID does not exist.
            </summary>
            <param name="guid">The pane's unique identifier.</param>
            <returns>A new OutputWindowPane or null.</returns>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.OutputWindowPane.ActivateAsync">
            <summary>
            Shows and activates the Output window pane.
            </summary>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.OutputWindowPane.HideAsync">
            <summary>
            Hides the Output window pane.
            </summary>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.OutputWindowPane.ClearAsync">
            <summary>
            Clears the Output window pane.
            </summary>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.OutputWindowPane.WriteLine">
            <summary>
            Writes a new line to the Output window pane.
            </summary>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.OutputWindowPane.WriteLine(System.String)">
            <summary>
            Writes the given text followed by a new line to the Output window pane.
            </summary>
            <param name="value">The text value to write.</param>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.OutputWindowPane.WriteLineAsync">
            <summary>
            Writes a new line to the Output window pane.
            </summary>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.OutputWindowPane.WriteLineAsync(System.String)">
            <summary>
            Writes the given text followed by a new line to the Output window pane.
            </summary>
            <param name="value">The text value to write. May be an empty string, in which case a newline is written.</param>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.OutputWindowPane.CreateOutputPaneTextWriterAsync">
            <summary>
            Returns a new <see cref="T:System.IO.TextWriter"/> that can be used to write text to the Output window pane.
            For newer versions of Visual Studio this provides a more efficient way to write lots
            of text to the pane.
            </summary>
        </member>
        <member name="T:Community.VisualStudio.Toolkit.OutputWindowTextWriterVS14">
            <summary>
            A <see cref="T:System.IO.TextWriter"/> that writes to an Output window pane.
            This is suitable for use in Visual Studio 2015 and 2017 where OutputWindowTextWriter is not available.
            Overrides the same methods on TextWriter that OutputWindowTextWriter does.
            </summary>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.OutputWindowTextWriterVS14.#ctor(Microsoft.VisualStudio.Shell.Interop.IVsOutputWindowPane)">
            <summary>
            Creates the text writer.
            </summary>
            <param name="pane">The Output window pane.</param>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.OutputWindowTextWriterVS14.Encoding">
            <summary>
            The character encoding in which the output is written.
            </summary>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.OutputWindowTextWriterVS14.Write(System.String)">
            <summary>
            Writes text to the Output window pane.
            </summary>
            <param name="value">The text to write.</param>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.OutputWindowTextWriterVS14.Write(System.Char[],System.Int32,System.Int32)">
            <summary>
            Writes an array of characters to the Output window pane.
            </summary>
            <param name="buffer">The character array.</param>
            <param name="index">Start index.</param>
            <param name="count">Number of characters,</param>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.OutputWindowTextWriterVS14.WriteAsync(System.String)">
            <summary>
            Writes text to the Output window pane.
            </summary>
            <param name="value">The text to write.</param>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.OutputWindowTextWriterVS14.WriteAsync(System.Char)">
            <summary>
            Writes a character to the Output window pane.
            </summary>
            <param name="value">The character to write.</param>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.OutputWindowTextWriterVS14.WriteAsync(System.Char[],System.Int32,System.Int32)">
            <summary>
            Writes an array of characters to the Output window pane.
            </summary>
            <param name="buffer">The character array.</param>
            <param name="index">Start index.</param>
            <param name="count">Number of characters,</param>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.OutputWindowTextWriterVS14.WriteLineAsync">
            <summary>
            Writes an empty new line to the Output window pane.
            </summary>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.OutputWindowTextWriterVS14.WriteLineAsync(System.String)">
            <summary>
            Writes text followed by a new line to the Output window pane.
            </summary>
            <param name="value">The text to write.</param>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.OutputWindowTextWriterVS14.WriteLineAsync(System.Char)">
            <summary>
            Writes a character followed by a new line to the Output window pane.
            </summary>
            <param name="value">The character to write.</param>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.OutputWindowTextWriterVS14.WriteLineAsync(System.Char[],System.Int32,System.Int32)">
            <summary>
            Writes an array of characters followed by a new line to the Output window pane.
            </summary>
            <param name="buffer">The character array.</param>
            <param name="index">Start index.</param>
            <param name="count">Number of characters,</param>
        </member>
        <member name="T:Community.VisualStudio.Toolkit.ProjectTypes">
            <summary>
            A list of known project type GUIDs.
            </summary>
        </member>
        <member name="F:Community.VisualStudio.Toolkit.ProjectTypes.ASPNET_CORE">
            <summary>The project type of Asp.net Core</summary>
        </member>
        <member name="F:Community.VisualStudio.Toolkit.ProjectTypes.ASPNET_MVC_1">
            <summary>The project type of Asp.net MVC v1</summary>
        </member>
        <member name="F:Community.VisualStudio.Toolkit.ProjectTypes.ASPNET_MVC_2">
            <summary>The project type of Asp.net MVC v2</summary>
        </member>
        <member name="F:Community.VisualStudio.Toolkit.ProjectTypes.ASPNET_MVC_3">
            <summary>The project type of Asp.net MVC v3</summary>
        </member>
        <member name="F:Community.VisualStudio.Toolkit.ProjectTypes.ASPNET_MVC_4">
            <summary>The project type of Asp.net MVC v4</summary>
        </member>
        <member name="F:Community.VisualStudio.Toolkit.ProjectTypes.ASPNET_MVC_5">
            <summary>The project type of Asp.net MVC v5</summary>
        </member>
        <member name="F:Community.VisualStudio.Toolkit.ProjectTypes.CSHARP">
            <summary>The project type of C#</summary>
        </member>
        <member name="F:Community.VisualStudio.Toolkit.ProjectTypes.C_PLUS_PLUS">
            <summary>The project type of C++</summary>
        </member>
        <member name="F:Community.VisualStudio.Toolkit.ProjectTypes.DATABASE">
            <summary>The project type of Database</summary>
        </member>
        <member name="F:Community.VisualStudio.Toolkit.ProjectTypes.DATABASE_OTHER">
            <summary>The project type of Database (Other)</summary>
        </member>
        <member name="F:Community.VisualStudio.Toolkit.ProjectTypes.DEPLOYMENT_CAB">
            <summary>The project type of Deployment CAB</summary>
        </member>
        <member name="F:Community.VisualStudio.Toolkit.ProjectTypes.DEPLOYMENT_MERGE_MODULE">
            <summary>The project type of Deployment Merge Module</summary>
        </member>
        <member name="F:Community.VisualStudio.Toolkit.ProjectTypes.DEPLOYMENT_SETUP">
            <summary>The project type of Deployment Setup</summary>
        </member>
        <member name="F:Community.VisualStudio.Toolkit.ProjectTypes.DEPLOYMENT_SMART_DEVICE_CAB">
            <summary>The project type of Deployment Smart Device CAB</summary>
        </member>
        <member name="F:Community.VisualStudio.Toolkit.ProjectTypes.DISTRIBUTED_SYSTEM">
            <summary>The project type of Distributed System</summary>
        </member>
        <member name="F:Community.VisualStudio.Toolkit.ProjectTypes.DOTNET_CORE">
            <summary>The project type of .NET Core projects.</summary>
        </member>
        <member name="F:Community.VisualStudio.Toolkit.ProjectTypes.DYNAMICS_2012_AX">
            <summary>The project type of Dynamics 2012 AX</summary>
        </member>
        <member name="F:Community.VisualStudio.Toolkit.ProjectTypes.EXTENSIBILITY">
            <summary>The project type of Extensibility</summary>
        </member>
        <member name="F:Community.VisualStudio.Toolkit.ProjectTypes.F_SHARP">
            <summary>The project type of F#</summary>
        </member>
        <member name="F:Community.VisualStudio.Toolkit.ProjectTypes.J_SHARP">
            <summary>The project type of J#</summary>
        </member>
        <member name="F:Community.VisualStudio.Toolkit.ProjectTypes.LEGACY_SMART_DEVICE_CSHARP">
            <summary>The project type of Legacy Smart Device C#</summary>
        </member>
        <member name="F:Community.VisualStudio.Toolkit.ProjectTypes.LEGACY_SMART_DEVICE_VB">
            <summary>The project type of Legacy Smart Device VB.net</summary>
        </member>
        <member name="F:Community.VisualStudio.Toolkit.ProjectTypes.MICRO_FRAMEWORK">
            <summary>The project type of Micro Framework</summary>
        </member>
        <member name="F:Community.VisualStudio.Toolkit.ProjectTypes.MISC">
            <summary>The project type of Misc projects.</summary>
        </member>
        <member name="F:Community.VisualStudio.Toolkit.ProjectTypes.MVC_2">
            <summary>The project type of Model-View-Controller (MVC) v2</summary>
        </member>
        <member name="F:Community.VisualStudio.Toolkit.ProjectTypes.MVC_3">
            <summary>The project type of Model-View-Controller (MVC) v3</summary>
        </member>
        <member name="F:Community.VisualStudio.Toolkit.ProjectTypes.MVC_4">
            <summary>The project type of Model-View-Controller (MVC) v4</summary>
        </member>
        <member name="F:Community.VisualStudio.Toolkit.ProjectTypes.MVC_5">
            <summary>The project type of Model-View-Controller (MVC) v5</summary>
        </member>
        <member name="F:Community.VisualStudio.Toolkit.ProjectTypes.MONO_ANDROID">
            <summary>The project type of Mono Android</summary>
        </member>
        <member name="F:Community.VisualStudio.Toolkit.ProjectTypes.MONO_TOUCH">
            <summary>The project type of Mono Touch</summary>
        </member>
        <member name="F:Community.VisualStudio.Toolkit.ProjectTypes.MONOTOUCH_BINDING">
            <summary>The project type of Mono Touch Binding</summary>
        </member>
        <member name="F:Community.VisualStudio.Toolkit.ProjectTypes.NODE_JS">
            <summary>The project type of Node.js projects.</summary>
        </member>
        <member name="F:Community.VisualStudio.Toolkit.ProjectTypes.PCL">
            <summary>The project type of Protable Class Library</summary>
        </member>
        <member name="F:Community.VisualStudio.Toolkit.ProjectTypes.SOLUTION_FOLDER">
            <summary>The project type of Solution Folder</summary>
        </member>
        <member name="F:Community.VisualStudio.Toolkit.ProjectTypes.SHAREPOINT_CSHARP">
            <summary>The project type of Sharepoint C#</summary>
        </member>
        <member name="F:Community.VisualStudio.Toolkit.ProjectTypes.SHAREPOINT_VB">
            <summary>The project type of Sharepoint VB.net</summary>
        </member>
        <member name="F:Community.VisualStudio.Toolkit.ProjectTypes.SHAREPOINT_WORKFLOW">
            <summary>The project type of Sharepoint Workflow</summary>
        </member>
        <member name="F:Community.VisualStudio.Toolkit.ProjectTypes.SILVERLIGHT">
            <summary>The project type of Silverlight</summary>
        </member>
        <member name="F:Community.VisualStudio.Toolkit.ProjectTypes.SMART_DEVICE_CSHARP">
            <summary>The project type of Smart Device C#</summary>
        </member>
        <member name="F:Community.VisualStudio.Toolkit.ProjectTypes.SMART_DEVICE_VB">
            <summary>The project type of Smart Device VB.net</summary>
        </member>
        <member name="F:Community.VisualStudio.Toolkit.ProjectTypes.SOLUTION_FOLDER_OTHER">
            <summary>The project type of Solution Folder (Other)</summary>
        </member>
        <member name="F:Community.VisualStudio.Toolkit.ProjectTypes.SSDT">
            <summary>The project type of SQL Server Data projects.</summary>
        </member>
        <member name="F:Community.VisualStudio.Toolkit.ProjectTypes.TEST">
            <summary>The project type of Test</summary>
        </member>
        <member name="F:Community.VisualStudio.Toolkit.ProjectTypes.UNIVERSAL_WINDOWS_CLASS_LIBRARY">
            <summary>The project type of Universal Windows Class Library</summary>
        </member>
        <member name="F:Community.VisualStudio.Toolkit.ProjectTypes.UNIVERSAL_APP">
            <summary>The project type of UWP app projects.</summary>
        </member>
        <member name="F:Community.VisualStudio.Toolkit.ProjectTypes.VB">
            <summary>The project type of VB.net</summary>
        </member>
        <member name="F:Community.VisualStudio.Toolkit.ProjectTypes.VISUAL_DATABASE_TOOLS">
            <summary>The project type of Visual Database Tools</summary>
        </member>
        <member name="F:Community.VisualStudio.Toolkit.ProjectTypes.VISUAL_STUDIO_2015_INSTALLER_PROJECT">
            <summary>The project type of Visual Studio 2015 Installer Project</summary>
        </member>
        <member name="F:Community.VisualStudio.Toolkit.ProjectTypes.VSTA">
            <summary>The project type of Visual Studio Tools for Applications</summary>
        </member>
        <member name="F:Community.VisualStudio.Toolkit.ProjectTypes.VSTO">
            <summary>The project type of Visual Studio Tools for Office</summary>
        </member>
        <member name="F:Community.VisualStudio.Toolkit.ProjectTypes.WEB_APPLICATION">
            <summary>The project type of Web Application</summary>
        </member>
        <member name="F:Community.VisualStudio.Toolkit.ProjectTypes.WEBSITE">
            <summary>The project type of Website</summary>
        </member>
        <member name="F:Community.VisualStudio.Toolkit.ProjectTypes.WINDOWS_CSHARP">
            <summary>The project type of Windows C#</summary>
        </member>
        <member name="F:Community.VisualStudio.Toolkit.ProjectTypes.WINDOWS_VB">
            <summary>The project type of Windows VB.net</summary>
        </member>
        <member name="F:Community.VisualStudio.Toolkit.ProjectTypes.WINDOWS_C_PLUS_PLUS">
            <summary>The project type of Windows C++</summary>
        </member>
        <member name="F:Community.VisualStudio.Toolkit.ProjectTypes.WCF">
            <summary>The project type of WCF</summary>
        </member>
        <member name="F:Community.VisualStudio.Toolkit.ProjectTypes.WINDOWS_PHONE_8_BLANK">
            <summary>The project type of Windows Phone 8</summary>
        </member>
        <member name="F:Community.VisualStudio.Toolkit.ProjectTypes.WINDOWS_PHONE_8_CSHARP">
            <summary>The project type of Windows Phone 8 C#</summary>
        </member>
        <member name="F:Community.VisualStudio.Toolkit.ProjectTypes.WINDOWS_PHONE_8_VB">
            <summary>The project type of Windows Phone 8 VB.net</summary>
        </member>
        <member name="F:Community.VisualStudio.Toolkit.ProjectTypes.WPF">
            <summary>The project type of WPF</summary>
        </member>
        <member name="F:Community.VisualStudio.Toolkit.ProjectTypes.WINDOWS_STORE_METRO">
            <summary>The project type of Windows Store Metro</summary>
        </member>
        <member name="F:Community.VisualStudio.Toolkit.ProjectTypes.WORKFLOW_CSHARP">
            <summary>The project type of Workflow C#</summary>
        </member>
        <member name="F:Community.VisualStudio.Toolkit.ProjectTypes.WORKFLOW_VB">
            <summary>The project type of Workflow VB.net</summary>
        </member>
        <member name="F:Community.VisualStudio.Toolkit.ProjectTypes.WORKFLOW_FOUNDATION">
            <summary>The project type of Workflow Foundation</summary>
        </member>
        <member name="F:Community.VisualStudio.Toolkit.ProjectTypes.XAMARIN_ANDROID">
            <summary>The project type of Xamarin Android</summary>
        </member>
        <member name="F:Community.VisualStudio.Toolkit.ProjectTypes.XAMARIN_IOS">
            <summary>The project type of Xamaric IOS</summary>
        </member>
        <member name="F:Community.VisualStudio.Toolkit.ProjectTypes.XNA_WINDOWS">
            <summary>The project type of XNA Windows</summary>
        </member>
        <member name="F:Community.VisualStudio.Toolkit.ProjectTypes.XNA_XBOX">
            <summary>The project type of XNA Xbox</summary>
        </member>
        <member name="F:Community.VisualStudio.Toolkit.ProjectTypes.XNA_ZUNE">
            <summary>The project type of XNA Zune</summary>
        </member>
        <member name="F:Community.VisualStudio.Toolkit.ProjectTypes.XSHARP">
            <summary>The project type of X#</summary>
        </member>
        <member name="T:Community.VisualStudio.Toolkit.ToolkitThreadHelper">
             <summary>
             Provides a JoinableTaskFactory that is safe to use in MEF components or when an AsyncPackage.JoinableTaskFactory
             is not available.
             </summary>
             <remarks>
             JoinableTaskFactory (hereafter 'JTF') from ThreadHelper is not the same as from an AsyncPackage. If you have an
             AsyncPackage available then always prefer to use its JTF instance over ThreadHelper. AsyncPackage's JTF will
             track all unjoined tasks and ensure they get joined when the package disposes before VS shuts down the CLR.
             
             In addition, AsyncPackage provides a disposal token so if you pass that token to all your async work (which you
             should) then VS can signal the token to cancel all work and ensure shutdown happens quickly, instead of having
             to wait for unfinished tasks to complete.
            
             But in some places (e.g. MEF components) you won't have an AsyncPackage available and may be tempted to use
             ThreadHelper's JTF. That's fine for Run and SwitchToMainThreadAsync and also for RunAsync as long as you
             await/join all tasks that RunAsync returns (although you still won't have a disposal token). But if you start
             fire-and-forget style tasks using ThreadHelper.JoinableTaskFactory.RunAsync and never explicitly await/join them
             then these tasks will never be joined.
             
             ToolkitThreadHelper solves the above by creating a new JTF instance along with a collection and a disposal token,
             and ensures that all unfinished tasks are joined during disposal, just like AsyncPackage.
             
             The implementation is based on aarnott's example here:
             https://github.com/microsoft/vs-threading/blob/main/doc/cookbook_vs.md#void-returning-fire-and-forget-methods
             </remarks>
             <example>
             <code>
             [Export(typeof(IWpfTextViewCreationListener))]
             class TextviewCreationListener : IWpfTextViewCreationListener, IDisposable
             {
                 private readonly ToolkitThreadHelper _threadHelper = new(ThreadHelper.JoinableTaskContext);
                 
                 public void Dispose()
                 {
                     Dispose(true);
                     GC.SuppressFinalize(this);
                 }
                 
                 protected virtual void Dispose(bool disposing)
                 {
                     if (disposing)
                     {
                         _threadHelper.Dispose();
                     }   
                 }
             
                 public void TextViewCreated(IWpfTextView textView)
                 {
                     // Note: RunAsync not awaited
                     _threadHelper.JoinableTaskFactory.RunAsync(async () =>
                     {
                         await _threadHelper.JoinableTaskFactory.SwitchToMainThreadAsync(_threadHelper.DisposalToken);
                             
                         await MyMethodAsync(_threadHelper.DisposalToken);
                             
                     }).FireAndForget();
                 }
             }
             </code>
             </example>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.ToolkitThreadHelper.Create">
            <summary>
            Creates the ToolkitThreadHelper with Visual Studio's singleton instance of the <see cref="T:Microsoft.VisualStudio.Threading.JoinableTaskContext"/>.
            This is suitable for use within a Visual Studio extension or unit tests which use the Visual Studio SDK Test Framework.
            For all other scenarios, call <see cref="M:Community.VisualStudio.Toolkit.ToolkitThreadHelper.CreateWithContext(Microsoft.VisualStudio.Threading.JoinableTaskContext)"/>.
            </summary>
            <returns>A new ToolkitThreadHelper instance.</returns>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.ToolkitThreadHelper.CreateWithContext(Microsoft.VisualStudio.Threading.JoinableTaskContext)">
            <summary>
            Creates the ToolkitThreadHelper with the supplied <see cref="T:Microsoft.VisualStudio.Threading.JoinableTaskContext"/>.
            </summary>
            <param name="joinableTaskContext">
            The application's one-and-only <see cref="T:Microsoft.VisualStudio.Threading.JoinableTaskContext"/>.
            For Visual Studio extensions, prefer to call <see cref="M:Community.VisualStudio.Toolkit.ToolkitThreadHelper.Create"/> or pass ThreadHelper.JoinableTaskContext,
            which is Visual Studio's singleton instance.
            For other scenarios, including unit tests which don't use the Visual Studio SDK Test Framework, create a
            JoinableTaskContext instance (only one instance for the process) to supply here.
            </param>
            <returns>A new ToolkitThreadHelper instance.</returns>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.ToolkitThreadHelper.#ctor(Microsoft.VisualStudio.Threading.JoinableTaskContext)">
            <summary>
            Private constructor; call <see cref="M:Community.VisualStudio.Toolkit.ToolkitThreadHelper.Create"/> or <see cref="M:Community.VisualStudio.Toolkit.ToolkitThreadHelper.CreateWithContext(Microsoft.VisualStudio.Threading.JoinableTaskContext)"/>.
            </summary>
            <param name="joinableTaskContext">The application's one-and-only <see cref="T:Microsoft.VisualStudio.Threading.JoinableTaskContext"/>.</param>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.ToolkitThreadHelper.JoinableTaskFactory">
            <summary>
            The JoinableTaskFactory instance.
            </summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.ToolkitThreadHelper.DisposalToken">
            <summary>
            Gets a <see cref="T:System.Threading.CancellationToken"/> that can be used to check if the class has been disposed.
            </summary>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.ToolkitThreadHelper.Dispose">
            <summary>
            Joins any unfinished tasks.
            </summary>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.ToolkitThreadHelper.Dispose(System.Boolean)">
            <summary>
            Joins any unfinished tasks.
            </summary>
        </member>
        <member name="T:Community.VisualStudio.Toolkit.LanguageBase">
            <summary>
            A base class for custom language services and editor factories
            </summary>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.LanguageBase.#ctor(System.Object)">
            <summary>
            Creates a new instance of the language.
            </summary>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.LanguageBase.GetLanguageName(System.String@)">
            <inheritdoc/>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.LanguageBase.Name">
            <inheritdoc/>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.LanguageBase.FileExtensions">
            <summary>
            An array of file extensions associated with this language.
            </summary>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.LanguageBase.SetDefaultPreferences(Microsoft.VisualStudio.Package.LanguagePreferences)">
            <summary>
            Set the default preferences for this language.
            </summary>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.LanguageBase.GetLanguagePreferences">
            <inheritdoc/>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.LanguageBase.GetScanner(Microsoft.VisualStudio.TextManager.Interop.IVsTextLines)">
            <inheritdoc/>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.LanguageBase.ParseSource(Microsoft.VisualStudio.Package.ParseRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.LanguageBase.GetFormatFilterList">
            <inheritdoc/>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.LanguageBase.#ctor(Microsoft.VisualStudio.Shell.Package,System.Guid)">
            <summary>
            Creates a new instance of a language service and editor factory.
            </summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.LanguageBase.PromptEncodingOnLoad">
            <inheritdoc/>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.LanguageBase.SetSite(Microsoft.VisualStudio.OLE.Interop.IServiceProvider)">
            <inheritdoc/>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.LanguageBase.MapLogicalView(System.Guid@,System.String@)">
            <inheritdoc/>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.LanguageBase.Close">
            <inheritdoc/>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.LanguageBase.CreateEditorInstance(System.UInt32,System.String,System.String,Microsoft.VisualStudio.Shell.Interop.IVsHierarchy,System.UInt32,System.IntPtr,System.IntPtr@,System.IntPtr@,System.String@,System.Guid@,System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.LanguageBase.GetTextBuffer(System.IntPtr,System.String)">
            <summary>
            Gets the text view lines from the doc data.
            </summary>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.LanguageBase.CreateDocumentView(System.String,System.String,Microsoft.VisualStudio.Shell.Interop.IVsHierarchy,System.UInt32,Microsoft.VisualStudio.TextManager.Interop.IVsTextLines,System.Boolean,System.String@,System.Guid@)">
            <summary>
            Creates the document view
            </summary>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.LanguageBase.CreateCodeView(System.String,Microsoft.VisualStudio.TextManager.Interop.IVsTextLines,System.Boolean,System.String@,System.Guid@)">
            <summary>
            Creates the code view.
            </summary>
        </member>
        <member name="T:Community.VisualStudio.Toolkit.BraceCompletionBase">
            <summary>
            Default implementation of brace completion.
            </summary>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.BraceCompletionBase.TryCreateContext(Microsoft.VisualStudio.Text.Editor.ITextView,Microsoft.VisualStudio.Text.SnapshotPoint,System.Char,System.Char,Microsoft.VisualStudio.Text.BraceCompletion.IBraceCompletionContext@)">
            <inheritdoc/>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.BraceCompletionBase.GetCompletionContext">
            <summary>
            Return object that implements the CompletionContext that you want to use
            </summary>
            <returns>an object of type IBraceCompletionContext</returns>
            <remarks>The default implementation returns an object that allows 'everything'</remarks>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.BraceCompletionBase.IsValidBraceCompletionContext(Microsoft.VisualStudio.Text.SnapshotPoint)">
            <summary>
            Determine if brace completion should be active in this context
            </summary>
            <param name="openingPoint">Point where the brace completion is triggered</param>
            <remarks>You can use this method to disable brace completion in comments or inside literal strings
            The default behavior is to disable completion inside comments and literal strings, which is determined
            by looking at the 
            </remarks>
            <returns>true when completion should be allowed</returns>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.BraceCompletionBase.GetSpans(Microsoft.VisualStudio.Text.SnapshotPoint)">
            <summary>
            Return a list of Classification spans for the point in the snapshot
            </summary>
            <param name="point">Point for which the list should be returned</param>
            <returns>A List of null when the position is invalid or when the classifier service is not available</returns>
        </member>
        <member name="T:Community.VisualStudio.Toolkit.BraceMatchingBase">
            <summary>
            A base class for creating brace matching highlights.
            </summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.BraceMatchingBase.BraceList">
            <summary>
            A dictionary with open and closing braces to highlight.
            </summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.BraceMatchingBase.TextMarketTagType">
            <summary>
            Other predefined types include "bracehightligh", "blue", "vivid".
            </summary>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.BraceMatchingBase.CreateTagger``1(Microsoft.VisualStudio.Text.Editor.ITextView,Microsoft.VisualStudio.Text.ITextBuffer)">
            <inheritdoc />
        </member>
        <member name="T:Community.VisualStudio.Toolkit.SameWordHighlighterBase">
            <summary>
            A base class for providing same-word highlighting.
            </summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.SameWordHighlighterBase.FindOptions">
            <summary>
            The Options that are used to find the matching words. The default implementation returns 
            FindOptions.WholeWord | FindOptions.MatchCase
            </summary>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.SameWordHighlighterBase.FilterResults(System.Collections.Generic.IEnumerable{Microsoft.VisualStudio.Text.SnapshotSpan})">
            <summary>
            Filter the results. 
            </summary>
            <param name="results">Collection of the results</param>
            <returns>Filtered list of results. The default implementation returns all the results</returns>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.SameWordHighlighterBase.ShouldHighlight(System.String)">
            <summary>
            Should the Highlight code be triggered for this word
            </summary>
            <param name="text">The word to highlight</param>
            <returns>true to continue the highlight or false to prevent the highlight.
            The default implementation always returns true.</returns>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.SameWordHighlighterBase.CreateTagger``1(Microsoft.VisualStudio.Text.Editor.ITextView,Microsoft.VisualStudio.Text.ITextBuffer)">
            <inheritdoc/>
        </member>
        <member name="T:Community.VisualStudio.Toolkit.TokenClassificationTaggerBase">
            <summary>
            A base class to provide classification (syntax highlighting) based on a Token Tagger.
            </summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.TokenClassificationTaggerBase.ClassificationMap">
            <summary>
            A map of a token value and which classification name it corresponds with.
            </summary>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.TokenClassificationTaggerBase.CreateTagger``1(Microsoft.VisualStudio.Text.ITextBuffer)">
            <inheritdoc/>
        </member>
        <member name="T:Community.VisualStudio.Toolkit.TokenErrorTaggerBase">
            <summary>
            An error tagger based on TokenTag.
            </summary>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.TokenErrorTaggerBase.CreateTagger``1(Microsoft.VisualStudio.Text.ITextBuffer)">
            <inheritdoc/>
        </member>
        <member name="T:Community.VisualStudio.Toolkit.TokenTag">
            <summary>
            A TokenTag is the only tag you need to add to your custom language implementation.
            </summary>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.TokenTag.#ctor(System.Object,System.Collections.Generic.IEnumerable{Community.VisualStudio.Toolkit.ErrorListItem})">
            <summary>
            Creates a new instance.
            </summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.TokenTag.TokenType">
            <summary>
            This can be any object you use to differentiate the type of token tags. It's used for classification.
            </summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.TokenTag.Errors">
            <summary>
            A list of errors associated with the tag.
            </summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.TokenTag.IsValid">
            <summary>
            Returns true if there are no errors in the list.
            </summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.TokenTag.GetTooltipAsync">
            <summary>
            A function to create custom hover tooltips (QuickInfo). Optional.
            </summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.TokenTag.GetOutliningText">
            <summary>
            A function to override the default behavior of producing collapse outlining text.
            </summary>
        </member>
        <member name="T:Community.VisualStudio.Toolkit.TokenTaggerBase">
            <summary>
            A base class for tagging up a document using <see cref="T:Community.VisualStudio.Toolkit.TokenTag"/>.
            </summary>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.TokenTaggerBase.#ctor(Microsoft.VisualStudio.Text.ITextBuffer,System.Boolean)">
            <summary>
            Creates a new instance of the tagger base class.
            </summary>
            <param name="buffer">The text buffer.</param>
            <param name="runFirstTokenizationImmediately">Determines the thread priority of the first tokenization run.</param>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.TokenTaggerBase.Buffer">
            <summary>
            The current text buffer.
            </summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.TokenTaggerBase.TagsCache">
            <summary>
            The cache of all the tag spans. This cache must be updated from the <see cref="M:Community.VisualStudio.Toolkit.TokenTaggerBase.TokenizeAsync"/> method.
            </summary>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.TokenTaggerBase.TokenizeAsync">
            <summary>
            Call this method from a background thread to update the <see cref="P:Community.VisualStudio.Toolkit.TokenTaggerBase.TagsCache"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.TokenTaggerBase.GetTags(Microsoft.VisualStudio.Text.NormalizedSnapshotSpanCollection)">
            <inheritdoc/>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.TokenTaggerBase.CreateToken(System.Object,System.Boolean,System.Boolean,System.Collections.Generic.IEnumerable{Community.VisualStudio.Toolkit.ErrorListItem})">
            <summary>
            Creates a <see cref="T:Community.VisualStudio.Toolkit.TokenTag"/>. When all tags are created, invoke <see cref="M:Community.VisualStudio.Toolkit.TokenTaggerBase.OnTagsUpdated(System.Collections.Generic.List{Microsoft.VisualStudio.Text.Tagging.ITagSpan{Community.VisualStudio.Toolkit.TokenTag}})"/> to update the <see cref="P:Community.VisualStudio.Toolkit.TokenTaggerBase.TagsCache"/>.
            </summary>
            <param name="tokenType">An object (could be a string or type) that identifies the type of token. This used for syntax highlighting.</param>
            <param name="hasTooltip">If true, the <see cref="M:Community.VisualStudio.Toolkit.TokenTaggerBase.GetTooltipAsync(Microsoft.VisualStudio.Text.SnapshotPoint)"/> method must be overridden.</param>
            <param name="supportOutlining">If true, the <see cref="M:Community.VisualStudio.Toolkit.TokenTaggerBase.GetOutliningText(System.String)"/> method is assigned the token. Override it to customize outlining.</param>
            <param name="errors">Optional. List of errors associated with the token. This is used by the error tagger and will Error List.</param>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.TokenTaggerBase.GetTooltipAsync(Microsoft.VisualStudio.Text.SnapshotPoint)">
            <summary>
            A callback for when the user hovers the mouse over a token in the document.
            </summary>
            <param name="triggerPoint">The point where the mouse is that caused the tooltip (QuickInfo) to be invoked.</param>
            <returns><see langword="null"/>, or any text or WPF content to show in the tooltip (QuickInfo).</returns>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.TokenTaggerBase.GetOutliningText(System.String)">
            <summary>
            A callback for getting the text shown in the collapsed state of the outlining tag.
            </summary>
            <param name="text">The entirety of the text to collapse.</param>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.TokenTaggerBase.OnTagsUpdated(System.Collections.Generic.List{Microsoft.VisualStudio.Text.Tagging.ITagSpan{Community.VisualStudio.Toolkit.TokenTag}})">
            <summary>
            Call this when tokenization is complete and <see cref="P:Community.VisualStudio.Toolkit.TokenTaggerBase.TagsCache"/> should be updated and <see cref="E:Community.VisualStudio.Toolkit.TokenTaggerBase.TagsChanged"/> invoked.
            </summary>
            <param name="tags"></param>
        </member>
        <member name="E:Community.VisualStudio.Toolkit.TokenTaggerBase.TagsChanged">
            <inheritdoc/>
        </member>
        <member name="T:Community.VisualStudio.Toolkit.InternalTaggerBase`1">
            <summary>
            A base class for creating token taggers for your custom language implementation.
            </summary>
            <typeparam name="TTag"></typeparam>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.InternalTaggerBase`1.#ctor(Microsoft.VisualStudio.Text.Tagging.ITagAggregator{Community.VisualStudio.Toolkit.TokenTag})">
            <summary>
            Creates a new instance of the base class.
            </summary>
            <param name="tags"></param>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.InternalTaggerBase`1.Tags">
            <summary>
            The collection of Token Tags.
            </summary>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.InternalTaggerBase`1.GetTags(Microsoft.VisualStudio.Text.NormalizedSnapshotSpanCollection)">
            <inheritdoc/>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.InternalTaggerBase`1.GetTags(Microsoft.VisualStudio.Text.NormalizedSnapshotSpanCollection,System.Boolean)">
            <summary>
            Override to provide custom tags
            </summary>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.InternalTaggerBase`1.Dispose(System.Boolean)">
            <summary>
            Disposes the instance
            </summary>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.InternalTaggerBase`1.Dispose">
            <inheritdoc/>
        </member>
        <member name="E:Community.VisualStudio.Toolkit.InternalTaggerBase`1.TagsChanged">
            <inheritdoc/>
        </member>
        <member name="T:Community.VisualStudio.Toolkit.WpfTextViewCreationListener">
            <summary>
            A base class for <c>IWpfTextViewCreationListener</c>
            </summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.WpfTextViewCreationListener.DisposalToken">
            <summary>
            Gets a <see cref="T:System.Threading.CancellationToken"/> that can be used to check if the class has been disposed.
            </summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.WpfTextViewCreationListener.JoinableTaskFactory">
            <summary>
            The JoinableTaskFactory instance.
            </summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.WpfTextViewCreationListener.Document">
            <summary>
            The text document associated with the text view.
            </summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.WpfTextViewCreationListener.TextView">
            <summary>
            The text view passed to this <see cref="M:Community.VisualStudio.Toolkit.WpfTextViewCreationListener.Created(Community.VisualStudio.Toolkit.DocumentView)"/> method.
            </summary>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.WpfTextViewCreationListener.TextViewCreated(Microsoft.VisualStudio.Text.Editor.IWpfTextView)">
            <inheritdoc />
        </member>
        <member name="M:Community.VisualStudio.Toolkit.WpfTextViewCreationListener.Created(Community.VisualStudio.Toolkit.DocumentView)">
            <summary>
            Called when a text view having matching roles is created over a text data model having a matching content type.
            </summary>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.WpfTextViewCreationListener.CreatedAsync(Community.VisualStudio.Toolkit.DocumentView)">
            <summary>
            Called when a text view having matching roles is created over a text data model having a matching content type.
            </summary>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.WpfTextViewCreationListener.Closed(Microsoft.VisualStudio.Text.Editor.IWpfTextView)">
            <summary>
            Is called when the view closes. Use this to clean up references.
            </summary>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.WpfTextViewCreationListener.EncodingChanged(Microsoft.VisualStudio.Text.EncodingChangedEventArgs)">
            <summary>
            Is called when the document encoding changes.
            </summary>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.WpfTextViewCreationListener.DirtyStateChanged">
            <summary>
            Is called when the dirty state of the document changes.
            </summary>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.WpfTextViewCreationListener.FileActionOccurred(Microsoft.VisualStudio.Text.TextDocumentFileActionEventArgs)">
            <summary>
            Is called when a file action on the document occurs.
            </summary>
        </member>
        <member name="T:Community.VisualStudio.Toolkit.IRatingConfig">
            <summary>
            An interface used to storing information related to <see cref="T:Community.VisualStudio.Toolkit.RatingPrompt"/>
            </summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.IRatingConfig.RatingRequests">
            <summary>
            The number of valid requests made to show the rating prompt.
            </summary>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.IRatingConfig.SaveAsync">
            <summary>
            A method to asynchronously persist the <see cref="P:Community.VisualStudio.Toolkit.IRatingConfig.RatingRequests"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Community.VisualStudio.Toolkit.InfoBarFactory">
            <summary>
            Creates InfoBar controls for use on documents and tool windows.
            </summary>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.InfoBarFactory.CreateAsync(Microsoft.VisualStudio.Shell.InfoBarModel)">
            <summary>
            Creates a new InfoBar in the main window.
            </summary>
            <param name="model">A model representing the text, icon, and actions of the InfoBar.</param>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.InfoBarFactory.CreateAsync(System.String,Microsoft.VisualStudio.Shell.InfoBarModel)">
            <summary>
            Creates a new InfoBar in any tool- or document window.
            </summary>
            <param name="windowGuidOrFileName">The GUID of the tool window or filename of document. For instance, <c>ToolWindowGuids80.SolutionExplorer</c></param>
            <param name="model">A model representing the text, icon, and actions of the InfoBar.</param>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.InfoBarFactory.CreateAsync(Microsoft.VisualStudio.Shell.Interop.IVsWindowFrame,Microsoft.VisualStudio.Shell.InfoBarModel)">
            <summary>
            Creates a new InfoBar in any tool- or document window.
            </summary>
        </member>
        <member name="T:Community.VisualStudio.Toolkit.InfoBar">
            <summary>
            An instance of an InfoBar (also known as Yellow- or Gold bar).
            </summary>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.InfoBar.#ctor(Microsoft.VisualStudio.Shell.Interop.IVsInfoBarHost,Microsoft.VisualStudio.Shell.InfoBarModel)">
            <summary>
            Creates a new instance of the InfoBar in a specific window frame or document window.
            </summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.InfoBar.IsVisible">
            <summary>
            Indicates if the InfoBar is visible in the UI or not.
            </summary>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.InfoBar.TryShowInfoBarUIAsync">
            <summary>
            Displays the InfoBar in the tool window or document previously specified.
            </summary>
            <returns><c>true</c> if the InfoBar was shown; otherwise <c>false</c>.</returns>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.InfoBar.TryGetWpfElement(System.Windows.Controls.Control@)">
            <summary>
            Attempts to get the underlying WPF UI element of the InfoBar
            </summary>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.InfoBar.Close">
            <summary>
            Closes the InfoBar without the user manually had to do it.
            </summary>
        </member>
        <member name="E:Community.VisualStudio.Toolkit.InfoBar.ActionItemClicked">
            <summary>
            An event triggered when an action item in the InfoBar is clicked.
            </summary>
        </member>
        <member name="T:Community.VisualStudio.Toolkit.MessageBox">
            <summary>
            Shows message boxes.
            </summary>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.MessageBox.Show(System.String,System.String,Microsoft.VisualStudio.Shell.Interop.OLEMSGICON,Microsoft.VisualStudio.Shell.Interop.OLEMSGBUTTON,Microsoft.VisualStudio.Shell.Interop.OLEMSGDEFBUTTON)">
            <summary>
            Shows a message box that is parented to the main Visual Studio window.
            </summary>
            <returns>
            The result of which button on the message box was clicked.
            </returns>
            <example>
            <code>
            VS.MessageBox.Show("Title", "The message");
            </code>
            </example>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.MessageBox.ShowAsync(System.String,System.String,Microsoft.VisualStudio.Shell.Interop.OLEMSGICON,Microsoft.VisualStudio.Shell.Interop.OLEMSGBUTTON,Microsoft.VisualStudio.Shell.Interop.OLEMSGDEFBUTTON)">
            <summary>
            Shows a message box that is parented to the main Visual Studio window.
            </summary>
            <returns>
            The result of which button on the message box was clicked.
            </returns>
            <example>
            <code>
            await VS.MessageBox.ShowAsync("Title", "The message");
            </code>
            </example>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.MessageBox.ShowError(System.String,System.String)">
            <summary>
            Shows an error message box.
            </summary>
            <returns>The result of which button on the message box was clicked.</returns>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.MessageBox.ShowErrorAsync(System.String,System.String)">
            <summary>
            Shows an error message box.
            </summary>
            <returns>The result of which button on the message box was clicked.</returns>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.MessageBox.ShowWarning(System.String,System.String)">
            <summary>
            Shows a warning message box.
            </summary>
            <returns>The result of which button on the message box was clicked.</returns>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.MessageBox.ShowWarningAsync(System.String,System.String)">
            <summary>
            Shows a warning message box.
            </summary>
            <returns>The result of which button on the message box was clicked.</returns>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.MessageBox.ShowConfirm(System.String,System.String)">
            <summary>
            Shows a yes/no/cancel message box.
            </summary>
            <returns>true if the user clicks the 'Yes' button.</returns>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.MessageBox.ShowConfirmAsync(System.String,System.String)">
            <summary>
            Shows a yes/no/cancel message box.
            </summary>
            <returns>true if the user clicks the 'Yes' button.</returns>
        </member>
        <member name="T:Community.VisualStudio.Toolkit.RatingPrompt">
            <summary>
            A standardized way to prompt the user to rate and review the extension
            </summary>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.RatingPrompt.#ctor(System.String,System.String,Community.VisualStudio.Toolkit.IRatingConfig,System.Int32)">
            <summary>
            Creates a new instance of the rating prompt.
            </summary>
            <param name="marketplaceId">The unique Marketplace id found at the end of the Marketplace URL. For instance: "MyName.MyExtensions".</param>
            <param name="extensionName">The name of the extension to show in the prompt.</param>
            <param name="config">Likely a options page that implements the <see cref="T:Community.VisualStudio.Toolkit.IRatingConfig"/> interface. This is used to keep track of how many times the prompt was requested and if the user has already rated.</param>
            <param name="requestsBeforePrompt">Indicates how many successful requests it takes before the user is prompted to rate.</param>
            <exception cref="T:System.ArgumentNullException">None of the parameters passed in can be null.</exception>
            <exception cref="T:System.ArgumentException">The Marketplace ID has to be valid so an absolute URI can be constructed.</exception>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.RatingPrompt.MarketplaceId">
            <summary>
            The Marketplace ID is the unique last part of the URL. For instance: "MyName.MyExtension".
            </summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.RatingPrompt.ExtensionName">
            <summary>
            The name of the extension. It's shown in the prompt so the user knows which extension to rate.
            </summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.RatingPrompt.Config">
            <summary>
            The configuration/options object used to store the information related to the rating prompt.
            </summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.RatingPrompt.RatingUrl">
            <summary>
            The Marketplace URL the users are taken to when prompted.
            </summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.RatingPrompt.RequestsBeforePrompt">
            <summary>
            Indicates how many successful requests it takes before the user is prompted to rate.
            </summary>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.RatingPrompt.RegisterSuccessfulUsage">
            <summary>
            Registers successful usage of the extension. Only one is registered per Visual Studio session.
            When the number of usages matches <see cref="P:Community.VisualStudio.Toolkit.RatingPrompt.RequestsBeforePrompt"/>, the prompt will be shown.
            </summary>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.RatingPrompt.ResetAsync">
            <summary>
            Resets the count of successful usages and starts over.
            </summary>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.RatingPrompt.PromptAsync">
            <summary>
            Prompts the user to rate the extension.
            </summary>
        </member>
        <member name="T:Community.VisualStudio.Toolkit.StatusBar">
            <summary>
            An API wrapper that makes it easy to work with the status bar.
            </summary>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.StatusBar.GetMessageAsync">
            <summary>Gets the current text from the status bar.</summary>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.StatusBar.ShowMessageAsync(System.String)">
            <summary>Sets the text in the status bar.</summary>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.StatusBar.ShowProgressAsync(System.String,System.Int32,System.Int32)">
            <summary>
            Shows the progress indicator in the status bar. 
            Set <paramref name="currentStep"/> and <paramref name="numberOfSteps"/> 
            to the same value to stop the progress.
            </summary>
            <param name="text">The text to display in the status bar.</param>
            <param name="currentStep">The current step number starting at 1.</param>
            <param name="numberOfSteps">The total number of steps to completion.</param>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.StatusBar.ClearAsync">
            <summary>Clears all text from the status bar.</summary>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.StatusBar.StartAnimationAsync(Community.VisualStudio.Toolkit.StatusAnimation)">
            <summary>Starts the animation on the status bar.</summary>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.StatusBar.EndAnimationAsync(Community.VisualStudio.Toolkit.StatusAnimation)">
            <summary>Ends the animation on the status bar.</summary>
        </member>
        <member name="T:Community.VisualStudio.Toolkit.StatusAnimation">
            <summary>A list of built-in animation visuals for the status bar.</summary>
        </member>
        <member name="T:Community.VisualStudio.Toolkit.BaseOptionModel`1">
            <summary>
            A base class for easily specifying options that are stored in the <see cref="T:Microsoft.VisualStudio.Settings.SettingsStore"/>
            (Visual Studio's private registry hive) as per-user settings. The <see cref="T:Microsoft.VisualStudio.Settings.SettingsStore"/>
            the <c>collectionPath</c> is determined via <see cref="P:Community.VisualStudio.Toolkit.BaseOptionModel`1.CollectionName"/>. All properties with <c>public</c> 
            getters and <c>public</c> setters are loaded and saved using the name of the property as the key. 
            See <c>Remarks</c>.
            </summary>
            <remarks>
            By default, the <see cref="P:Community.VisualStudio.Toolkit.BaseOptionModel`1.CollectionName"/> is used as the <see cref="T:Microsoft.VisualStudio.Settings.SettingsStore"/>'s <c>collectionPath</c>
            for all settings in this class, and is easily overridden. An individual property can be overridden by adding
            <see cref="T:Community.VisualStudio.Toolkit.OverrideCollectionNameAttribute"/> to the property.
            <para/>
            Also by default, the <see cref="T:Microsoft.VisualStudio.Settings.SettingsStore"/>'s <c>propertyName</c> is set to the name of the property,
            which can be overridden by adding <see cref="T:Community.VisualStudio.Toolkit.OverridePropertyNameAttribute"/> to the property.
            <para/>
            Property values are stored using the most appropriate native storage type. Support exists to store for all 
            integral numeric types, enumerations, <see cref="T:System.Single" />, <see cref="T:System.Double" />, 
            <see cref="T:System.Decimal" />, <see cref="T:System.Boolean" />, <see cref="T:System.Char" />, <see cref="T:System.String" />, 
            <see cref="T:System.DateTime"/>, <see cref="T:System.DateTimeOffset"/>, <see cref="T:System.Drawing.Color"/>, 
            <see cref="T:System.Guid"/>, <see cref="T:System.IO.MemoryStream"/>, and arrays of <see cref="T:System.Byte"/>.
            <para/>
            For property types not mentioned above, they are stored after passing through the <see cref="M:Community.VisualStudio.Toolkit.BaseOptionModel`1.SerializeValue(System.Object,System.Type,System.String)"/> 
            and <see cref="M:Community.VisualStudio.Toolkit.BaseOptionModel`1.DeserializeValue(System.String,System.Type,System.String)"/> methods, which use <see cref="T:System.Xml.Serialization.XmlSerializer"/> by default. If this mechanism is not
            viable for your desired property type, you may derive from these methods to implement your own serialization mechanism.
            <para/>
            When migrating an existing extension, you can use the <see cref="T:Community.VisualStudio.Toolkit.OverrideDataTypeAttribute"/> to specify the 
            native type it should use instead. See documentation on the <see cref="T:Community.VisualStudio.Toolkit.SettingDataType"/> enumeration. With this
            attribute you can specify the type conversion to use the <see cref="T:System.ComponentModel.TypeConverterAttribute"/>,
            or the default <see cref="M:System.Convert.ChangeType(System.Object,System.Type,System.IFormatProvider)" />.
            </remarks>
        </member>
        <member name="F:Community.VisualStudio.Toolkit.BaseOptionModel`1._propertyWrappers">
            <summary>   Use <see cref="M:Community.VisualStudio.Toolkit.BaseOptionModel`1.GetPropertyWrappers"/>. This is an implementation detail of base class. </summary>
        </member>
        <member name="F:Community.VisualStudio.Toolkit.BaseOptionModel`1._propertyWrapperLock">
            <summary>   (Immutable) Use <see cref="M:Community.VisualStudio.Toolkit.BaseOptionModel`1.GetPropertyWrappers"/>. This is an implementation detail of base class. </summary>
        </member>
        <member name="F:Community.VisualStudio.Toolkit.BaseOptionModel`1._propertyWrappersLoaded">
            <summary>   (Immutable) Use <see cref="M:Community.VisualStudio.Toolkit.BaseOptionModel`1.GetPropertyWrappers"/>. This is an implementation detail of base class. </summary>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.BaseOptionModel`1.#ctor">
            <summary>
            Creates a new instance of the option model.
            </summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.BaseOptionModel`1.Instance">
            <summary>
            A singleton instance of the options. MUST be called from UI thread only.
            </summary>
            <remarks>
            Call <see cref="M:Community.VisualStudio.Toolkit.BaseOptionModel`1.GetLiveInstanceAsync" /> instead if on a background thread or in an async context on the main thread.
            </remarks>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.BaseOptionModel`1.GetLiveInstanceAsync">
            <summary>
            Get the singleton instance of the options. Thread safe.
            </summary>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.BaseOptionModel`1.CreateAsync">
            <summary>
            Creates a new instance of the options class and loads the values from the store. For internal use only
            </summary>
            <returns></returns>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.BaseOptionModel`1.CollectionName">
            <summary>
            The name of the options collection as stored in the registry. By default this is <c>typeof(</c><typeparamref name="T"/><c>).FullName</c>
            unless overridden. This can also be overridden for an individual property in <typeparamref name="T"/> by adding the 
            <see cref="T:Community.VisualStudio.Toolkit.OverrideCollectionNameAttribute"/> to the property.
            </summary>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.BaseOptionModel`1.Load">
            <summary>
            Hydrates the properties from the registry, via <see cref="M:Community.VisualStudio.Toolkit.BaseOptionModel`1.LoadAsync"/>.
            </summary>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.BaseOptionModel`1.LoadAsync">
            <summary>
            Hydrates the values of the properties returned by <see cref="M:Community.VisualStudio.Toolkit.BaseOptionModel`1.GetOptionProperties"/> from the User <see cref="T:Microsoft.VisualStudio.Settings.SettingsStore"/>
            (Visual Studio Private Registry) asynchronously.
            </summary>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.BaseOptionModel`1.Save">
            <summary>
            Saves the properties to the registry, via <see cref="M:Community.VisualStudio.Toolkit.BaseOptionModel`1.SaveAsync"/>.
            </summary>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.BaseOptionModel`1.SaveAsync">
            <summary>
            Saves the values of the properties returned by <see cref="M:Community.VisualStudio.Toolkit.BaseOptionModel`1.GetOptionProperties"/> to the User <see cref="T:Microsoft.VisualStudio.Settings.SettingsStore"/>
            (Visual Studio Private Registry) asynchronously. After the values are saved, the live instance will be refreshed and 
            <see cref="E:Community.VisualStudio.Toolkit.BaseOptionModel`1.Saved"/> will then be raised.
            </summary>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.BaseOptionModel`1.SerializeValue(System.Object,System.Type,System.String)">
            <summary>   For properties with types that cannot be stored natively, this method is given a
                        the raw <paramref name="value"/> from the property and its declared
                        <paramref name="type"/>. This must be serialized into a non-null
                        <see cref="T:System.String"/> that will be stored as such in the
                        <see cref="T:Microsoft.VisualStudio.Settings.SettingsStore"/>. This method should throw an exception on failure. </summary>
            <remarks>   The base class implementation utilizes the <see cref="T:System.Xml.Serialization.XmlSerializer"/> to avoid
                        reliance on 3rd party libraries. If overriding this method, you must also override the related
                        <see cref="M:Community.VisualStudio.Toolkit.BaseOptionModel`1.DeserializeValue(System.String,System.Type,System.String)"/>, as these are two interrelated methods. <para />
                        If you wish to represent <c>null</c> for reference types, be aware that the
                        <see cref="T:System.String"/> that is stored must be non-null. <para /> </remarks>
            <param name="value">        The object that is to be serialized. Can Be Null. </param>
            <param name="type">         The type of the property. <paramref name="value"/> would be an instance of something assignable to this type.  </param>
            <param name="propertyName"> The <c>PropertyName</c> in the <see cref="T:Microsoft.VisualStudio.Settings.SettingsStore"/> where the value of this property is stored. </param>
            <returns>   The string containing the data necessary to deserialize the object. Not Null. </returns>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.BaseOptionModel`1.DeserializeValue(System.String,System.Type,System.String)">
            <summary>   For properties with types that cannot be stored natively, this method is given the
                        <paramref name="serializedData"/> from the <see cref="T:Microsoft.VisualStudio.Settings.SettingsStore"/> containing
                        serialized data (from <see cref="M:Community.VisualStudio.Toolkit.BaseOptionModel`1.SerializeValue(System.Object,System.Type,System.String)"/>) and its <paramref name="type"/>. This
                        method should deserialize the data or throw an exception on failure. </summary>
            <remarks>   The base class implementation utilizes the <see cref="T:System.Xml.Serialization.XmlSerializer"/> to avoid
                        reliance on 3rd party libraries. If overriding this method, you must also override the related
                        <see cref="M:Community.VisualStudio.Toolkit.BaseOptionModel`1.SerializeValue(System.Object,System.Type,System.String)"/>, as these are two interrelated methods. <para />
                        If you wish to represent <c>null</c> for reference types, be aware that the
                        <see cref="T:System.String"/> that is stored must be non-null. <para />
                        For value types you must always return an instance of the
                        <paramref name="type"/>. </remarks>
            <param name="serializedData"> The string representing the serialized object. By convention, an
                                        empty string indicates a value of null. </param>
            <param name="type">         The type of the property. The return value should be an instance of something assignable to this type.  </param>
            <param name="propertyName"> The <c>PropertyName</c> in the <see cref="T:Microsoft.VisualStudio.Settings.SettingsStore"/> where the value of this property is stored. </param>
            <returns>   The deserialized object, which should be an instance of something assignable to <paramref name="type"/> (if a value type, cannot be null)  </returns>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.BaseOptionModel`1.GetOptionProperties">
            <summary>   Returns an enumerable of <see cref="T:System.Reflection.PropertyInfo"/> for the properties of <typeparamref name="T"/>
            that will be loaded and saved. Base implementation utilizes reflection. </summary>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.BaseOptionModel`1.GetPropertyWrappers">
            <summary>   Uses <see cref="M:Community.VisualStudio.Toolkit.BaseOptionModel`1.GetOptionProperties"/> to retrieve a list of properties to persist. 
                        For each of those properties, a wrapper is created that implements the 
                        logic necessary to get and set values in the properties and in the 
                        <see cref="T:Microsoft.VisualStudio.Settings.SettingsStore"/>. Once performed, the results should be 
                        cached and returned in subsequent calls. </summary>
            <remarks> This implementation only performs this once and caches the results 
                      statically. After this is called once per type, reflection is no longer 
                      necessary for any operations performed by this class. </remarks>
        </member>
        <member name="E:Community.VisualStudio.Toolkit.BaseOptionModel`1.Saved">
            <summary>
            The Saved event is fired after the options have been persisted.
            </summary>
        </member>
        <member name="T:Community.VisualStudio.Toolkit.BaseOptionPage`1">
            <summary>
            A base class for a DialogPage to show in Tools -> Options.
            </summary>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.BaseOptionPage`1.#ctor">
            <summary>
            Creates a new instance of the options page.
            </summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.BaseOptionPage`1.AutomationObject">
            <summary>The model object to load and store.</summary>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.BaseOptionPage`1.LoadSettingsFromStorage">
            <summary>Loads the settings from the internal storage.</summary>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.BaseOptionPage`1.SaveSettingsToStorage">
            <summary>Saves settings to the internal storage.</summary>
        </member>
        <member name="T:Community.VisualStudio.Toolkit.IOptionModelPropertyWrapper">
            <summary>   Implementation should wrap an instance property member with public getter and setters from a <see cref="T:Community.VisualStudio.Toolkit.BaseOptionModel`1"/>,
                        and expose the ability to load and save the value of the property to the <see cref="T:Microsoft.VisualStudio.Settings.SettingsStore"/>.
            </summary>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.IOptionModelPropertyWrapper.Load``1(Community.VisualStudio.Toolkit.BaseOptionModel{``0},Microsoft.VisualStudio.Settings.SettingsStore)">
            <summary>   If the setting is found in the <paramref name="settingsStore"/>, retrieves the value of the setting, 
                        converts or deserializes it to the type of the wrapped property, and calls the property set method on 
                        the <paramref name="baseOptionModel"/>. No exceptions should be thrown from
                        this method. No changes to the property will be made if the setting does not exist. </summary>
            <typeparam name="TOptMdl">  Type of the base option model. </typeparam>
            <param name="baseOptionModel">  The base option model which is used as the target object on which the property 
                                            will be set. It also can be used for deserialization of stored data.  </param>
            <param name="settingsStore">    The settings store to retrieve the setting value from. </param>
            <returns>   True if the value exists in the <paramref name="settingsStore"/>, and the property was updated in
                        <paramref name="baseOptionModel"/>, false if setting does not exist or any step of the process 
                        failed. </returns>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.IOptionModelPropertyWrapper.Save``1(Community.VisualStudio.Toolkit.BaseOptionModel{``0},Microsoft.VisualStudio.Settings.WritableSettingsStore)">
            <summary>   The value of the wrapped property is retrieved by calling the property get method on <paramref name="baseOptionModel"/>.
                        This value is converted or serialized to a native type supported by the <paramref name="settingsStore"/>, 
                        then persisted to the store, assuring the collection exists first. No exceptions should be thrown from
                        this method. </summary>
            <typeparam name="TOptMdl">  Type of the base option model. </typeparam>
            <param name="baseOptionModel">  The base option model which is used as the target object from which the property 
                                            value will be retrieved. It also can be used for serialization of stored data.  </param>
            <param name="settingsStore">    The settings store to set the setting value in. </param>
            <returns>   True if we were able to persist the value in the store. However, if the serialization results in a null value,
                        it cannot be persisted in the settings store and false will be returned. False is also returned if any step 
                        of the process failed, and these are logged. </returns>
        </member>
        <member name="T:Community.VisualStudio.Toolkit.NativeSettingsType">
            <summary>
            Data types of the properties that are stored inside the collections. This mostly mirror
            <see cref="T:Microsoft.VisualStudio.Settings.SettingsType"/>, but adds <c>UInt32</c> and <c>UInt64</c>
            </summary>
        </member>
        <member name="F:Community.VisualStudio.Toolkit.NativeSettingsType.Int32">
            <summary>
            Data type used to store 4 byte (32 bits) properties which are Boolean and Int32. Note
            that Boolean is stored 1 byte in the .NET environment but as a property inside the SettingsStore,
            it is kept as 4 byte value and any value other than 0 is converted to true and 0 is converted to
            false.
            NOTE: In .NET we need to explicitly use the unsigned methods to successfully store unsigned types.
            This enumeration adds <see cref="F:Community.VisualStudio.Toolkit.NativeSettingsType.UInt32"/> for that purpose.
            </summary>
        </member>
        <member name="F:Community.VisualStudio.Toolkit.NativeSettingsType.Int64">
            <summary>
            Data type used to store 8 byte (64 bit) properties which are Int64.
            NOTE: In .NET we need to explicitly use the unsigned methods to successfully store unsigned types. 
            This enumeration adds <see cref="F:Community.VisualStudio.Toolkit.NativeSettingsType.UInt64"/> for that purpose.
            </summary>
        </member>
        <member name="F:Community.VisualStudio.Toolkit.NativeSettingsType.String">
            <summary>Data type used to store the strings.</summary>
        </member>
        <member name="F:Community.VisualStudio.Toolkit.NativeSettingsType.Binary">
            <summary>Data type used to store byte streams (arrays).</summary>
        </member>
        <member name="F:Community.VisualStudio.Toolkit.NativeSettingsType.UInt32">
            <summary>
            Data type used to store 4 byte (32 bits) properties which is UInt32.
            NOTE: This value is not in <see cref="T:Microsoft.VisualStudio.Settings.SettingsType"/>, but is necessary so we can use the 
            appropriate methods to successfully store unsigned types.
            </summary>
        </member>
        <member name="F:Community.VisualStudio.Toolkit.NativeSettingsType.UInt64">
            <summary>
            Data type used to store 8 byte (64 bit) properties which is UInt64.
            NOTE: This value is not in <see cref="T:Microsoft.VisualStudio.Settings.SettingsType"/>, but is necessary so we can use the 
            appropriate methods to successfully store unsigned types.
            </summary>
        </member>
        <member name="T:Community.VisualStudio.Toolkit.NativeSettingsTypeExtensions">
            <summary>   Extension methods for <see cref="T:Community.VisualStudio.Toolkit.NativeSettingsType"/>. </summary>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.NativeSettingsTypeExtensions.GetDotNetType(Community.VisualStudio.Toolkit.NativeSettingsType)">
            <summary>   Get the .NET <see cref="T:System.Type"/> based on the method signature for the <see cref="T:Microsoft.VisualStudio.Settings.SettingsStore"/>
                        necessary to retrieve and store data. </summary>
            <exception cref="T:System.ArgumentOutOfRangeException">  Thrown when one or more arguments are outside
                                                            the required range. </exception>
            <param name="nativeSettingsType">   The nativeSettingsType to act on. </param>
            <returns>   The .NET <see cref="T:System.Type"/>. Not Null. </returns>
        </member>
        <member name="T:Community.VisualStudio.Toolkit.OptionModelPropertyWrapper">
            <summary>   Wraps an instance property member with public getter and setters from a <see cref="T:Community.VisualStudio.Toolkit.BaseOptionModel`1"/>,
                        and exposes the ability to load and save the value of the property to the <see cref="T:Microsoft.VisualStudio.Settings.SettingsStore"/>.
            </summary>
            <remarks>
                        The instance of the <see cref="T:Community.VisualStudio.Toolkit.BaseOptionModel`1"/> provides the default collection path that is used 
                        to store the property values. Adding <see cref="T:Community.VisualStudio.Toolkit.OverrideCollectionNameAttribute"/> to the property will
                        override this only for the attributed property. This also will infer the proper data type to store 
                        the property value as for common types to avoid serialization. See remarks at
                        <see cref="M:Community.VisualStudio.Toolkit.OptionModelPropertyWrapper.ConvertPropertyTypeToStorageType``1(System.Object,Community.VisualStudio.Toolkit.BaseOptionModel{``0})"/> for specifics.
                        <para/> 
                        For types not supported by default, the overridable serialization methods in <see cref="T:Community.VisualStudio.Toolkit.BaseOptionModel`1"/> 
                        will be used, and the output of that will be stored. Alternatively, you can apply the <see cref="T:Community.VisualStudio.Toolkit.OverrideDataTypeAttribute"/>
                        specifying the storage type/methodology. By default, that will use <see cref="M:System.Convert.ChangeType(System.Object,System.Type,System.IFormatProvider)"/> 
                        with <see cref="P:System.Globalization.CultureInfo.InvariantCulture"/>, though that attribute can also include a flag to use the type's 
                        <see cref="T:System.ComponentModel.TypeConverterAttribute"/> instead.
                        <para/>
                        The implementation of this class uses reflection, only in the ctor, to create an open delegate that is used
                        to get and set the property values. This initial hit using reflection happens once, and subsequent load
                        and saves of the value are therefore as performant as possible. This is the technique used by
                        <a href="https://codeblog.jonskeet.uk/2008/08/09/making-reflection-fly-and-exploring-delegates/">Jon Skeet
                        in Google's Protocol Buffers</a>.
            </remarks>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.OptionModelPropertyWrapper.SettingStoreSetMethodsDict">
            <summary>   (Immutable) Dictionary of types, limited to the types available in <see cref="T:Microsoft.VisualStudio.Settings.SettingsStore"/>, to a
                        delegate with a signature of <c>WritableSettingsStore targetSettingsStore, string collectionPath,
                        string propertyPath, object value</c>. This is initialized in the static ctor. </summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.OptionModelPropertyWrapper.SettingStoreGetMethodsDict">
            <summary>   (Immutable) Dictionary of types, limited to the types available in <see cref="T:Microsoft.VisualStudio.Settings.SettingsStore"/>, to a 
                        delegate with a signature of <c>SettingsStore targetSettingsStore, string collectionPath,
                        string propertyPath</c>, which returns the value of the setting as an object. This is initialized 
                        in the static ctor. </summary>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.OptionModelPropertyWrapper.#cctor">
            <summary>   One-time static initialization of delegates to interact with the <see cref="T:Microsoft.VisualStudio.Settings.SettingsStore"/> and <see cref="T:Microsoft.VisualStudio.Settings.WritableSettingsStore"/>. </summary>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.OptionModelPropertyWrapper.CreateSettingsStoreSetMethod``1(System.Reflection.MethodInfo)">
            <summary>   Creates a <c>delegate</c> to the settings store that sets a value in the settings store. The delegate
                        exposes a common signature that intentionally makes the type to be set an <c>object</c> to simplify code. </summary>
            <typeparam name="T">    The actual type being stored in the <see cref="T:Microsoft.VisualStudio.Settings.WritableSettingsStore"/>. </typeparam>
            <param name="mi">   The method info of the typed set method for the <see cref="T:Microsoft.VisualStudio.Settings.WritableSettingsStore"/>. </param>
            <returns>   The delegate to set a value, as described above. </returns>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.OptionModelPropertyWrapper.CreateSettingsStoreGetMethod``1(System.Reflection.MethodInfo)">
            <summary>   Creates a <c>delegate</c> to the settings store that gets a value from the settings store. The delegate
                        exposes a common signature that intentionally makes the return type an <c>object</c> to simplify code. </summary>
            <typeparam name="T">    The actual type that is stored in the <see cref="T:Microsoft.VisualStudio.Settings.SettingsStore"/>. </typeparam>
            <param name="mi">   The method info of the typed get method for the <see cref="T:Microsoft.VisualStudio.Settings.SettingsStore"/>. </param>
            <returns>   The delegate to get a value, as described above. </returns>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.OptionModelPropertyWrapper.#ctor(System.Reflection.PropertyInfo)">
            <summary>   Initializes a new instance of the class. </summary>
            <param name="propertyInfo"> The property being wrapped. </param>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.OptionModelPropertyWrapper.CreateWrappedPropertyGetDelegate(System.Reflection.PropertyInfo)">
            <summary>   Creates a delegate that can get the value of a property with object signatures. This is
                        for both performance reasons and ease of implementation as types are not known until runtime. </summary>
            <param name="propertyInfo">   The property for which to create the delegate. </param>
            <returns>   A delegate as described above. </returns>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.OptionModelPropertyWrapper.PropertyGetHelper``2(System.Reflection.MethodInfo)">
            <summary>   Gets a delegate that ultimately will get value of a property. The real types are not known at compile-time,
                        so this is called via reflection. The returned delegate has the signature using objects, which at runtime 
                        are cast to the proper types. </summary>
            <typeparam name="TTarget">  Type for the target object on which the property get method will be called. </typeparam>
            <typeparam name="TReturn">  Type returned by the property get method. </typeparam>
            <param name="method">   The property get method. </param>
            <returns>   A delegate as described above. </returns>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.OptionModelPropertyWrapper.CreateWrappedPropertySetDelegate(System.Reflection.PropertyInfo)">
            <summary>   Creates a delegate that can set the value of a property with object signatures. This is
                        for both performance reasons and ease of implementation as types are not known until runtime. </summary>
            <param name="propertyInfo">   The property for which to create the delegate. </param>
            <returns>   A delegate as described above. </returns>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.OptionModelPropertyWrapper.PropertySetHelper``2(System.Reflection.MethodInfo)">
            <summary>   Gets a delegate that ultimately will set value of a property. The real types are not known at compile-time,
                        so this is called via reflection. The returned delegate has the signature using objects, which at runtime 
                        are cast to the proper types. </summary>
            <typeparam name="TTarget">  Type for the target object on which the property set method will be called. </typeparam>
            <typeparam name="TParam">  Type expected by the property set method. </typeparam>
            <param name="method">   The property set method. </param>
            <returns>   A delegate as described above. </returns>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.OptionModelPropertyWrapper.PropertyInfo">
            <summary>   (Immutable) The property being wrapped. </summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.OptionModelPropertyWrapper.DataType">
            <summary>   (Immutable) Either specified via <see cref="T:Community.VisualStudio.Toolkit.OverrideDataTypeAttribute"/> or inferred from the
                        <see cref="P:System.Reflection.PropertyInfo.PropertyType"/> of the wrapped property in the 
                        <see cref="M:Community.VisualStudio.Toolkit.OptionModelPropertyWrapper.InferDataType(System.Type)"/> method. This serves a dual purpose - it specifies how the 
                        wrapped value is converted to the storage type as well as the native type that is stored. </summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.OptionModelPropertyWrapper.SettingStoreSetMethod">
            <summary>   (Immutable) A delegate to the method to set a value in <see cref="T:Microsoft.VisualStudio.Settings.WritableSettingsStore"/>.
                        This delegate signature is <c>WritableSettingsStore settingsStore, string collectionPath, 
                        string propertyPath, object value</c>. </summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.OptionModelPropertyWrapper.SettingStoreGetMethod">
            <summary>   (Immutable) A delegate to the method to get a value from the <see cref="T:Microsoft.VisualStudio.Settings.SettingsStore"/>.
                        This delegate signature is <c>SettingsStore settingsStore, string collectionPath, 
                        string propertyPath</c> and returns the value stored as an object. </summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.OptionModelPropertyWrapper.WrappedPropertySetMethod">
            <summary>   (Immutable) A delegate to set the value of the wrapped property from the <see cref="T:Community.VisualStudio.Toolkit.BaseOptionModel`1"/> instance.
                        These are explicitly object types in the signature but must be of the proper types when they are called. The 
                        signature is <c>BaseOptionModel{T} targetObject, object value</c>, where the type of <c>value</c> must be  
                        assignable to the <see cref="P:System.Reflection.PropertyInfo.PropertyType"/> of the wrapped property. </summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.OptionModelPropertyWrapper.WrappedPropertyGetMethod">
            <summary>   (Immutable) A delegate to get the value of the wrapped property from the <see cref="T:Community.VisualStudio.Toolkit.BaseOptionModel`1"/> instance.
                        These are explicitly object types in the signature but must be of the proper types when they are called. The
                        signature is <c>BaseOptionModel{T} targetObject</c>, where the type that is returned will be the
                        <see cref="P:System.Reflection.PropertyInfo.PropertyType"/> of the wrapped property. </summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.OptionModelPropertyWrapper.OverrideCollectionName">
            <summary>   (Immutable) If not null the <c>CollectionPath</c> the value of this property should be loaded/saved to,
                        which is set via the optional <see cref="T:Community.VisualStudio.Toolkit.OverrideCollectionNameAttribute"/> on the property.
                        If null, the <see cref="P:Community.VisualStudio.Toolkit.BaseOptionModel`1.CollectionName"/> should be used instead. </summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.OptionModelPropertyWrapper.PropertyName">
            <summary>   (Immutable) The <c>PropertyName</c> in the <see cref="T:Microsoft.VisualStudio.Settings.SettingsStore"/> where the value of this property 
                        is stored. By default, this is the actual name of the property that this instance wraps. This can be 
                        overridden via the optional <see cref="T:Community.VisualStudio.Toolkit.OverridePropertyNameAttribute"/> on the property. </summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.OptionModelPropertyWrapper.NativeStorageType">
            <summary>   (Immutable) The data type the property will be stored as, which is limited to the types available
                        in <see cref="T:Microsoft.VisualStudio.Settings.SettingsStore"/>. Set via <see cref="M:Community.VisualStudio.Toolkit.OptionModelPropertyWrapper.GetNativeSettingsType(Community.VisualStudio.Toolkit.SettingDataType)"/>. See also the summary of 
                        <see cref="P:Community.VisualStudio.Toolkit.OptionModelPropertyWrapper.DataType"/>. </summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.OptionModelPropertyWrapper.TypeConverter">
            <summary>   (Immutable) If <see cref="T:Community.VisualStudio.Toolkit.OverrideDataTypeAttribute"/> is applied, and the <see cref="P:Community.VisualStudio.Toolkit.OptionModelPropertyWrapper.PropertyInfo"/> 
                        <c>PropertyType</c> has a <see cref="T:System.ComponentModel.TypeConverterAttribute"/> applied that is compatible with its 
                        declared storage data type, this <see cref="T:System.ComponentModel.TypeConverter"/> will be non-null and used to convert
                        the property value to and from the <see cref="T:Microsoft.VisualStudio.Settings.SettingsStore"/> <see cref="P:Community.VisualStudio.Toolkit.OptionModelPropertyWrapper.NativeStorageType"/>.</summary>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.OptionModelPropertyWrapper.LegacySerializeValue(System.Object)">
            <summary> Serialize using <see cref="T:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter"/>, then convert to a base64 string for storage. Returning an 
                      empty string represents a null object. </summary>
            <param name="value">        The object that is to be serialized. Can Be Null. </param>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.OptionModelPropertyWrapper.LegacyDeserializeValue(System.String,System.Type)">
            <summary> Convert base64 encoded string, then deserialize using <see cref="T:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter"/>. </summary>
            <param name="serializedString">        The base64 encoded string that was serialized by <see cref="T:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter"/>.
                                                   An empty string represents a null object.</param>
            <param name="conversionType">          The type to deserialize as.</param>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.OptionModelPropertyWrapper.Save``1(Community.VisualStudio.Toolkit.BaseOptionModel{``0},Microsoft.VisualStudio.Settings.WritableSettingsStore)">
            <summary>   The value of the wrapped property is retrieved by calling the property get method on <paramref name="baseOptionModel"/>.
                        This value is converted or serialized to a native type supported by the <paramref name="settingsStore"/>, 
                        then persisted to the store, assuring the collection exists first. No exceptions should be thrown from
                        this method. </summary>
            <typeparam name="TOptMdl">  Type of the base option model. </typeparam>
            <param name="baseOptionModel">  The base option model which is used as the target object from which the property 
                                            value will be retrieved. It also can be used for serialization of stored data.  </param>
            <param name="settingsStore">    The settings store to set the setting value in. </param>
            <returns>   True if we were able to persist the value in the store. However, if the serialization results in a null value,
                        it cannot be persisted in the settings store and false will be returned. False is also returned if any step 
                        of the process failed, and these are logged. </returns>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.OptionModelPropertyWrapper.Load``1(Community.VisualStudio.Toolkit.BaseOptionModel{``0},Microsoft.VisualStudio.Settings.SettingsStore)">
            <summary>   If the setting is found in the <paramref name="settingsStore"/>, retrieves the value of the setting, 
                        converts or deserializes it to the type of the wrapped property, and calls the property set method on 
                        the <paramref name="baseOptionModel"/>. No exceptions should be thrown from
                        this method. No changes to the property will be made if the setting does not exist. </summary>
            <typeparam name="TOptMdl">  Type of the base option model. </typeparam>
            <param name="baseOptionModel">  The base option model which is used as the target object on which the property 
                                            will be set. It also can be used for deserialization of stored data.  </param>
            <param name="settingsStore">    The settings store to retrieve the setting value from. </param>
            <returns>   True if the value exists in the <paramref name="settingsStore"/>, and the property was updated in
                        <paramref name="baseOptionModel"/>, false if setting does not exist or any step of the process 
                        failed. </returns>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.OptionModelPropertyWrapper.GetNativeSettingsType(Community.VisualStudio.Toolkit.SettingDataType)">
            <summary>   Gets the native data type that the property value will be stored as in the <see cref="T:Microsoft.VisualStudio.Settings.SettingsStore"/>. </summary>
            <param name="settingDataType">  The type/mechanism by which the value will be converted for storage. </param>
            <returns>   The native data type that the property value will be stored as in the <see cref="T:Microsoft.VisualStudio.Settings.SettingsStore"/>. </returns>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.OptionModelPropertyWrapper.InferDataType(System.Type)">
            <summary>   Infers the underlying type (or mechanism for unknown types) by which we will set the native data type. See remarks at 
            <see cref="M:Community.VisualStudio.Toolkit.OptionModelPropertyWrapper.ConvertPropertyTypeToStorageType``1(System.Object,Community.VisualStudio.Toolkit.BaseOptionModel{``0})"/> </summary>
            <param name="propertyType">   The type of the property being wrapped. </param>
            <returns>   A SettingDataType. </returns>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.OptionModelPropertyWrapper.ConvertPropertyTypeToStorageType``1(System.Object,Community.VisualStudio.Toolkit.BaseOptionModel{``0})">
            <summary>   Convert the <paramref name="propertyValue"/> retrieved from the property to the type it will be stored as in the
                        <see cref="T:Microsoft.VisualStudio.Settings.SettingsStore"/>. </summary>
            <typeparam name="TOptMdl">  Type of <see cref="T:Community.VisualStudio.Toolkit.BaseOptionModel`1"/>. </typeparam>
            <param name="propertyValue">        The value retrieved from the wrapped property, as an object. </param>
            <param name="baseOptionModel">      Instance of <see cref="T:Community.VisualStudio.Toolkit.BaseOptionModel`1"/>. For types requiring serialization, methods in this object are used. </param>
            <returns>   <paramref name="propertyValue"/>, converted to one of the types supported by <see cref="T:Microsoft.VisualStudio.Settings.SettingsStore"/>. </returns>
            <remarks>
            The methods <see cref="M:Community.VisualStudio.Toolkit.OptionModelPropertyWrapper.ConvertPropertyTypeToStorageType``1(System.Object,Community.VisualStudio.Toolkit.BaseOptionModel{``0})" />, <see cref="M:Community.VisualStudio.Toolkit.OptionModelPropertyWrapper.ConvertStorageTypeToPropertyType``1(System.Object,Community.VisualStudio.Toolkit.BaseOptionModel{``0})" />, and <see cref="M:Community.VisualStudio.Toolkit.OptionModelPropertyWrapper.InferDataType(System.Type)"/> are designed to
            work in tandem, and are therefore tightly coupled. The <see cref="T:Microsoft.VisualStudio.Settings.SettingsStore"/> cannot store null values, therefore any property that is converted 
            to a reference type cannot round-trip successfully if that conversion yields <see cref="T:System.String"/>, <see cref="T:System.IO.MemoryStream"/>, and arrays of 
            <see cref="T:System.Byte"/> - in these cases the equivalent of <c>empty</c> is stored, therefore when loaded the result will not match.
            <para />
            The method <see cref="M:Community.VisualStudio.Toolkit.OptionModelPropertyWrapper.InferDataType(System.Type)"/> returns an enumeration that identifies both the native storage type, and method of conversion, that 
            will be used when storing the property value. These defaults can be overridden via the <see cref="T:Community.VisualStudio.Toolkit.OverrideDataTypeAttribute"/>.
            <para />
            The method <see cref="M:Community.VisualStudio.Toolkit.OptionModelPropertyWrapper.ConvertPropertyTypeToStorageType``1(System.Object,Community.VisualStudio.Toolkit.BaseOptionModel{``0})" /> is provided the current value of the property. It's job is to convert this value to
            the native storage type based on <see cref="P:Community.VisualStudio.Toolkit.OptionModelPropertyWrapper.DataType"/> which is set via <see cref="M:Community.VisualStudio.Toolkit.OptionModelPropertyWrapper.InferDataType(System.Type)"/>.
            <para />
            The method <see cref="M:Community.VisualStudio.Toolkit.OptionModelPropertyWrapper.ConvertStorageTypeToPropertyType``1(System.Object,Community.VisualStudio.Toolkit.BaseOptionModel{``0})" /> is the reverse of the above. Given an instance of the native storage type,
            it's job is to convert it to an instance the property type.
            <para />
            The conversions between types in the default implementation follows this:
            <list type="bullet">
             <item> <description>A property with a setting data type of <see cref="F:Community.VisualStudio.Toolkit.SettingDataType.Legacy"/> uses <see cref="T:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter"/> and stores it as a base64 encoded string. <see langword="null"/> values are stored as an empty string. </description></item>
             <item> <description>Array of <see cref="T:System.Byte"/> is wrapped in a <see cref="T:System.IO.MemoryStream"/>. <see langword="null"/> values are converted to an empty <see cref="T:System.IO.MemoryStream"/>.</description></item>
             <item> <description><see cref="T:System.Drawing.Color"/>, with setting data type <see cref="F:Community.VisualStudio.Toolkit.SettingDataType.Int32"/> uses To[From]Argb to store it as an Int32.</description></item>
             <item> <description><see cref="T:System.Guid"/>, with setting data type <see cref="F:Community.VisualStudio.Toolkit.SettingDataType.String"/> uses <see cref="M:System.Guid.ToString"/> and <see cref="M:System.Guid.Parse(System.String)"/> to convert to and from a string.</description></item>
             <item> <description><see cref="T:System.DateTime"/>, with setting data type <see cref="F:Community.VisualStudio.Toolkit.SettingDataType.Int64"/> uses To[From]Binary to store it as an Int64.</description></item>
             <item> <description><see cref="T:System.DateTimeOffset"/>, with setting data type <see cref="F:Community.VisualStudio.Toolkit.SettingDataType.String"/> uses the round-trip 'o' specifier to store as a string.</description></item>
             <item> <description><see cref="T:System.Single"/> and <see cref="T:System.Double"/>, with setting data type <see cref="F:Community.VisualStudio.Toolkit.SettingDataType.String"/> uses the round-trip 'G9' and 'G17' specifier to store as a string, and is parsed via the standard Convert method.</description></item>
             <item> <description><see cref="T:System.String"/>, if null, is stored as an empty string.</description></item>
             <item> <description>Enumerations are converted to/from their underlying type.</description></item>
             <item> <description><a href="https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/builtin-types/integral-numeric-types">Integral numeric types</a>,
                                 <see cref="T:System.Single"/>, <see cref="T:System.Double"/>, <see cref="T:System.Decimal"/>, and <see cref="T:System.Char"/>
                                 use <see cref="M:System.Convert.ChangeType(System.Object,System.Type,System.IFormatProvider)" />, using <see cref="P:System.Globalization.CultureInfo.InvariantCulture"/>. Enumerations are
                                 stored as their underlying integral numeric type.</description></item>
             <item> <description>Any type not described above, or a property with a setting data type of <see cref="F:Community.VisualStudio.Toolkit.SettingDataType.Serialized"/>
                                 uses <see cref="M:Community.VisualStudio.Toolkit.BaseOptionModel`1.SerializeValue(System.Object,System.Type,System.String)"/> and <see cref="M:Community.VisualStudio.Toolkit.BaseOptionModel`1.DeserializeValue(System.String,System.Type,System.String)"/> and stores it as binary,
                                 refer to those overridable methods for details.</description></item>
            </list>
            </remarks>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.OptionModelPropertyWrapper.ConvertStorageTypeToPropertyType``1(System.Object,Community.VisualStudio.Toolkit.BaseOptionModel{``0})">
            <summary>   Convert the <paramref name="settingsStoreValue"/> retrieved from the settings store to the type of the
            property we are wrapping. See remarks at <see cref="M:Community.VisualStudio.Toolkit.OptionModelPropertyWrapper.ConvertPropertyTypeToStorageType``1(System.Object,Community.VisualStudio.Toolkit.BaseOptionModel{``0})"/></summary>
            <typeparam name="TOptMdl">  Type of <see cref="T:Community.VisualStudio.Toolkit.BaseOptionModel`1"/>. </typeparam>
            <param name="settingsStoreValue">                The value retrieved from the settings store, as an object. This will not be null. </param>
            <param name="baseOptionModel">      Instance of <see cref="T:Community.VisualStudio.Toolkit.BaseOptionModel`1"/>. For types requiring deserialization, methods in this object are used. </param>
            <returns>   <paramref name="settingsStoreValue"/>, converted to the property type. </returns>
        </member>
        <member name="T:Community.VisualStudio.Toolkit.OverrideCollectionNameAttribute">
            <summary>   Apply this attribute on an individual get/set property in your <see cref="T:Community.VisualStudio.Toolkit.BaseOptionModel`1"/> 
                        derived class to use a specific <c>CollectionName</c> to store a given property in the 
                        <see cref="T:Microsoft.VisualStudio.Settings.SettingsStore"/> rather than using the <see cref="P:Community.VisualStudio.Toolkit.BaseOptionModel`1.CollectionName"/>.
            </summary>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.OverrideCollectionNameAttribute.#ctor(System.String)">
            <summary>   Specifies the <c>CollectionName</c> in the <see cref="T:Microsoft.VisualStudio.Settings.SettingsStore"/> where
                        this setting is stored rather than using the default. </summary>
            <param name="collectionName">   This value is used as the <c>collectionPath</c> parameter when reading 
                                            and writing using the <see cref="T:Microsoft.VisualStudio.Settings.SettingsStore"/>.  </param>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.OverrideCollectionNameAttribute.CollectionName">
            <summary>   This value is used as the <c>collectionPath</c> parameter when reading
                        and writing using the <see cref="T:Microsoft.VisualStudio.Settings.SettingsStore"/>.  </summary>
        </member>
        <member name="T:Community.VisualStudio.Toolkit.OverrideDataTypeAttribute">
            <summary>   Apply this attribute on a get/set property in the <see cref="T:Community.VisualStudio.Toolkit.BaseOptionModel`1"/> class to 
                        specify the type and mechanism used to store/retrieve the value of this property in the
                        <see cref="T:Microsoft.VisualStudio.Settings.SettingsStore"/>. If not specified, the default mechanism is used is based on the 
                        property type. </summary>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.OverrideDataTypeAttribute.#ctor(Community.VisualStudio.Toolkit.SettingDataType,System.Boolean)">
            <summary>   Alters the default type and mechanism used to store/retrieve the value of this
                        property in the <see cref="T:Microsoft.VisualStudio.Settings.SettingsStore"/>. </summary>
            <param name="settingDataType">  Specifies the type and/or method used to store and retrieve
                                            the value of the attributed property in the
                                            <see cref="T:Microsoft.VisualStudio.Settings.SettingsStore"/>. </param>
            <param name="useTypeConverter"> (Optional, default <see langword="false"/>) If <see langword="true"/>, 
                                            and the type has a <see cref="T:System.ComponentModel.TypeConverterAttribute"/>
                                            that allows for conversion to <paramref name="settingDataType"/>, this
                                            will be used to convert and store the property value. If the 
                                            <paramref name="settingDataType"/> is <c>Legacy</c> or <c>Serialized</c>
                                            this has no effect. For other <see cref="P:Community.VisualStudio.Toolkit.OverrideDataTypeAttribute.SettingDataType"/> values, 
                                            <see langword="false"/> will use the default conversion mechanism of
                                            <see cref="M:System.Convert.ChangeType(System.Object,System.Type,System.IFormatProvider)" />, using
                                            <see cref="P:System.Globalization.CultureInfo.InvariantCulture"/>. </param>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.OverrideDataTypeAttribute.SettingDataType">
            <summary>   Specifies the type and method used to store and retrieve the value of the attributed
                        property in the <see cref="T:Microsoft.VisualStudio.Settings.SettingsStore"/>.</summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.OverrideDataTypeAttribute.UseTypeConverter">
            <summary>   If <see langword="true"/>, and the type has a <see cref="T:System.ComponentModel.TypeConverterAttribute"/>
             that allows for conversion to <see cref="P:Community.VisualStudio.Toolkit.OverrideDataTypeAttribute.SettingDataType"/>, this will be used to convert and store the property value. 
             If the <see cref="P:Community.VisualStudio.Toolkit.OverrideDataTypeAttribute.SettingDataType"/> is <c>Legacy</c> or <c>Serialized</c> this has no effect. For other 
             <see cref="P:Community.VisualStudio.Toolkit.OverrideDataTypeAttribute.SettingDataType"/>, <see langword="false"/> will use the default conversion mechanism of 
             <see cref="M:System.Convert.ChangeType(System.Object,System.Type,System.IFormatProvider)" />, using 
             <see cref="P:System.Globalization.CultureInfo.InvariantCulture"/>. </summary>
        </member>
        <member name="T:Community.VisualStudio.Toolkit.OverridePropertyNameAttribute">
            <summary>   Apply this attribute on an individual public get/set property in your <see cref="T:Community.VisualStudio.Toolkit.BaseOptionModel`1"/> 
                        derived class to use a specific <c>propertyName</c> to store a given property in the
                        <see cref="T:Microsoft.VisualStudio.Settings.SettingsStore"/> rather than using the name of the property.
            </summary>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.OverridePropertyNameAttribute.#ctor(System.String)">
            <summary>   Specifies the <c>propertyName</c> in the <see cref="T:Microsoft.VisualStudio.Settings.SettingsStore"/> where
                        this setting is stored rather than using the default, which is the name of 
                        the property. </summary>
            <param name="propertyName">   This value is used as the <c>propertyName</c> parameter when reading
                                            and writing to the <see cref="T:Microsoft.VisualStudio.Settings.SettingsStore"/>.  </param>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.OverridePropertyNameAttribute.PropertyName">
            <summary>   This value is used as the <c>propertyName</c> parameter when reading
                        and writing to the <see cref="T:Microsoft.VisualStudio.Settings.SettingsStore"/>.  </summary>
        </member>
        <member name="T:Community.VisualStudio.Toolkit.SettingDataType">
            <summary>   Enumeration that specifies both the underlying type that is to be stored/retrieved from the
                        <see cref="T:Microsoft.VisualStudio.Settings.SettingsStore"/> and method of type conversion.  </summary>
        </member>
        <member name="F:Community.VisualStudio.Toolkit.SettingDataType.String">
            <summary>   Value of the property is persisted in the <see cref="T:Microsoft.VisualStudio.Settings.SettingsStore"/> as a <see cref="T:System.String"/>.
            <see langword="null"/> strings are converted to an empty string, therefore will not round-trip.
            Type conversions, if needed, are performed via <see cref="M:System.Convert.ChangeType(System.Object,System.Type,System.IFormatProvider)" />, 
            using <see cref="P:System.Globalization.CultureInfo.InvariantCulture"/>. Types such as <see cref="T:System.Single"/>, <see cref="T:System.Double"/>, 
            <see cref="T:System.Decimal"/>, and <see cref="T:System.Char"/> are stored this way. </summary>
        </member>
        <member name="F:Community.VisualStudio.Toolkit.SettingDataType.Int32">
            <summary>   Value of the property is persisted in the <see cref="T:Microsoft.VisualStudio.Settings.SettingsStore"/> as an <see cref="T:System.Int32"/>.
            Type conversions, if needed, are performed via <see cref="M:System.Convert.ChangeType(System.Object,System.Type,System.IFormatProvider)" />,
            using <see cref="P:System.Globalization.CultureInfo.InvariantCulture"/>. <see cref="T:System.Drawing.Color"/> is converted using To[From]Argb. </summary>
        </member>
        <member name="F:Community.VisualStudio.Toolkit.SettingDataType.UInt32">
            <summary>   Value of the property is persisted in the <see cref="T:Microsoft.VisualStudio.Settings.SettingsStore"/> as an <see cref="T:System.UInt32"/>.
            Type conversions, if needed, are performed via <see cref="M:System.Convert.ChangeType(System.Object,System.Type,System.IFormatProvider)" />,
            using <see cref="P:System.Globalization.CultureInfo.InvariantCulture"/>. </summary>
        </member>
        <member name="F:Community.VisualStudio.Toolkit.SettingDataType.Int64">
            <summary>   Value of the property is persisted in the <see cref="T:Microsoft.VisualStudio.Settings.SettingsStore"/> as an <see cref="T:System.Int64"/>.
            Type conversions, if needed, are performed via <see cref="M:System.Convert.ChangeType(System.Object,System.Type,System.IFormatProvider)" />,
            using <see cref="P:System.Globalization.CultureInfo.InvariantCulture"/>. <see cref="T:System.DateTime"/> is converted via To[From]Binary, and 
            <see cref="T:System.DateTimeOffset"/> is converted via To[From]UnixTimeMilliseconds. </summary>
        </member>
        <member name="F:Community.VisualStudio.Toolkit.SettingDataType.UInt64">
            <summary>   Value of the property is persisted in the <see cref="T:Microsoft.VisualStudio.Settings.SettingsStore"/> as an <see cref="T:System.UInt64"/>.
            Type conversions, if needed, are performed via <see cref="M:System.Convert.ChangeType(System.Object,System.Type,System.IFormatProvider)" />,
            using <see cref="P:System.Globalization.CultureInfo.InvariantCulture"/>. </summary>
        </member>
        <member name="F:Community.VisualStudio.Toolkit.SettingDataType.Binary">
            <summary>   Value of the property is persisted in the <see cref="T:Microsoft.VisualStudio.Settings.SettingsStore"/> as a <see cref="T:System.IO.MemoryStream"/>.
            Array of <see cref="T:System.Byte"/> is wrapped in a <see cref="T:System.IO.MemoryStream"/>. <see langword="null"/> values are converted 
            to an empty <see cref="T:System.IO.MemoryStream"/>, therefore will not round-trip. </summary>
        </member>
        <member name="F:Community.VisualStudio.Toolkit.SettingDataType.Legacy">
            <summary>   Value of the property is persisted in the <see cref="T:Microsoft.VisualStudio.Settings.SettingsStore"/> as a <see cref="T:System.String"/>.
            Conversion uses <see cref="T:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter"/>, with the bytes converted
            to/from a Base64 encoded string, the string value is what is stored. <see langword="null"/> values are stored 
            as an empty string. </summary>
        </member>
        <member name="F:Community.VisualStudio.Toolkit.SettingDataType.Serialized">
            <summary>   Value of the property is persisted in the <see cref="T:Microsoft.VisualStudio.Settings.SettingsStore"/> as a <see cref="T:System.String"/>.
            The methods <see cref="M:Community.VisualStudio.Toolkit.BaseOptionModel`1.SerializeValue(System.Object,System.Type,System.String)"/> and <see cref="M:Community.VisualStudio.Toolkit.BaseOptionModel`1.DeserializeValue(System.String,System.Type,System.String)"/> are
            used to convert to and from storage. </summary>
        </member>
        <member name="T:Community.VisualStudio.Toolkit.Settings">
            <summary>A collection of services related to settings.</summary>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.Settings.OpenAsync``1">
            <summary>
            Opens the Tools -> Options dialog to the specified page.
            </summary>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.Settings.OpenAsync(System.Type)">
            <summary>
            Opens the Tools -> Options dialog to the specified page.
            </summary>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.Settings.OpenAsync(System.Guid)">
            <summary>
            Opens the Tools -> Options dialog to the specified page.
            </summary>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.Settings.OpenAsync(System.String)">
            <summary>
            Opens the Tools -> Options dialog to the specified page.
            </summary>
        </member>
        <member name="T:Community.VisualStudio.Toolkit.ProjectItemsEvents">
            <summary>
            Events related to project items.
            </summary>
        </member>
        <member name="E:Community.VisualStudio.Toolkit.ProjectItemsEvents.AfterRenameProjectItems">
            <summary>
            Fires after project items was renamed
            </summary>
        </member>
        <member name="E:Community.VisualStudio.Toolkit.ProjectItemsEvents.AfterRemoveProjectItems">
            <summary>
            Fires after project items was removed
            </summary>
        </member>
        <member name="E:Community.VisualStudio.Toolkit.ProjectItemsEvents.AfterAddProjectItems">
            <summary>
            Fires after project items was added
            </summary>
        </member>
        <member name="T:Community.VisualStudio.Toolkit.AfterRenameProjectItemEventArgs">
            <inheritdoc/>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.AfterRenameProjectItemEventArgs.#ctor(Community.VisualStudio.Toolkit.ProjectItemRenameDetails[])">
            <summary>
            Creates an instance of the event args
            </summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.AfterRenameProjectItemEventArgs.ProjectItemRenames">
            <summary>
            ProjectItem details that was renamed
            </summary>
        </member>
        <member name="T:Community.VisualStudio.Toolkit.ProjectItemRenameDetails">
            <summary>
            ProjectItem rename details 
            </summary>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.ProjectItemRenameDetails.#ctor(Community.VisualStudio.Toolkit.SolutionItem,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Community.VisualStudio.Toolkit.ProjectItemRenameDetails"/> class.
            </summary>
            <param name="solutionItem">The solution item that was renamed.</param>
            <param name="oldName">The old name of the solution item.</param>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.ProjectItemRenameDetails.SolutionItem">
            <summary>
            The rename solution item
            </summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.ProjectItemRenameDetails.OldName">
            <summary>
            The name before the rename
            </summary>
        </member>
        <member name="T:Community.VisualStudio.Toolkit.AfterRemoveProjectItemEventArgs">
            <inheritdoc/>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.AfterRemoveProjectItemEventArgs.#ctor(Community.VisualStudio.Toolkit.ProjectItemRemoveDetails[])">
            <summary>
            Creates an instance of the event args
            </summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.AfterRemoveProjectItemEventArgs.ProjectItemRemoves">
            <summary>
            ProjectItem details that was removed
            </summary>
        </member>
        <member name="T:Community.VisualStudio.Toolkit.ProjectItemRemoveDetails">
            <summary>
            Removed ProjectItem details
            </summary>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.ProjectItemRemoveDetails.#ctor(Community.VisualStudio.Toolkit.Project,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Community.VisualStudio.Toolkit.ProjectItemRemoveDetails"/> class.
            </summary>
            <param name="project">The project that the item was removed from.</param>
            <param name="itemName">The name of the item that was removed.</param>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.ProjectItemRemoveDetails.Project">
            <summary>
            The project that removed the item
            </summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.ProjectItemRemoveDetails.RemovedItemName">
            <summary>
            The item name that was removed
            </summary>
        </member>
        <member name="T:Community.VisualStudio.Toolkit.AssemblyReference">
            <summary>
            Represents an assembly reference in a project.
            </summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.AssemblyReference.FullPath">
            <summary>
            Gets the full path to the assembly file.
            </summary>
        </member>
        <member name="T:Community.VisualStudio.Toolkit.ProjectReference">
            <summary>
            Represents a project reference in a project.
            </summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.ProjectReference.Name">
            <inheritdoc/>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.ProjectReference.GetProjectAsync">
            <summary>
            Gets the project that the reference is to.
            </summary>
            <returns>The project if it exists; otherwise, <see langword="null"/>.</returns>
        </member>
        <member name="T:Community.VisualStudio.Toolkit.Reference">
            <summary>
            Represents a reference in a project.
            </summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.Reference.VsReference">
            <summary>
            Gets the underlying <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsReference"/> object.
            </summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.Reference.Name">
            <summary>
            Gets the name of the reference.
            </summary>
        </member>
        <member name="T:Community.VisualStudio.Toolkit.ReferenceCollection">
            <summary>
            Provides access to references in a project.
            </summary>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.ReferenceCollection.AddAsync(System.String[])">
            <summary>
            Adds references to one or more assembly files.
            </summary>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.ReferenceCollection.AddAsync(Community.VisualStudio.Toolkit.Project[])">
            <summary>
            Adds references to one or more projects.
            </summary>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.ReferenceCollection.RemoveAsync(Community.VisualStudio.Toolkit.Reference[])">
            <summary>
            Removes the given references from the project.
            </summary>
            <param name="references">The references to remove.</param>
            <returns>A task.</returns>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.ReferenceCollection.GetEnumerator">
            <inheritdoc/>
        </member>
        <member name="T:Community.VisualStudio.Toolkit.Selection">
            <summary>
            Services related to the selection of windows and items in solution.
            </summary>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.Selection.SetUIContextAsync(System.String,System.Boolean)">
            <summary>
            Sets the current UI context.
            </summary>
            <param name="uiContextGuid">The GUID to uniquely identify the UI context.</param>
            <param name="isActive">Determines if the UI context is active or not.</param>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.Selection.SetUIContextAsync(System.Guid,System.Boolean)">
            <summary>
            Sets the current UI context.
            </summary>
            <param name="uiContextGuid">The GUID to uniquely identify the UI context.</param>
            <param name="isActive">Determines if the UI context is active or not.</param>
        </member>
        <member name="T:Community.VisualStudio.Toolkit.SelectionEvents">
            <summary>
            Events related to the selection in Visual Studio.
            </summary>
        </member>
        <member name="E:Community.VisualStudio.Toolkit.SelectionEvents.SelectionChanged">
            <summary>
            Fires when the selection changes
            </summary>
        </member>
        <member name="E:Community.VisualStudio.Toolkit.SelectionEvents.UIContextChanged">
            <summary>
            Fires when the UI context changes.
            </summary>
        </member>
        <member name="T:Community.VisualStudio.Toolkit.SelectionChangedEventArgs">
            <summary>
            EventArgs for when the selection changes in Visual Studio
            </summary>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.SelectionChangedEventArgs.#ctor(Community.VisualStudio.Toolkit.SolutionItem,Community.VisualStudio.Toolkit.SolutionItem)">
            <summary>
            Creates a new instance of the EventArgs.
            </summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.SelectionChangedEventArgs.From">
            <summary>
            What the selection was before the change.
            </summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.SelectionChangedEventArgs.To">
            <summary>
            What the selection is currently after the change.
            </summary>
        </member>
        <member name="T:Community.VisualStudio.Toolkit.Services">
            <summary>
            A collection of services commonly used by extensions.
            </summary>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.Services.GetFindSymbolAsync">
            <summary>
            Performs a search for a specified object. The environment implements the interface
            </summary>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.Services.GetFilterKeysAsync">
            <summary>
            Controls the binding between keys and commands
            </summary>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.Services.GetMonitorSelectionAsync">
            <summary>
            Provides access to the selection API.
            </summary>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.Services.GetMonitorUserContextAsync">
            <summary>
            Creates a new context or subcontext bag
            </summary>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.Services.GetObjectManagerAsync">
            <summary>
            This interface is used by a package to register and un-register its library manager with the object manager
            </summary>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.Services.GetObjectManager2Async">
            <summary>
            Used by a VSPackage to register and unregister the symbol libraries with the Visual Studio object manager and create component sets that can be browsed
            </summary>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.Services.GetSolutionAsync">
            <summary>
            Provides top-level manipulation or maintenance of the solution.
            </summary>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.Services.GetOpenProjectOrSolutionDlgAsync">
            <summary>
            Opens a Solution or Project using the standard open dialog boxes.
            </summary>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.Services.GetSolutionHierarchyAsync">
            <summary>
            Gives access to the solution hierarchy and properties
            </summary>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.Services.GetSolutionPersistenceAsync">
            <summary>
            Gives access to the solution and properties persistence
            </summary>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.Services.GetShellAsync">
            <summary>Provides access to the fundamental environment services, specifically those dealing with VSPackages and the registry.</summary>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.Services.GetShell5Async">
            <summary>Provides access to extra VSPackage functionality</summary>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.Services.GetUIShellAsync">
            <summary>This interface provides access to basic windowing functionality, including access to and creation of tool windows and document windows.</summary>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.Services.GetUIShell4Async">
            <summary>This interface provides access to additional toolbar methods</summary>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.Services.GetUIShell5Async">
            <summary>This interface provides access to additional theme methods and some other stuff</summary>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.Services.GetAppCommandLineAsync">
            <summary>This interface is used by a package to read command-line switches entered by the user.</summary>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.Services.GetImageServiceAsync">
            <summary>
            Registers well-known images (such as icons) for Visual Studio.<br/>
            Cast the result to <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsImageService2"/>.
            </summary>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.Services.GetFontAndColorCacheManagerAsync">
            <summary>Controls the caching of font and color settings.</summary>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.Services.GetFontAndColorStorageAsync">
            <summary>Allows a VSPackage to retrieve or save font and color data to the registry.</summary>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.Services.GetMRUItemsStoreAsync">
            <summary>
            Controls the most recently used (MRU) items collection.<br/>
            Cast the result to <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsMRUItemsStore"/>.
            </summary>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.Services.GetComponentModelAsync">
            <summary>Used to retrieved services defined in the MEF catalog, such as the editor specific services like <see cref="T:Microsoft.VisualStudio.Editor.IVsEditorAdaptersFactoryService"/>.</summary>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.Services.GetComponentManagerAsync">
            <summary>Defines a component manager, a component that coordinates other components with its message loop for message processing and allocation of idle time</summary>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.Services.GetRunningDocumentTableAsync">
            <summary>
            Manages the set of currently open documents in the environment
            </summary>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.Services.GetResourceManagerAsync">
            <summary>
            Loads managed and unmanaged resources from Satellite DLLs.
            </summary>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.Services.GetShellOpenDocumentAsync">
            <summary>
            Controls the state of open documents within the environment
            </summary>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.Services.GetShellOpenDocument3Async">
            <summary>
            Gives access to preview and viewing status
            </summary>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.Services.GetTaskSchedulerAsync">
            <summary>Gives access to the task scheduler</summary>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.Services.GetLongIdleManagerAsync">
            <summary>Gives access to long idle events</summary>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.Services.GetStatusBarAsync">
            <summary>Provides access to the environment's status bar.</summary>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.Services.GetInfoBarUIFactoryAsync">
            <summary>
            The <see cref="T:Community.VisualStudio.Toolkit.InfoBar"/> is often referred to as the 'yellow' or 'gold' bar.<br/>
            Cast the result to <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsInfoBarUIFactory"/>.
            </summary>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.Services.GetThreadedWaitDialogAsync">
            <summary>
            Used for background tasks that needs to block the UI if they take longer than the specified seconds.<br/>
            Cast the result to <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsThreadedWaitDialogFactory"/>.
            </summary>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.Services.GetActivityLogAsync">
            <summary>Used to write log messaged to the ActivityLog.xml file.</summary>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.Services.GetDebuggerAsync">
            <summary>Provides access to the current debugger so that the package can listen for debugger events.</summary>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.Services.GetDebuggableProtocolAsync">
            <summary>Allows clients to add to the debuggable protocol list.`</summary>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.Services.GetCommandServiceAsync">
            <summary>Provides methods to manage the global designer verbs and menu commands available in design mode, and to show some types of shortcut menus.</summary>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.Services.GetPriorityCommandTargetAsync">
            <summary>Used to register and unregister a command target as a high priority command handler.</summary>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.Services.GetCommandNameMappingAsync">
            <summary>Maps command names and GUIDs. Enables you to determine all commands and names.</summary>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.Services.GetSolutionBuildManagerAsync">
            <summary>
            A service for handling solution builds.
            </summary>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.Services.GetErrorListAsync">
            <summary>
            Gets the error list 
            </summary>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.Services.GetCallBrowserAsync">
            <summary>Manipulates the Call Browser for debugging.</summary>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.Services.GetClassViewAsync">
            <summary>Allows navigation to an object in Class View.</summary>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.Services.GetCommandWindowAsync">
            <summary>Enables the package to use the Command Window.</summary>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.Services.GetObjectBrowserAsync">
            <summary>Implemented by the environment. Used by VsPackages that want to manipulate Object Browser.</summary>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.Services.GetOutputWindowAsync">
            <summary>Manages and controls functions specific to the Output tool window that has multiple panes.</summary>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.Services.GetTaskListAsync">
            <summary>Manages lists of task items supplied by task providers.</summary>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.Services.GetToolboxAsync">
            <summary>Used to manage the Toolbox.</summary>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.Services.GetSettingsManagerAsync">
            <summary>Provides access to the settings manager.<br/>
            Cast the result to <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsSettingsManager"/>.
            </summary>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.Services.GetToolsOptionsAsync">
            <summary>Manages a Tools Options dialog box. The environment implements this interface.</summary>
        </member>
        <member name="T:Community.VisualStudio.Toolkit.Shell">
            <summary>A collection of services related to the command system.</summary>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.Shell.GetVsVersionAsync">
            <summary>
            Gets the version of Visual Studio.
            </summary>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.Shell.TryGetCommandLineArgumentAsync(System.String)">
            <summary>
            Get the value passed in to the specified command line argument key.
            </summary>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.Shell.RestartAsync(System.Boolean)">
            <summary>
            Restarts the IDE. 
            </summary>
            <param name="forceElevated">Forces the IDE to start back up elevated. 
            If <see langword="false"/>, it restarts in the same mode it is currently running in.
            </param>
        </member>
        <member name="T:Community.VisualStudio.Toolkit.ShellEvents">
            <summary>
            Events related to the Visual Studio Shell.
            </summary>
        </member>
        <member name="E:Community.VisualStudio.Toolkit.ShellEvents.ShellAvailable">
            <summary>
            When Visual Studio enters into an interactive state.
            </summary>
        </member>
        <member name="E:Community.VisualStudio.Toolkit.ShellEvents.ShutdownStarted">
            <summary>
            When Visual Studio starts to shutdown
            </summary>
        </member>
        <member name="E:Community.VisualStudio.Toolkit.ShellEvents.MainWindowVisibilityChanged">
            <summary>
            When Visual Studio starts to shutdown
            </summary>
        </member>
        <member name="E:Community.VisualStudio.Toolkit.ShellEvents.EnvironmentColorChanged">
            <summary>
            When Visual Studio enters into an interactive state.
            </summary>
        </member>
        <member name="T:Community.VisualStudio.Toolkit.PhysicalFile">
            <summary>
            Represents a physical file in the solution hierarchy.
            </summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.PhysicalFile.Folder">
            <summary>
            The containing folder of the file.
            </summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.PhysicalFile.Extension">
            <summary>
            The file extension starting with a dot.
            </summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.PhysicalFile.ContainingProject">
            <summary>
            The project containing this file, or <see langword="null"/>.
            </summary>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.PhysicalFile.OpenAsync">
            <summary>
            Opens the item in the editor window.
            </summary>
            <returns><see langword="null"/> if the item was not successfully opened.</returns>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.PhysicalFile.TryRemoveAsync">
            <summary>
            Tries to remove the file from the project or solution folder.
            </summary>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.PhysicalFile.AddNestedFileAsync(Community.VisualStudio.Toolkit.PhysicalFile)">
            <summary>
            Nests a file under this file by setting its <c>DependentUpon</c> property..
            </summary>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.PhysicalFile.TrySetAttributeAsync(Community.VisualStudio.Toolkit.PhysicalFileAttribute,System.Object)">
            <summary>
            Tries to set an attribute in the project file for the item.
            </summary>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.PhysicalFile.TrySetAttributeAsync(System.String,System.Object)">
            <summary>
            Tries to set an attribute in the project file for the item.
            </summary>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.PhysicalFile.GetAttributeAsync(System.String)">
            <summary>
            Tries to retrieve an attribute value from the project file for the item.
            </summary>
            <returns><see langword="null"/> if the attribute doesn't exist.</returns>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.PhysicalFile.FromFileAsync(System.String)">
            <summary>
            Finds the item in the solution matching the specified file path.
            </summary>
            <param name="filePath">The absolute file path of a file that exists in the solution.</param>
            <returns><see langword="null"/> if the file wasn't found in the solution.</returns>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.PhysicalFile.FromFilesAsync(System.String[])">
            <summary>
            Finds the item in the solution matching the specified file path.
            </summary>
            <param name="filePaths">The absolute file paths of files that exist in the solution.</param>
        </member>
        <member name="T:Community.VisualStudio.Toolkit.PhysicalFileAttribute">
            <summary>
            Known attributes of a <see cref="T:Community.VisualStudio.Toolkit.PhysicalFile"/>. 
            This can be used to set an attribute of a file using the <see cref="!:PhysicalFile.TrySetAttributeAsync(PhysicalFileAttribute, string)"/> method.
            </summary>
        </member>
        <member name="F:Community.VisualStudio.Toolkit.PhysicalFileAttribute.AutoGen">
            <summary>
            Sets the <c>AutoGen</c> attribute.
            <para>
            Type: <see cref="T:System.String"/>
            </para>
            </summary>
        </member>
        <member name="F:Community.VisualStudio.Toolkit.PhysicalFileAttribute.BuildAction">
            <summary>
            How the file relates to the build and deployment processes.
            <para>
            Type: <see cref="T:System.String"/>
            </para>
            </summary>
        </member>
        <member name="F:Community.VisualStudio.Toolkit.PhysicalFileAttribute.CopyToOutputDirectory">
            <summary>
            Specifies the source file will be copied to the output directory.
            <para>
            Type: <see cref="F:Community.VisualStudio.Toolkit.PhysicalFileAttribute.CopyToOutputDirectory"/>
            </para>
            </summary>
        </member>
        <member name="F:Community.VisualStudio.Toolkit.PhysicalFileAttribute.CustomTool">
            <summary>
            The name of the single-file generator.
            <para>
            Type: <see cref="T:System.String"/>
            </para>
            </summary>
        </member>
        <member name="F:Community.VisualStudio.Toolkit.PhysicalFileAttribute.CustomToolNamespace">
            <summary>
            The namespace into which the output of the custom tool is placed.
            <para>
            Type: <see cref="T:System.String"/>
            </para>
            </summary>
        </member>
        <member name="F:Community.VisualStudio.Toolkit.PhysicalFileAttribute.DependentUpon">
            <summary>
            The other file that this file is dependent upon.
            <para>
            Type: <see cref="T:System.String"/>
            </para>
            </summary>
        </member>
        <member name="F:Community.VisualStudio.Toolkit.PhysicalFileAttribute.DesignTime">
            <summary>
            Sets the <c>DesignTime</c> attribute.
            <para>
            Type: <see cref="T:System.String"/>
            </para>
            </summary>
        </member>
        <member name="F:Community.VisualStudio.Toolkit.PhysicalFileAttribute.DesignTimeSharedInput">
            <summary>
            Sets the <c>DesignTimeSharedInput</c> attribute.
            <para>
            Type: <see cref="T:System.Boolean"/>
            </para>
            </summary>
        </member>
        <member name="F:Community.VisualStudio.Toolkit.PhysicalFileAttribute.Generator">
            <summary>
            Specifies the tool that transforms a file at design time and places the output of that transformation into another file. For example, a dataset (.xsd) file comes with a default custom tool.
            <para>
            Type: <see cref="T:System.String"/>
            </para>
            </summary>
        </member>
        <member name="F:Community.VisualStudio.Toolkit.PhysicalFileAttribute.LastGenOutput">
            <summary>
            Sets the <c>LastGenOutput</c> attribute.
            <para>
            Type: <see cref="T:System.String"/>
            </para>
            </summary>
        </member>
        <member name="F:Community.VisualStudio.Toolkit.PhysicalFileAttribute.SubType">
            <summary>
            File sub-type.
            <para>
            Type: <see cref="T:System.String"/>
            </para>
            </summary>
        </member>
        <member name="F:Community.VisualStudio.Toolkit.PhysicalFileAttribute.Visible">
            <summary>
            Whether to show the file in Solution Explorer.
            <para>
            Type: <see cref="T:System.Boolean"/>
            </para>
            </summary>
        </member>
        <member name="T:Community.VisualStudio.Toolkit.CopyToOutputDirectory">
            <summary>
            Defines whether a file will be copied to the build's output directory.
            </summary>
            <remarks>
            Equivalent to the <c>Microsoft.VisualStudio.ProjectFlavoring.CopyToOutputDirectory</c> enum.
            </remarks>
        </member>
        <member name="F:Community.VisualStudio.Toolkit.CopyToOutputDirectory.DoNotCopy">
            <summary>
            The file will never be copied.
            </summary>
        </member>
        <member name="F:Community.VisualStudio.Toolkit.CopyToOutputDirectory.Always">
            <summary>
            The file will always be copied.
            </summary>
        </member>
        <member name="F:Community.VisualStudio.Toolkit.CopyToOutputDirectory.PreserveNewest">
            <summary>
            The file will be copied, but only if it is newer that the file that is already in the build's output directory.
            </summary>
        </member>
        <member name="T:Community.VisualStudio.Toolkit.PhysicalFolder">
            <summary>
            Represents a physical folder in the solution hierarchy.
            </summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.PhysicalFolder.ContainingProject">
            <summary>
            The project containing this folder, or <see langword="null"/>.
            </summary>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.PhysicalFolder.AddExistingFilesAsync(System.String[])">
            <summary>
            Add existing files to the folder.
            </summary>
            <returns>A list of <see cref="T:Community.VisualStudio.Toolkit.PhysicalFile"/> items added to the folder.</returns>
        </member>
        <member name="T:Community.VisualStudio.Toolkit.Project">
            <summary>
            Represents a project in the solution hierarchy.
            </summary>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.Project.BuildAsync(Community.VisualStudio.Toolkit.BuildAction)">
            <summary>
            Starts a build, rebuild, or clean of the project.
            </summary>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.Project.AddExistingFilesAsync(System.String[])">
            <summary>
            Adds one or more files to the project.
            </summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.Project.References">
            <summary>
            References in the project.
            </summary>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.Project.IsKindAsync(System.String)">
            <summary>
            Checks what kind the project is.
            </summary>
            <param name="typeGuid">Use the <see cref="T:Community.VisualStudio.Toolkit.ProjectTypes"/> collection for known GUIDs.</param>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.Project.IsCapabilityMatch(System.String)">
            <summary>
            Tests if the given capability is found in the project's capabilities.
            </summary>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.Project.RemoveAttributeAsync(System.String)">
            <summary>
            Tries to remove an attribute in the project file for the item.
            </summary>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.Project.RemoveAttributeAsync(System.String,Community.VisualStudio.Toolkit.ProjectStorageType)">
            <summary>
            Tries to remove an attribute in the project file for the item from the specified storage type.
            </summary>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.Project.SaveAsync">
            <summary>
            Save the project if it's dirty.
            </summary>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.Project.TrySetAttributeAsync(System.String,System.String)">
            <summary>
            Tries to set an attribute in the project file for the item.
            </summary>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.Project.TrySetAttributeAsync(System.String,System.String,Community.VisualStudio.Toolkit.ProjectStorageType)">
            <summary>
            Tries to set an attribute in the project file for the item, storing the value in the specified storage type.
            </summary>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.Project.GetAttributeAsync(System.String)">
            <summary>
            Tries to retrieve an attribute value from the project file for the item.
            </summary>
            <returns><see langword="null"/> if the attribute doesn't exist.</returns>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.Project.GetAttributeAsync(System.String,Community.VisualStudio.Toolkit.ProjectStorageType)">
            <summary>
            Tries to retrieve an attribute value from the project file for the item, getting the value from the specfied storage type.
            </summary>
            <returns><see langword="null"/> if the attribute doesn't exist.</returns>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.Project.IsLoaded">
            <summary>
            Determines whether the project is loaded.
            </summary>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.Project.LoadAsync">
            <summary>
            Loads the project.
            </summary>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.Project.UnloadAsync(Microsoft.VisualStudio.Shell.Interop._VSProjectUnloadStatus)">
            <summary>
            Unloads the project.
            </summary>
        </member>
        <member name="T:Community.VisualStudio.Toolkit.ProjectStorageType">
            <summary>
            Defines the type of file that project data is stored in.
            </summary>
        </member>
        <member name="F:Community.VisualStudio.Toolkit.ProjectStorageType.ProjectFile">
            <summary>
            The <c>.csproj</c> file (or <c>.vbproj</c>, etc.)
            </summary>
        </member>
        <member name="F:Community.VisualStudio.Toolkit.ProjectStorageType.UserFile">
            <summary>
            The <c>.csproj.user</c> file (or <c>.vbproj.user</c>, etc.)
            </summary>
        </member>
        <member name="T:Community.VisualStudio.Toolkit.ProjectStateFilter">
            <summary>
            Defines the different project states that can be used to filter projects.
            </summary>
        </member>
        <member name="F:Community.VisualStudio.Toolkit.ProjectStateFilter.None">
            <summary>
            No projects.
            </summary>
        </member>
        <member name="F:Community.VisualStudio.Toolkit.ProjectStateFilter.Loaded">
            <summary>
            Projects that are currently loaded.
            </summary>
        </member>
        <member name="F:Community.VisualStudio.Toolkit.ProjectStateFilter.Unloaded">
            <summary>
            Projects that are currently unloaded.
            </summary>
        </member>
        <member name="F:Community.VisualStudio.Toolkit.ProjectStateFilter.All">
            <summary>
            Both loaded and unloaded projects.
            </summary>
        </member>
        <member name="T:Community.VisualStudio.Toolkit.Solution">
            <summary>
            Represents the solution itself.
            </summary>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.Solution.AddSolutionFolderAsync(System.String)">
            <summary>
            Adds a solution folder to the solution
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="T:Community.VisualStudio.Toolkit.SolutionEvents">
            <summary>
            Events related to solutions.
            </summary>
        </member>
        <member name="E:Community.VisualStudio.Toolkit.SolutionEvents.OnAfterCloseSolution">
            <summary></summary>
        </member>
        <member name="E:Community.VisualStudio.Toolkit.SolutionEvents.OnAfterLoadProject">
            <summary>Notifies listening clients that the project has been loaded.</summary>
        </member>
        <member name="E:Community.VisualStudio.Toolkit.SolutionEvents.OnAfterOpenProject">
            <summary>Notifies listening clients that the project has been opened.</summary>
        </member>
        <member name="E:Community.VisualStudio.Toolkit.SolutionEvents.OnBeforeOpenProject">
            <summary>Notifies listening clients that the a project with the specified file name is about to open.</summary>
        </member>
        <member name="E:Community.VisualStudio.Toolkit.SolutionEvents.OnBeforeOpenSolution">
            <summary>Notifies listening clients that the solution is about to be opened.</summary>
        </member>
        <member name="E:Community.VisualStudio.Toolkit.SolutionEvents.OnAfterOpenSolution">
            <summary>Notifies listening clients that the solution has been opened.</summary>
        </member>
        <member name="E:Community.VisualStudio.Toolkit.SolutionEvents.OnBeforeCloseProject">
            <summary>Notifies listening clients that the project is about to be closed.</summary>
        </member>
        <member name="E:Community.VisualStudio.Toolkit.SolutionEvents.OnBeforeCloseSolution">
            <summary>Notifies listening clients that a solution has been closed.</summary>
        </member>
        <member name="E:Community.VisualStudio.Toolkit.SolutionEvents.OnAfterMergeSolution">
            <summary>Notifies listening clients that all projects have been merged into the open solution.</summary>
        </member>
        <member name="E:Community.VisualStudio.Toolkit.SolutionEvents.OnBeforeUnloadProject">
            <summary>Notifies listening clients that the project is about to be unloaded.</summary>
        </member>
        <member name="E:Community.VisualStudio.Toolkit.SolutionEvents.OnAfterRenameProject">
            <summary>Notifies listening clients that a project has been renamed.</summary>
        </member>
        <member name="E:Community.VisualStudio.Toolkit.SolutionEvents.OnBeforeCloseFolder">
            <summary>Notifies listening clients that the folder is being closed.</summary>
        </member>
        <member name="E:Community.VisualStudio.Toolkit.SolutionEvents.OnAfterCloseFolder">
            <summary>Notifies listening clients that the folder has been closed.</summary>
        </member>
        <member name="E:Community.VisualStudio.Toolkit.SolutionEvents.OnAfterOpenFolder">
            <summary>Notifies listening clients that the folder has been opened.</summary>
        </member>
        <member name="E:Community.VisualStudio.Toolkit.SolutionEvents.OnAfterBackgroundSolutionLoadComplete">
            <summary> Fired when the solution load process is fully complete, including all background loading of projects.</summary>
        </member>
        <member name="T:Community.VisualStudio.Toolkit.SolutionFolder">
            <summary>
            Represents a solution folder in the solution
            </summary>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.SolutionFolder.AddExistingFilesAsync(System.String[])">
            <summary>
            Adds one or more files to the solution folder.
            </summary>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.SolutionFolder.TryRemoveAsync">
            <summary>
            Tries to remove the solution folder from the solution.
            </summary>
        </member>
        <member name="T:Community.VisualStudio.Toolkit.SolutionItem">
            <summary>
            Represents a file, folder, project, or other item in Solution Explorer.
            </summary>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.SolutionItem.#ctor(Microsoft.VisualStudio.Shell.IVsHierarchyItem,Community.VisualStudio.Toolkit.SolutionItemType)">
            <summary>
            Creates a new instance of the solution item.
            </summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.SolutionItem.Name">
            <summary>
            The name of the item.
            </summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.SolutionItem.Text">
            <summary>
            The display text of the item.
            </summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.SolutionItem.FullPath">
            <summary>
            The absolute file path on disk.
            </summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.SolutionItem.Type">
            <summary>
            The type of solution item.
            </summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.SolutionItem.Parent">
            <summary>
            The parent item. Is <see langword="null"/> when there is no parent.
            </summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.SolutionItem.Children">
            <summary>
            A list of child items.
            </summary>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.SolutionItem.GetItemInfo(Microsoft.VisualStudio.Shell.Interop.IVsHierarchy@,System.UInt32@,Microsoft.VisualStudio.Shell.IVsHierarchyItem@)">
            <summary>
            Gets information from the underlying data types.
            </summary>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.SolutionItem.FindParent(Community.VisualStudio.Toolkit.SolutionItemType)">
            <summary>
            Finds the nearest parent matching the specified type.
            </summary>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.SolutionItem.FromHierarchyAsync(Microsoft.VisualStudio.Shell.Interop.IVsHierarchy,System.UInt32)">
            <summary>
            Creates a new instance based on a hierarchy.
            </summary>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.SolutionItem.FromHierarchy(Microsoft.VisualStudio.Shell.Interop.IVsHierarchy,System.UInt32)">
            <summary>
            Creates a new instance based on a hierarchy.
            </summary>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.SolutionItem.FromHierarchyItem(Microsoft.VisualStudio.Shell.IVsHierarchyItem)">
            <summary>
            Creates a new instance based on a hierarchy item.
            </summary>
        </member>
        <member name="T:Community.VisualStudio.Toolkit.SolutionItemType">
            <summary>
            Types of items in the solution.
            </summary>
        </member>
        <member name="F:Community.VisualStudio.Toolkit.SolutionItemType.PhysicalFile">
            <summary>A physical file on disk.</summary>
        </member>
        <member name="F:Community.VisualStudio.Toolkit.SolutionItemType.PhysicalFolder">
            <summary>A physical folder on disk.</summary>
        </member>
        <member name="F:Community.VisualStudio.Toolkit.SolutionItemType.Project">
            <summary>A project.</summary>
        </member>
        <member name="F:Community.VisualStudio.Toolkit.SolutionItemType.MiscProject">
            <summary>A miscellaneous project.</summary>
        </member>
        <member name="F:Community.VisualStudio.Toolkit.SolutionItemType.VirtualProject">
            <summary>A virtual project.</summary>
        </member>
        <member name="F:Community.VisualStudio.Toolkit.SolutionItemType.Solution">
            <summary>The solution.</summary>
        </member>
        <member name="F:Community.VisualStudio.Toolkit.SolutionItemType.SolutionFolder">
            <summary>A solution folder.</summary>
        </member>
        <member name="F:Community.VisualStudio.Toolkit.SolutionItemType.Unknown">
            <summary>An unknown item.</summary>
        </member>
        <member name="F:Community.VisualStudio.Toolkit.SolutionItemType.VirtualFolder">
            <summary>A virtual folder.</summary>
        </member>
        <member name="T:Community.VisualStudio.Toolkit.Solutions">
            <summary>
            A collection of services and helpers related to solutions.
            </summary>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.Solutions.GetCurrentSolutionAsync">
            <summary>
            Gets the current solution.
            </summary>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.Solutions.GetCurrentSolution">
            <summary>
            Gets the current solution.
            </summary>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.Solutions.GetActiveProjectAsync">
            <summary>
            Gets the active project.
            </summary>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.Solutions.GetAllProjectHierarchiesAsync(Community.VisualStudio.Toolkit.ProjectStateFilter)">
            <summary>
            Gets all projects in the solution.
            </summary>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.Solutions.GetAllProjectsAsync(Community.VisualStudio.Toolkit.ProjectStateFilter)">
            <summary>
            Gets all projects in the solution
            </summary>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.Solutions.FindProjectsAsync(System.String)">
            <summary>
            Find a project in the current solution
            </summary>
            <param name="projectName">Name of the project to find. The name is compared case insensitive</param>
            <returns>a project object or null when no match is found.</returns>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.Solutions.GetActiveItemsAsync">
            <summary>
            Gets the currently selected items.
            </summary>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.Solutions.GetActiveItemAsync">
            <summary>
            Gets the currently selected item. If more than one item is selected, it returns the first one.
            </summary>
            <remarks><see langword="null"/> if no items are selected.</remarks>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.Solutions.IsOpenAsync">
            <summary>
            Checks if a solution is open.
            </summary>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.Solutions.IsOpeningAsync">
            <summary>
            Checks if a solution is opening.
            </summary>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.Solutions.GetSelectedHierarchiesAsync">
            <summary>
            Gets the currently selected hierarchy items.
            </summary>
        </member>
        <member name="T:Community.VisualStudio.Toolkit.VirtualFolder">
            <summary>
            Represents a virtual folder in the solution hierarchy.
            </summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.VirtualFolder.ContainingProject">
            <summary>
            The project containing this folder, or <see langword="null"/>.
            </summary>
        </member>
        <member name="T:Community.VisualStudio.Toolkit.InternalResourceKeys">
            <summary>
            Re-defines resource keys and other properties used in XAML files, where the assembly that 
            they are originally defined in has a different name depending on the version of the toolkit.
            </summary>
        </member>
        <member name="T:Community.VisualStudio.Toolkit.Themes">
            <summary>
            A helper class that can automatically theme any XAML control or window using the VS theme properties.
            </summary>
            <remarks>Should only be referenced from within .xaml files.</remarks>
            <example>
            <code>
            &lt;UserControl x:Class="MyClass"
            xmlns:toolkit="clr-namespace:Community.VisualStudio.Toolkit;assembly=Community.VisualStudio.Toolkit"
            toolkit:Themes.UseVsTheme="True"&gt;
            &lt;/UserControl&gt;
            </code>
            </example>
        </member>
        <member name="F:Community.VisualStudio.Toolkit.Themes.UseVsThemeProperty">
            <summary>
            The property to add to your XAML control.
            </summary>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.Themes.SetUseVsTheme(System.Windows.UIElement,System.Boolean)">
            <summary>
            Sets the UseVsTheme property.
            </summary>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.Themes.GetUseVsTheme(System.Windows.UIElement)">
            <summary>
            Gets the UseVsTheme property from the specified element.
            </summary>
        </member>
        <member name="T:Community.VisualStudio.Toolkit.ToolkitResourceKeys">
            <summary>Exposes WPF resource keys for WPF controls.</summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.ToolkitResourceKeys.ThemeResourcesUri">
            <summary>
            Gets the URI of the <see cref="T:System.Windows.ResourceDictionary"/> that contains the theme resources.
            </summary>
            <remarks>
            This can be used to load the <see cref="T:System.Windows.ResourceDictionary"/> when you would like to customize the styles.
            <code>
            &lt;ResourceDictionary&gt;
                &lt;ResourceDictionary.MergedDictionaries&gt;
                    &lt;ResourceDictionary Source="{x:Static toolkit:ToolkitResourceKeys.ThemeResourcesUri}"/&gt;
                &lt;/ResourceDictionary.MergedDictionaries&gt;
            &lt;/ResourceDictionary&gt;
            </code>
            </remarks>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.ToolkitResourceKeys.InputPaddingKey">
            <summary>Gets the key that can be used to get the <see cref="T:System.Windows.Thickness"/> to use for input controls.</summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.ToolkitResourceKeys.ThickProgressBarHeight">
            <summary>
            Gets the key that can be used to get the <see cref="T:System.Double"/> to use for a progress bar with a thick height
            (similar to the height used in the <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsThreadedWaitDialog"/>).
            </summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.ToolkitResourceKeys.TextBoxStyleKey">
            <summary>Gets the key that defines the resource for a Visual Studio-themed <see cref="T:System.Windows.Controls.TextBox"/> style.</summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.ToolkitResourceKeys.ComboBoxStyleKey">
            <summary>Gets the key that defines the resource for a Visual Studio-themed <see cref="T:System.Windows.Controls.ComboBox"/> style.</summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.ToolkitResourceKeys.PasswordBoxStyleKey">
            <summary>Gets the key that defines the resource for a Visual Studio-themed <see cref="T:System.Windows.Controls.PasswordBox"/> style.</summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.ToolkitResourceKeys.PasswordBoxControlTemplateKey">
            <summary>Gets the key that defines the resource for the <see cref="T:System.Windows.Controls.ControlTemplate"/> of a Visual Studio-themed <see cref="T:System.Windows.Controls.PasswordBox"/> style.</summary>
        </member>
        <member name="T:Community.VisualStudio.Toolkit.ToolkitPackage">
            <summary>
            An <see cref="T:Microsoft.VisualStudio.Shell.AsyncPackage"/> that provides additional functionality.
            </summary>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.ToolkitPackage.CreateToolWindow(System.Guid@,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.ToolkitPackage.CreateToolWindow(System.Type,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.ToolkitPackage.InstantiateToolWindow(System.Type)">
            <inheritdoc/>
        </member>
        <member name="T:Community.VisualStudio.Toolkit.VS">
            <summary>
            The entry point for a wide variety of extensibility helper classes and methods.
            </summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.VS.Build">
            <summary>Handles building of solutions and projects.</summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.VS.Commands">
            <summary>A collection of services related to the command system.</summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.VS.Debugger">
            <summary>A collection of services related to the debugger.</summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.VS.Documents">
            <summary>Contains helper methods for dealing with documents.</summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.VS.Events">
            <summary>A collection of events.</summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.VS.InfoBar">
            <summary>Creates InfoBar controls for use on documents and tool windows.</summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.VS.MessageBox">
            <summary>Shows message boxes.</summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.VS.Selection">
            <summary>Services related to the selection of windows and items in solution.</summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.VS.Services">
            <summary>A collection of services commonly used by extensions.</summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.VS.Settings">
            <summary>A collection of services related to settings.</summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.VS.Shell">
            <summary>A collection of services related to the shell.</summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.VS.Solutions">
            <summary>A collection of services related to solutions.</summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.VS.StatusBar">
            <summary>An API wrapper that makes it easy to work with the status bar.</summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.VS.Windows">
            <summary>A collection of services related to windows.</summary>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.VS.GetServiceAsync``2">
            <summary>
            Gets a global service asynchronously.
            </summary>
            <typeparam name="TService">The type identity of the service.</typeparam>
            <typeparam name="TInterface">The interface to cast the service to.</typeparam>
            <returns>A task whose result is the service, if found; otherwise <see langword="null" />.</returns>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.VS.GetRequiredServiceAsync``2">
            <summary>
            Gets a global service asynchronously.
            </summary>
            <typeparam name="TService">The type identity of the service.</typeparam>
            <typeparam name="TInterface">The interface to cast the service to.</typeparam>
            <returns>A task whose result is the service, if found.</returns>
            <exception cref="T:System.Exception">Throws an exception when the service is not available.</exception>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.VS.GetRequiredService``2">
            <summary>
            Gets a global service synchronously.
            </summary>
            <typeparam name="TService">The type identity of the service.</typeparam>
            <typeparam name="TInterface">The interface to cast the service to.</typeparam>
            <exception cref="T:System.Exception">Throws an exception when the service is not available.</exception>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.VS.GetMefServiceAsync``1">
            <summary>
            Gets a service from the MEF component catalog
            </summary>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.VS.GetMefService``1">
            <summary>
            Gets a service from the MEF component catalog
            </summary>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.VS.RestartAsync">
            <summary>
            Restarts Visual Studio.
            </summary>
        </member>
        <member name="T:Community.VisualStudio.Toolkit.BaseToolWindow`1">
            <summary>
            A base class that makes it easier to use tool windows. 
            </summary>
            <example>
            <code>
            public class TestToolWindow : BaseToolWindow&lt;TestToolWindow&gt;
            {
                public override string GetTitle(int toolWindowId) => "Test Window";
                
                public override Type PaneType => typeof(Pane);
                
                public override async Task&lt;FrameworkElement&gt; CreateAsync(int toolWindowId, CancellationToken cancellationToken)
                {
                    await ThreadHelper.JoinableTaskFactory.SwitchToMainThreadAsync(cancellationToken);
                    var dte = await VS.GetDTEAsync();
                    return new TestWindowControl(dte);
                }
                
                [Guid("d0050678-2e4f-4a93-adcb-af1370da941d")]
                internal class Pane : ToolWindowPane
                {
                    public Pane()
                    {
                        BitmapImageMoniker = KnownMonikers.Test;
                    }
                }
            }
            </code>
            </example>
            <typeparam name="T">The implementation type itself.</typeparam>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.BaseToolWindow`1.Initialize(Community.VisualStudio.Toolkit.ToolkitPackage)">
            <summary>
            Initializes the tool window. This method must be called from the <see cref="M:Microsoft.VisualStudio.Shell.AsyncPackage.InitializeAsync(System.Threading.CancellationToken,System.IProgress{Microsoft.VisualStudio.Shell.ServiceProgressData})"/> method for the tool window to work.
            </summary>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.BaseToolWindow`1.ShowAsync(System.Int32,System.Boolean)">
            <summary>
            Shows the tool window. The tool window will be created if it does not already exist.
            </summary>
            <param name="id">The ID of the instance of the tool window for multi-instance tool windows.</param>
            <param name="create">Whether to create the tool window if it does not already exist.</param>
            <returns>A task that returns the <see cref="T:Microsoft.VisualStudio.Shell.ToolWindowPane"/> if the tool window already exists or was created, or a task that returns null if the tool window does not exist and was not created.</returns>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.BaseToolWindow`1.HideAsync(System.Int32)">
            <summary>
            Hides the tool window.
            </summary>
            <param name="id">For multi-instance tool windows, this specifies the ID of the window to close.</param>
            <returns>True if the tool window was hidden; otherwise, false.</returns>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.BaseToolWindow`1.Package">
            <summary>
            The package class that initialized this class.
            </summary>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.BaseToolWindow`1.GetTitle(System.Int32)">
            <summary>
            Gets the title to show in the tool window.
            </summary>
            <param name="toolWindowId">The ID of the tool window for a multi-instance tool window.</param>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.BaseToolWindow`1.PaneType">
            <summary>
            Gets the type of <see cref="T:Microsoft.VisualStudio.Shell.ToolWindowPane"/> that will be created for this tool window.
            </summary>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.BaseToolWindow`1.CreateAsync(System.Int32,System.Threading.CancellationToken)">
            <summary>
            Creates the UI element that will be shown in the tool window. 
            Use this method to create the user control or any other UI element that you want to show in the tool window.
            </summary>
            <param name="toolWindowId">The ID of the tool window instance being created for a multi-instance tool window.</param>
            <param name="cancellationToken">The cancellation token to use when performing asynchronous operations.</param>
            <returns>The UI element to show in the tool window.</returns>
        </member>
        <member name="T:Community.VisualStudio.Toolkit.SolutionExplorerWindow">
            <summary>
            Provides access to the Solution Explorer tool window.
            </summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.SolutionExplorerWindow.Frame">
            <summary>
            Gets the Solution Explorer frame.
            </summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.SolutionExplorerWindow.UIHierarchyWindow">
            <summary>
            Gets the internal <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsUIHierarchyWindow"/> that is used by Solution Explorer.
            </summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.SolutionExplorerWindow.SolutionUIHierarchyWindow">
            <summary>
            Gets the internal <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsSolutionUIHierarchyWindow"/> that is used by Solution Explorer.
            </summary>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.SolutionExplorerWindow.IsFilterEnabled">
            <summary>
            Determines whether Solution Explorer is currently being filtered by any filter.
            </summary>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.SolutionExplorerWindow.IsFilterEnabled``1">
            <summary>
            Determines whether Solution Explorer is currently being filtered by the specified filter.
            </summary>
            <typeparam name="TFilter">The type of the filter to test for.</typeparam>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.SolutionExplorerWindow.IsFilterEnabled(System.Guid,System.UInt32)">
            <summary>
            Determines whether Solution Explorer is currently being filtered by any filter.
            </summary>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.SolutionExplorerWindow.DisableFilter">
            <summary>
            Disables filtering in Solution Explorer.
            </summary>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.SolutionExplorerWindow.EnableFilter``1">
            <summary>
            Enables the specified Solution Explorer filter.
            </summary>
            <typeparam name="TFilter">The type of the filter to enable.</typeparam>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.SolutionExplorerWindow.EnableFilter(System.Guid,System.UInt32)">
            <summary>
            Enables the specified Solution Explorer filter.
            </summary>
            <param name="filterGroup">The GUID of the filter's group.</param>
            <param name="filterId">The ID of the filter.</param>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.SolutionExplorerWindow.GetCurrentFilter">
            <summary>
            Gets the current filter that is applied to Solution Explorer.
            </summary>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.SolutionExplorerWindow.GetSelectionAsync">
            <summary>
            Gets the selected items in Solution Explorer.
            </summary>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.SolutionExplorerWindow.SetSelection(Community.VisualStudio.Toolkit.SolutionItem)">
            <summary>
            Sets the selected item in the Solution Explorer window.
            </summary>
            <param name="item">The item to select.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="item"/> is <see langword="null"/>.</exception>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.SolutionExplorerWindow.SetSelection(System.Collections.Generic.IEnumerable{Community.VisualStudio.Toolkit.SolutionItem})">
            <summary>
            Sets the selected items in the Solution Explorer window.
            </summary>
            <param name="items">The items to select.</param>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.SolutionExplorerWindow.EditLabel(Community.VisualStudio.Toolkit.SolutionItem)">
            <summary>
            Begins editing of the specified item.
            </summary>
            <param name="item">The item to being editing the label of.</param>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.SolutionExplorerWindow.Expand(Community.VisualStudio.Toolkit.SolutionItem,Community.VisualStudio.Toolkit.SolutionItemExpansionMode)">
            <summary>
            Expands the specified item.
            </summary>
            <param name="item">The item to expand.</param>
            <param name="mode">Specifies how the item will be expanded.</param>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.SolutionExplorerWindow.Expand(System.Collections.Generic.IEnumerable{Community.VisualStudio.Toolkit.SolutionItem},Community.VisualStudio.Toolkit.SolutionItemExpansionMode)">
            <summary>
            Expands the specified items.
            </summary>
            <param name="items">The items to expand.</param>
            <param name="mode">Specifies how the items will be expanded.</param>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.SolutionExplorerWindow.Collapse(Community.VisualStudio.Toolkit.SolutionItem)">
            <summary>
            Collapses the specified item.
            </summary>
            <param name="item">The item to collapse.</param>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.SolutionExplorerWindow.Collapse(System.Collections.Generic.IEnumerable{Community.VisualStudio.Toolkit.SolutionItem})">
            <summary>
            Collapses the specified items.
            </summary>
            <param name="items">The items to collapse.</param>
        </member>
        <member name="T:Community.VisualStudio.Toolkit.SolutionItemExpansionMode">
            <summary>
            Defines how a Solution Explorer item should be expanded.
            </summary>
        </member>
        <member name="F:Community.VisualStudio.Toolkit.SolutionItemExpansionMode.None">
            <summary>
            The item and its ancestors and descendants will not be expanded.
            </summary>
        </member>
        <member name="F:Community.VisualStudio.Toolkit.SolutionItemExpansionMode.Single">
            <summary>
            Only the specified item will be expanded. Ancestors and descendants will not be expanded.
            </summary>
        </member>
        <member name="F:Community.VisualStudio.Toolkit.SolutionItemExpansionMode.Recursive">
            <summary>
            The specified item and all descendants will be expanded. Ancestors will not be expanded.
            </summary>
        </member>
        <member name="F:Community.VisualStudio.Toolkit.SolutionItemExpansionMode.Ancestors">
            <summary>
            The ancestors of the item will be expanded. The item itself and its children will not be expanded.
            </summary>
        </member>
        <member name="T:Community.VisualStudio.Toolkit.WindowEvents">
            <summary>
            Events related to the window frames.
            </summary>
        </member>
        <member name="E:Community.VisualStudio.Toolkit.WindowEvents.Created">
            <summary>
            Fires when a window frame is created
            </summary>
        </member>
        <member name="E:Community.VisualStudio.Toolkit.WindowEvents.Destroyed">
            <summary>
            Fires when a window frame is destroyed.
            </summary>
        </member>
        <member name="E:Community.VisualStudio.Toolkit.WindowEvents.FrameIsVisibleChanged">
            <summary>
            Fires when a changes happens to a frame's visibility.
            </summary>
        </member>
        <member name="E:Community.VisualStudio.Toolkit.WindowEvents.FrameIsOnScreenChanged">
            <summary>
            Fires when a changes happens to a frames location on the screen.
            </summary>
        </member>
        <member name="E:Community.VisualStudio.Toolkit.WindowEvents.ActiveFrameChanged">
            <summary>
            Fires when the active frame changes.
            </summary>
        </member>
        <member name="T:Community.VisualStudio.Toolkit.FrameVisibilityEventArgs">
            <inheritdoc/>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.FrameVisibilityEventArgs.Frame">
            <summary>The Window frame object.</summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.FrameVisibilityEventArgs.IsNewVisible">
            <summary>A value indicating if the new frame is visible.</summary>
        </member>
        <member name="T:Community.VisualStudio.Toolkit.FrameOnScreenEventArgs">
            <inheritdoc/>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.FrameOnScreenEventArgs.Frame">
            <summary>The Window frame object.</summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.FrameOnScreenEventArgs.IsOnScreen">
            <summary>A value indicating if the frame is on screen.</summary>
        </member>
        <member name="T:Community.VisualStudio.Toolkit.ActiveFrameChangeEventArgs">
            <inheritdoc/>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.ActiveFrameChangeEventArgs.OldFrame">
            <summary>The frame that lost its active state.</summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.ActiveFrameChangeEventArgs.NewFrame">
            <summary>The frame became active.</summary>
        </member>
        <member name="T:Community.VisualStudio.Toolkit.WindowFrame">
            <summary>
            This class encapsulates an IVsWindowFrame instance and build functionality around.
            </summary>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.WindowFrame.#ctor(Microsoft.VisualStudio.Shell.Interop.IVsWindowFrame)">
            <summary>
            Creates a new instance from the specified frame
            </summary>
            <param name="frame"></param>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.WindowFrame.Caption">
            <summary>
            Gets or sets the caption of the window frame.
            </summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.WindowFrame.Guid">
            <summary>
            Gets the GUID of this window frame.
            </summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.WindowFrame.Editor">
            <summary>
            The editor GUID associated with this frame.
            </summary>
        </member>
        <member name="E:Community.VisualStudio.Toolkit.WindowFrame.OnShow">
            <summary>
            Event raised when the show state of the window frame changes.
            </summary>
        </member>
        <member name="E:Community.VisualStudio.Toolkit.WindowFrame.OnClose">
            <summary>
            Event raised when the window frame is being closed.
            </summary>
        </member>
        <member name="E:Community.VisualStudio.Toolkit.WindowFrame.OnResize">
            <summary>
            Event raised when the window frame is being resized.
            </summary>
        </member>
        <member name="E:Community.VisualStudio.Toolkit.WindowFrame.OnMove">
            <summary>
            Event raised when the window frame is being moved.
            </summary>
        </member>
        <member name="E:Community.VisualStudio.Toolkit.WindowFrame.OnDockChange">
            <summary>
            Event raised when the window frame's dock state is being changed.
            </summary>
        </member>
        <member name="E:Community.VisualStudio.Toolkit.WindowFrame.OnStatusChange">
            <summary>
            Event raised when the window frame's state is being changed.
            </summary>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.WindowFrame.CreateInfoBarAsync(Microsoft.VisualStudio.Shell.InfoBarModel)">
            <summary>
            Creates an <see cref="T:Community.VisualStudio.Toolkit.InfoBar"/> in the window.
            </summary>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.WindowFrame.ShowAsync">
            <summary>
            Renders this window visible, brings the window to the top, and activates the window.
            </summary>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.WindowFrame.HideAsync">
            <summary>
            Hides a window.
            </summary>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.WindowFrame.IsVisibleAsync">
            <summary>
            Determines whether or not the window is visible.
            </summary>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.WindowFrame.ShowNoActivateAsync">
            <summary>
            Shows or makes a window visible and brings it to the top, but does not make it the 
            active window.
            </summary>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.WindowFrame.CloseFrameAsync(Community.VisualStudio.Toolkit.FrameCloseOption)">
            <summary>
            Closes a window.
            </summary>
            <param name="option">Save options</param>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.WindowFrame.SetFrameSizeAsync(System.Drawing.Size)">
            <summary>
            Sets the size of the window frame
            </summary>
            <param name="size">Size of the frame.</param>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.WindowFrame.SetWindowPositionAsync(System.Drawing.Rectangle)">
            <summary>
            Sets the position of the window frame
            </summary>
            <param name="rec">Rectangle defining the size of the frame.</param>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.WindowFrame.GetWindowPosition(System.Drawing.Rectangle@)">
            <summary>
            Gets the position of the window frame.
            </summary>
            <param name="position">Window frame coordinates.</param>
            <returns>
            General position of the frame (docked, tabbed, floating, etc.)
            </returns>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.WindowFrame.IsOnScreenAsync">
            <summary>
            Checks if the window frame is on the screen.
            </summary>
            <returns>True, if the frame is on the screen; otherwise, false.</returns>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.WindowFrame.GetDocumentViewAsync">
            <summary>
            Gets the document view from the window frame.
            </summary>
            <returns><see langword="null"/> if the window isn't a document window.</returns>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.WindowFrame.InvokeStatusChanged">
            <summary>
            Invokes the event handler for the status changed event.
            </summary>
        </member>
        <member name="T:Community.VisualStudio.Toolkit.FrameCloseOption">
            <summary>
            Specifies close options when closing a window frame.
            </summary>
        </member>
        <member name="F:Community.VisualStudio.Toolkit.FrameCloseOption.NoSave">
            <summary>Do not save the document.</summary>
        </member>
        <member name="F:Community.VisualStudio.Toolkit.FrameCloseOption.SaveIfDirty">
            <summary>Save the document if it is dirty.</summary>
        </member>
        <member name="F:Community.VisualStudio.Toolkit.FrameCloseOption.PromptSave">
            <summary>Prompt for document save.</summary>
        </member>
        <member name="T:Community.VisualStudio.Toolkit.FramePosition">
            <summary>
            Specifies the window frame positions.
            </summary>
        </member>
        <member name="F:Community.VisualStudio.Toolkit.FramePosition.Unknown">
            <summary>Window frame has unknown position.</summary>
        </member>
        <member name="F:Community.VisualStudio.Toolkit.FramePosition.Docked">
            <summary>Window frame is docked.</summary>
        </member>
        <member name="F:Community.VisualStudio.Toolkit.FramePosition.Tabbed">
            <summary>Window frame is tabbed.</summary>
        </member>
        <member name="F:Community.VisualStudio.Toolkit.FramePosition.Float">
            <summary>Window frame floats.</summary>
        </member>
        <member name="F:Community.VisualStudio.Toolkit.FramePosition.MdiChild">
            <summary>Window frame is currently within the MDI space.</summary>
        </member>
        <member name="T:Community.VisualStudio.Toolkit.FrameShow">
            <summary>
            Specifies options when the show state of a window frame changes.
            </summary>
        </member>
        <member name="F:Community.VisualStudio.Toolkit.FrameShow.Unknown">
            <summary>Reason unknown</summary>
        </member>
        <member name="F:Community.VisualStudio.Toolkit.FrameShow.Hidden">
            <summary>Obsolete; use WinHidden.</summary>
        </member>
        <member name="F:Community.VisualStudio.Toolkit.FrameShow.WinHidden">
            <summary>Window (tabbed or otherwise) is hidden.</summary>
        </member>
        <member name="F:Community.VisualStudio.Toolkit.FrameShow.Shown">
            <summary>A nontabbed window is made visible.</summary>
        </member>
        <member name="F:Community.VisualStudio.Toolkit.FrameShow.TabActivated">
            <summary>A tabbed window is activated (made visible).</summary>
        </member>
        <member name="F:Community.VisualStudio.Toolkit.FrameShow.TabDeactivated">
            <summary>A tabbed window is deactivated.</summary>
        </member>
        <member name="F:Community.VisualStudio.Toolkit.FrameShow.Restored">
            <summary>Window is restored to normal state.</summary>
        </member>
        <member name="F:Community.VisualStudio.Toolkit.FrameShow.Minimized">
            <summary>Window is minimized.</summary>
        </member>
        <member name="F:Community.VisualStudio.Toolkit.FrameShow.Maximized">
            <summary>Window is maximized.</summary>
        </member>
        <member name="F:Community.VisualStudio.Toolkit.FrameShow.DestroyMultipleInstance">
            <summary>Multi-instance tool window destroyed.</summary>
        </member>
        <member name="F:Community.VisualStudio.Toolkit.FrameShow.AutoHideSlideBegin">
            <summary>Autohidden window is about to slide into view.</summary>
        </member>
        <member name="T:Community.VisualStudio.Toolkit.WindowFrameShowEventArgs">
            <summary>
            Event arguments for the event raised when the show state of a window frame changes.
            </summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.WindowFrameShowEventArgs.Reason">
            <summary>
            Reason of the event (why the show state is changed)?
            </summary>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.WindowFrameShowEventArgs.#ctor(Community.VisualStudio.Toolkit.FrameShow)">
            <summary>
            Creates an event argument instance with the initial reason.
            </summary>
            <param name="reason">Event reason.</param>
        </member>
        <member name="T:Community.VisualStudio.Toolkit.WindowFrameCloseEventArgs">
            <summary>
            Event arguments for the event raised when the window frame is closed.
            </summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.WindowFrameCloseEventArgs.CloseOption">
            <summary>
            Options used to close the window frame.
            </summary>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.WindowFrameCloseEventArgs.#ctor(Community.VisualStudio.Toolkit.FrameCloseOption)">
            <summary>
            Creates an event argument instance with the initial close option.
            </summary>
            <param name="closeOption">Close option.</param>
        </member>
        <member name="T:Community.VisualStudio.Toolkit.WindowFramePositionChangedEventArgs">
            <summary>
            Event arguments for the events raised when the window frame position is changed.
            </summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.WindowFramePositionChangedEventArgs.Position">
            <summary>
            New window frame position.
            </summary>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.WindowFramePositionChangedEventArgs.#ctor(System.Drawing.Rectangle)">
            <summary>
            Creates an event argument instance with the new frame position.
            </summary>
            <param name="position">New frame position.</param>
        </member>
        <member name="T:Community.VisualStudio.Toolkit.WindowFrameDockChangedEventArgs">
            <summary>
            Event arguments for the event raised when the dock state of the window frame is changed.
            </summary>
        </member>
        <member name="P:Community.VisualStudio.Toolkit.WindowFrameDockChangedEventArgs.Docked">
            <inheritdoc />
        </member>
        <member name="M:Community.VisualStudio.Toolkit.WindowFrameDockChangedEventArgs.#ctor(System.Drawing.Rectangle,System.Boolean)">
            <summary>
            Creates an event argument instance with the new position and dock state..
            </summary>
            <param name="position">New position of the window frame.</param>
            <param name="docked">True, if the frame is docked; otherwise, false.</param>
        </member>
        <member name="T:Community.VisualStudio.Toolkit.WindowGuids">
            <summary>
            Provides GUIDs that are used to identify Visual Studio tool windows.
            </summary>
        </member>
        <member name="F:Community.VisualStudio.Toolkit.WindowGuids.GitChanges">
            <summary>The Git Changes window introduced in Visual Studio 2019.</summary>
        </member>
        <member name="F:Community.VisualStudio.Toolkit.WindowGuids.GitRepository">
            <summary>The Git Repository window introduced in Visual Studio 2019.</summary>
        </member>
        <member name="F:Community.VisualStudio.Toolkit.WindowGuids.ErrorList">
            <summary>The Error List window.</summary>
        </member>
        <member name="F:Community.VisualStudio.Toolkit.WindowGuids.Toolbox">
            <summary>
            Provides a list of components that can be added to a project, typically through the Windows Forms designer.
            </summary>
        </member>
        <member name="F:Community.VisualStudio.Toolkit.WindowGuids.PropertyBrowser">
            <summary>
            Provides a list of properties associated with the currently selected file or project in the Solution Explorer.
            </summary>
        </member>
        <member name="F:Community.VisualStudio.Toolkit.WindowGuids.SolutionExplorer">
            <summary>
            Provides a list of projects and their files in a solution.
            </summary>
        </member>
        <member name="F:Community.VisualStudio.Toolkit.WindowGuids.OutputWindow">
            <summary>Displays any output generated by a build process or a program being debugged.</summary>
        </member>
        <member name="F:Community.VisualStudio.Toolkit.WindowGuids.DocOutline">
            <summary>Provides an outline of an HTML file.</summary>
        </member>
        <member name="F:Community.VisualStudio.Toolkit.WindowGuids.TaskList">
            <summary>Provides a list of user-specified tasks to be accomplished for a project.</summary>
        </member>
        <member name="F:Community.VisualStudio.Toolkit.WindowGuids.ServerExplorer">
            <summary>Provides a list of servers used for connecting to databases.</summary>
        </member>
        <member name="F:Community.VisualStudio.Toolkit.WindowGuids.MacroExplorer">
            <summary>Provides a list of macros available for use in the Visual Studio shell.</summary>
        </member>
        <member name="F:Community.VisualStudio.Toolkit.WindowGuids.ContextWindow">
            <summary>Provides links to help topics based on the current context.</summary>
        </member>
        <member name="F:Community.VisualStudio.Toolkit.WindowGuids.ClassView">
            <summary>Provides a list of all classes in a solution.</summary>
        </member>
        <member name="F:Community.VisualStudio.Toolkit.WindowGuids.ResourceView">
            <summary>Provides a list of resources available in a project.</summary>
        </member>
        <member name="F:Community.VisualStudio.Toolkit.WindowGuids.ObjectSearchWindow">
            <summary>Provides the ability to search for a symbol.</summary>
        </member>
        <member name="F:Community.VisualStudio.Toolkit.WindowGuids.CommandWindow">
            <summary>Provides a way to execute commands directly in the Visual Studio shell.</summary>
        </member>
        <member name="F:Community.VisualStudio.Toolkit.WindowGuids.ObjectSearchResultsWindow">
            <summary>Provides the results of searching for a symbol.</summary>
        </member>
        <member name="F:Community.VisualStudio.Toolkit.WindowGuids.ObjectBrowser">
            <summary>Provides a list of components installed on the system.</summary>
        </member>
        <member name="F:Community.VisualStudio.Toolkit.WindowGuids.BrowserDoc">
            <summary>For internal use only.</summary>
        </member>
        <member name="F:Community.VisualStudio.Toolkit.WindowGuids.FindReplace">
            <summary>Provides the ability to search and replace on the currently opened file.</summary>
        </member>
        <member name="F:Community.VisualStudio.Toolkit.WindowGuids.FindAdvanced">
            <summary>Provides the ability to search files for a string.</summary>
        </member>
        <member name="F:Community.VisualStudio.Toolkit.WindowGuids.FindResults1">
            <summary>Provides a list of the search results.</summary>
        </member>
        <member name="F:Community.VisualStudio.Toolkit.WindowGuids.FindResults2">
            <summary>Provides a second list of search results.</summary>
        </member>
        <member name="F:Community.VisualStudio.Toolkit.WindowGuids.DeveloperPowerShell">
            <summary>Provides a command prompt for PowerShell.</summary>
        </member>
        <member name="T:Community.VisualStudio.Toolkit.Windows">
            <summary>A collection of services related to windows.</summary>
        </member>
        <member name="T:Community.VisualStudio.Toolkit.Windows.VSOutputWindowPane">
            <summary>
            Output window panes provided by Visual Studio.
            </summary>
        </member>
        <member name="F:Community.VisualStudio.Toolkit.Windows.VSOutputWindowPane.General">
            <summary>The General pane.</summary>
        </member>
        <member name="F:Community.VisualStudio.Toolkit.Windows.VSOutputWindowPane.Build">
            <summary>The Build pane.</summary>
        </member>
        <member name="F:Community.VisualStudio.Toolkit.Windows.VSOutputWindowPane.Debug">
            <summary>The Debug pane.</summary>
        </member>
        <member name="F:Community.VisualStudio.Toolkit.Windows.VSOutputWindowPane.SortedBuild">
            <summary>The sorted build output pane inside the output window.</summary>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.Windows.CreateOutputWindowPaneAsync(System.String,System.Boolean)">
            <summary>
            Creates a new Output window pane with the given name.
            The pane can be created now or lazily upon the first write to it.
            </summary>
            <param name="name">The name (title) of the new pane.</param>
            <param name="lazyCreate">Whether to lazily create the pane upon first write.</param>
            <returns>A new OutputWindowPane.</returns>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.Windows.GetOutputWindowPaneAsync(Community.VisualStudio.Toolkit.Windows.VSOutputWindowPane)">
            <summary>
            Gets an existing Visual Studio Output window pane (General, Build, Debug).
            If the General pane does not already exist then it will be created, but that is not the case
            for Build or Debug, in which case the method returns null if the pane doesn't already exist.
            </summary>
            <param name="pane">The Visual Studio pane to get.</param>
            <returns>A new OutputWindowPane or null.</returns>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.Windows.GetOutputWindowPaneAsync(System.Guid)">
            <summary>
            Gets an existing Output window pane.
            Returns null if a pane with the specified GUID does not exist.
            </summary>
            <param name="guid">The pane's unique identifier.</param>
            <returns>A new OutputWindowPane or <see langword="null"/>.</returns>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.Windows.ShowDialogAsync(System.Windows.Window,System.Windows.WindowStartupLocation)">
            <summary>Shows a window as a dialog.</summary>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.Windows.GetCurrentWindowAsync">
            <summary>
            Gets the current active window frame object.
            </summary>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.Windows.FindDocumentWindowAsync(System.String)">
            <summary>
            Find the open window frame hosting the specified file.
            </summary>
            <returns><see langword="null"/> if the file isn't open.</returns>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.Windows.FindWindowAsync(System.Guid)">
            <summary>
            Finds tool windows matching the specified GUID.
            </summary>
            <param name="toolWindowGuid">Find known tool window GUIDs in the <see cref="T:Community.VisualStudio.Toolkit.WindowGuids"/> class.</param>
            <returns>An instance of an <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsWindowFrame"/> or <see langword="null"/>.</returns>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.Windows.FindOrShowToolWindowAsync(System.Guid)">
            <summary>
            Finds tool windows matching the specified GUID.
            </summary>
            <param name="toolWindowGuid">Find known tool window GUIDs in the <see cref="T:Community.VisualStudio.Toolkit.WindowGuids"/> class.</param>
            <returns>An instance of an <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsWindowFrame"/> or <see langword="null"/>.</returns>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.Windows.ShowToolWindowAsync(System.Guid)">
            <summary>
            Shows any toolwindow.
            </summary>
            <param name="toolWindowGuid">Find known tool window GUIDs in the <see cref="T:Community.VisualStudio.Toolkit.WindowGuids"/> class.</param>
            <returns>An instance of an <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsWindowFrame"/> or <see langword="null"/>.</returns>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.Windows.GetAllToolWindowsAsync">
            <summary>
            Obtains all window frames for ToolWindows visible in the IDE.
            </summary>
            <returns>All available window frames for ToolWindows.</returns>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.Windows.GetAllDocumentWindowsAsync">
            <summary>
            Obtains all window frames for DocumentWindows visible in the IDE.
            </summary>
            <returns>All available window frames for DocumentWindows.</returns>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.Windows.GetAllWindowsAsync">
            <summary>
            Obtains all window frames for ToolWindows and DocumentWindows visible in the IDE.
            </summary>
            <returns>All available window frames for ToolWindows and DocumentWindows.</returns>
        </member>
        <member name="M:Community.VisualStudio.Toolkit.Windows.GetSolutionExplorerWindowAsync">
            <summary>
            Gets the Solution Explorer window.
            </summary>
            <returns>The Solution Explorer window.</returns>
        </member>
        <member name="T:System.ComponentModel.Design.CommandExtensions">
            <summary>
            Extension methods for <see cref="T:System.Threading.Tasks.Task" /> and <see cref="T:Microsoft.VisualStudio.Threading.JoinableTask" />.
            </summary>
        </member>
        <member name="M:System.ComponentModel.Design.CommandExtensions.ExecuteAsync(System.ComponentModel.Design.CommandID,System.String)">
            <summary>
            Executes the command.
            </summary>
            <returns>Returns <see langword="true"/> if the command was succesfully executed; otherwise <see langword="false"/>.</returns>
        </member>
        <member name="M:System.ComponentModel.Design.CommandExtensions.IsAvailableAsync(System.ComponentModel.Design.CommandID)">
            <summary>
            Checks if a command is enabled and supported.
            </summary>
        </member>
        <member name="T:System.ExceptionExtensions">
            <summary>Extension methods for the Exception class.</summary>
        </member>
        <member name="M:System.ExceptionExtensions.Log(System.Exception)">
            <summary>
            Log the error to the Output Window
            </summary>
            <remarks>
            It creates a new Output Window pane called "Extensions" where it logs to. This is to not pollute
            the existing "Build" pane with errors coming from extensions.
            </remarks>
            <example>
            <code>
            try
            {
                // Do work;
            }
            catch (Exception ex)
            {
                ex.Log();
            }
            </code>
            </example>
        </member>
        <member name="M:System.ExceptionExtensions.Log(System.Exception,System.String,System.Object[])">
            <summary>
            Log the error to the Output Window, along with a formatted string.
            </summary>
            <param name="exception"></param>
            <param name="format">A composite format string.</param>
            <param name="args">An object array that contains zero or more objects to format.</param>
            <remarks>
            It creates a new Output Window pane called "Extensions" where it logs to. This is to not pollute
            the existing "Build" pane with errors coming from extensions.
            </remarks>
            <example>
            <code>
            try
            {
                // Do work;
            }
            catch (Exception ex)
            {
                ex.Log("Failed, parameter was {0}", someParameter);
            }
            </code>
            </example>
        </member>
        <member name="M:System.ExceptionExtensions.Log(System.Exception,System.String)">
            <summary>
            Log the error to the Output Window, along with a message.
            </summary>
            <param name="exception"></param>
            <param name="message">A message to log along with the exception.</param>
            <remarks>
            It creates a new Output Window pane called "Extensions" where it logs to. This is to not pollute
            the existing "Build" pane with errors coming from extensions.
            </remarks>
            <example>
            <code>
            try
            {
                // Do work;
            }
            catch (Exception ex)
            {
                ex.Log("Some Message to log with the exception.");
            }
            </code>
            </example>
        </member>
        <member name="M:System.ExceptionExtensions.LogAsync(System.Exception)">
            <summary>
            Log the error to the Output Window asynchronously.
            </summary>
            <remarks>
            It creates a new Output Window pane called "Extensions" where it logs to. This is to not pollute
            the existing "Build" pane with errors coming from extensions.
            </remarks>
            <example>
            <code>
            try
            {
                // Do work;
            }
            catch (Exception ex)
            {
                await ex.LogAsync();
            }
            </code>
            </example>
        </member>
        <member name="M:System.ExceptionExtensions.LogAsync(System.Exception,System.String,System.Object[])">
            <summary>
            Log the error to the Output Window asynchronously, along with a formatted string.
            </summary>
            <param name="exception"></param>
            <param name="format">A composite format string.</param>
            <param name="args">An object array that contains zero or more objects to format.</param>
            <remarks>
            It creates a new Output Window pane called "Extensions" where it logs to. This is to not pollute
            the existing "Build" pane with errors coming from extensions.
            </remarks>
            <example>
            <code>
            try
            {
                // Do work;
            }
            catch (Exception ex)`
            {
                await ex.LogAsync("Failed, parameter was {0}", someParameter);
            }
            </code>
            </example>
        </member>
        <member name="M:System.ExceptionExtensions.LogAsync(System.Exception,System.String)">
            <summary>
            Log the error to the Output Window asynchronously, along with a message.
            </summary>
            <param name="exception"></param>
            <param name="message">A message to log along with the exception.</param>
            <remarks>
            It creates a new Output Window pane called "Extensions" where it logs to. This is to not pollute
            the existing "Build" pane with errors coming from extensions.
            </remarks>
            <example>
            <code>
            try
            {
                // Do work;
            }
            catch (Exception ex)`
            {
                await ex.LogAsync("Some Message to log with the exception.");
            }
            </code>
            </example>
        </member>
        <member name="T:System.TypeExtensions">
            <summary>
            Extensions for <see cref="T:System.Type"/>
            </summary>
        </member>
        <member name="M:System.TypeExtensions.IsAssignableToGenericType(System.Type,System.Type)">
            <summary>
            Determines if a type is assignable (inherits) from the specified generic type.
            </summary>
            <param name="type"></param>
            <param name="genericType"></param>
            <returns></returns>
        </member>
        <member name="M:System.TypeExtensions.FindGenericBaseType(System.Type,System.Type)">
            <summary>
            Attempts to find the specified generic type in the inheritance hierarchy for the specified type.
            </summary>
            <param name="type"></param>
            <param name="genericType"></param>
            <returns>The generic type if present, otherwise null.</returns>
        </member>
        <member name="T:System.Windows.WindowExtensions">
            <summary>Extension methods for the <see cref="T:System.Windows.Window"/> class.</summary>
        </member>
        <member name="M:System.Windows.WindowExtensions.ShowDialogAsync(System.Windows.Window,System.Windows.WindowStartupLocation)">
            <summary>Shows a window as a dialog.</summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Imaging.Interop.ImageMonikerExtensions">
            <summary>Extension methods for the ImageMoniker class.</summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Imaging.Interop.ImageMonikerExtensions.ToBitmapSourceAsync(Microsoft.VisualStudio.Imaging.Interop.ImageMoniker,System.Int32)">
            <summary>
            Converts an ImageMoniker to a bitmap in the specified size.
            </summary>
            <remarks>
            The background color matches the one in the current Visual Studio theme and changes
            dynamically with changes to the applied theme.
            </remarks>
            <example>
            <code>
            BitmapSource bitmap = await KnownMonikers.Reference.ToBitmapSourceAsync(16);
            </code>
            </example>
        </member>
        <member name="M:Microsoft.VisualStudio.Imaging.Interop.ImageMonikerExtensions.ToUiObjectAsync(Microsoft.VisualStudio.Imaging.Interop.ImageMoniker,System.Int32)">
            <summary>
            Converts an ImageMoniker to an IVsUIObject in the specified size.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Text.ITextBufferExtensions">
            <summary>
            Extension methods for the ITextBuffer interface.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.ITextBufferExtensions.OpenUndoContextAsync(Microsoft.VisualStudio.Text.ITextBuffer,System.String)">
            <summary>
            Opens an undo context with the specified name. Remember to call <c>Complete()</c> and <c>Dispose()</c> to commit the transaction.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.ITextBufferExtensions.GetTextDocument(Microsoft.VisualStudio.Text.ITextBuffer)">
            <summary>
            Gets the text document.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.ITextBufferExtensions.GetFileName(Microsoft.VisualStudio.Text.ITextBuffer)">
            <summary>
            Gets the file name on disk associated with the buffer.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Text.ITextViewExtensions">
            <summary>
            Extension methods for <see cref="T:Microsoft.VisualStudio.Text.Editor.ITextView" />.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Text.ITextViewExtensions.CreateInfoBarAsync(Microsoft.VisualStudio.Text.Editor.ITextView,Microsoft.VisualStudio.Shell.InfoBarModel)">
            <summary>
            Creates an instance of an <see cref="T:Community.VisualStudio.Toolkit.InfoBar"/> in the text view.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsHierarchyExtensions">
            <summary>
            Extension methods for the <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsHierarchyExtensions"/> interface.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsHierarchyExtensions.TryGetItemProperty``1(Microsoft.VisualStudio.Shell.Interop.IVsHierarchy,System.UInt32,System.Int32,``0@)">
            <summary>
            Tries to get a property from a hierarchy item.
            </summary>
            <remarks>
            Inspired by https://github.com/dotnet/roslyn/blob/main/src/VisualStudio/Core/Def/Implementation/ProjectSystem/Extensions/IVsHierarchyExtensions.cs
            </remarks>
        </member>
        <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsHierarchyExtensions.ToHierarchyItemAsync(Microsoft.VisualStudio.Shell.Interop.IVsHierarchy,System.UInt32)">
            <summary>
            Converts a <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsHierarchy"/> to a <see cref="T:Microsoft.VisualStudio.Shell.IVsHierarchyItem"/>.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsHierarchyExtensions.ToHierarchyItem(Microsoft.VisualStudio.Shell.Interop.IVsHierarchy,System.UInt32)">
            <summary>
            Converts a <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsHierarchy"/> to a <see cref="T:Microsoft.VisualStudio.Shell.IVsHierarchyItem"/>.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsHierarchyExtensions.IsSdkStyleProject(Microsoft.VisualStudio.Shell.Interop.IVsHierarchy)">
            <summary>
            Returns whether the specified <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsHierarchy"/> is an 'SDK' style project.
            </summary>
            <param name="hierarchy"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsHierarchyExtensions.IsProjectOfType(Microsoft.VisualStudio.Shell.Interop.IVsHierarchy,System.String)">
            <summary>Check what kind the project is.</summary>
            <param name="hierarchy">The hierarchy instance to check.</param>
            <param name="typeGuid">Use the <see cref="T:Community.VisualStudio.Toolkit.ProjectTypes"/> list of strings.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsHierarchyExtensions.GetSharedAssetsProject(Microsoft.VisualStudio.Shell.Interop.IVsHierarchy)">
            <summary>
            Returns the <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsSharedAssetsProject"/> for the <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsHierarchy"/>.
            </summary>
            <param name="hierarchy"></param>
        </member>
        <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsHierarchyExtensions.IsSharedProject(Microsoft.VisualStudio.Shell.Interop.IVsHierarchy)">
            <summary>
            Returns whether the <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsHierarchy"/> is a shared project.
            </summary>
            <param name="hierarchy"></param>
        </member>
        <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsSharedAssetsProjectExtensions">
            <summary>
            Extension methods for the <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsSharedAssetsProjectExtensions"/> interface.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSharedAssetsProjectExtensions.GetReferencingHierarchies(Microsoft.VisualStudio.Shell.Interop.IVsSharedAssetsProject)">
            <summary>
            Returns a collection of hierarchies that refernce the shared project
            </summary>
            <param name="sharedAssetsProject"></param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsSolutionExtensions">
            <summary>
            Extension methods for the IVsSolution interface.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSolutionExtensions.IsOpen(Microsoft.VisualStudio.Shell.Interop.IVsSolution)">
            <summary>
            Checks if a solution is open.
            </summary>
            <returns><c>true</c> if a solution file is open.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSolutionExtensions.IsOpening(Microsoft.VisualStudio.Shell.Interop.IVsSolution)">
            <summary>
            Checks if a solution is opening.
            </summary>
            <returns><c>true</c> if a solution file is opening.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSolutionExtensions.GetAllProjectHierarchies(Microsoft.VisualStudio.Shell.Interop.IVsSolution,Community.VisualStudio.Toolkit.ProjectStateFilter)">
            <summary>
            Gets all projects in the solution as IVsHierarchy items.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSolutionExtensions.GetAllProjectHierarchies(Microsoft.VisualStudio.Shell.Interop.IVsSolution,Microsoft.VisualStudio.Shell.Interop.__VSENUMPROJFLAGS)">
            <summary>
            Gets all projects in the solution as IVsHierarchy items.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSolutionExtensions.ToSolutionItemAsync(Microsoft.VisualStudio.Shell.Interop.IVsSolution)">
            <summary>
            Gets the <see cref="T:Community.VisualStudio.Toolkit.SolutionItem"/> representing the solution.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Shell.TaskExtensions">
            <summary>
            Extension methods for <see cref="T:System.Threading.Tasks.Task" /> and <see cref="T:Microsoft.VisualStudio.Threading.JoinableTask" />.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Shell.TaskExtensions.FireAndForget(System.Threading.Tasks.Task,System.Boolean)">
            <summary>
            Logs error information to the Output Window if the given <see cref="T:System.Threading.Tasks.Task" /> faults.
            </summary>
            <remarks>
            The task itself starts before this extension method is called and only continues in
            this extension method if the original task throws an unhandled exception.
            This is similar to the <c>task.Forget()</c> method, but it logs any unhandled exception
            thrown from the task to the Output Window.
            </remarks>
        </member>
        <member name="M:Microsoft.VisualStudio.Shell.TaskExtensions.FireAndForget(Microsoft.VisualStudio.Threading.JoinableTask,System.Boolean)">
            <summary>
            Logs error information to the Output Window if the given <see cref="T:Microsoft.VisualStudio.Threading.JoinableTask" /> faults.
            </summary>
            <remarks>
            This is the JoinableTask equivalent of <see cref="M:Microsoft.VisualStudio.Shell.TaskExtensions.FireAndForget(System.Threading.Tasks.Task,System.Boolean)"/>
            </remarks>
        </member>
        <member name="M:Microsoft.VisualStudio.Shell.TaskExtensions.StartOnIdleShim(Microsoft.VisualStudio.Threading.JoinableTaskFactory,System.Action,Microsoft.VisualStudio.Shell.VsTaskRunContext)">
            <summary>
            Schedules a delegate for background execution on the UI thread without inheriting any claim to the UI thread from its caller.
            </summary>
            <remarks>
            StartOnIdle is a included in later versions of the SDK, but this shim is to add support to VS 14+
            </remarks>
        </member>
        <member name="T:Microsoft.VisualStudio.TextManager.Interop.IVsTextViewExtensions">
            <summary>
            Extending the IVsTextView interface
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TextManager.Interop.IVsTextViewExtensions.ToDocumentViewAsync(Microsoft.VisualStudio.TextManager.Interop.IVsTextView)">
            <summary>
            Converts an <see cref="T:Microsoft.VisualStudio.TextManager.Interop.IVsTextView"/> to a <see cref="T:Community.VisualStudio.Toolkit.DocumentView"/>.
            </summary>
            <returns><see langword="null"/> if the textView is null or the conversion failed.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TextManager.Interop.IVsTextViewExtensions.ToDocumentView(Microsoft.VisualStudio.TextManager.Interop.IVsTextView)">
            <summary>
            Converts an <see cref="T:Microsoft.VisualStudio.TextManager.Interop.IVsTextView"/> to a <see cref="T:Community.VisualStudio.Toolkit.DocumentView"/>.
            </summary>
            <returns><see langword="null"/> if the textView is null or the conversion failed.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TextManager.Interop.IVsTextViewExtensions.ToDocumentViewAsync(Microsoft.VisualStudio.Text.Editor.IWpfTextView)">
            <summary>
            Converts an <see cref="T:Microsoft.VisualStudio.Text.Editor.IWpfTextView"/> to a <see cref="T:Community.VisualStudio.Toolkit.DocumentView"/>.
            </summary>
            <returns><see langword="null"/> if the textView is null or the conversion failed.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TextManager.Interop.IVsTextViewExtensions.ToDocumentView(Microsoft.VisualStudio.Text.Editor.IWpfTextView)">
            <summary>
            Converts an <see cref="T:Microsoft.VisualStudio.Text.Editor.IWpfTextView"/> to a <see cref="T:Community.VisualStudio.Toolkit.DocumentView"/>.
            </summary>
            <returns><see langword="null"/> if the textView is null or the conversion failed.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TextManager.Interop.IVsTextViewExtensions.ToIWpfTextViewAsync(Microsoft.VisualStudio.TextManager.Interop.IVsTextView)">
            <summary>
            Converts the <see cref="T:Microsoft.VisualStudio.TextManager.Interop.IVsTextView"/> to an <see cref="T:Microsoft.VisualStudio.Text.Editor.IWpfTextView"/>/
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TextManager.Interop.IVsTextViewExtensions.ToIWpfTextView(Microsoft.VisualStudio.TextManager.Interop.IVsTextView)">
            <summary>
            Converts the <see cref="T:Microsoft.VisualStudio.TextManager.Interop.IVsTextView"/> to an <see cref="T:Microsoft.VisualStudio.Text.Editor.IWpfTextView"/>/
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TextManager.Interop.IVsTextViewExtensions.ToIVsTextViewAsync(Microsoft.VisualStudio.Text.Editor.IWpfTextView)">
            <summary>
            Converts the <see cref="T:Microsoft.VisualStudio.TextManager.Interop.IVsTextView"/> to an <see cref="T:Microsoft.VisualStudio.Text.Editor.IWpfTextView"/>/
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TextManager.Interop.IVsTextViewExtensions.ToIVsTextView(Microsoft.VisualStudio.Text.Editor.IWpfTextView)">
            <summary>
            Converts the <see cref="T:Microsoft.VisualStudio.TextManager.Interop.IVsTextView"/> to an <see cref="T:Microsoft.VisualStudio.Text.Editor.IWpfTextView"/>/
            </summary>
            <returns></returns>
        </member>
    </members>
</doc>
